begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|docker
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_class
specifier|public
class|class
name|DockerServiceImplTest
block|{
specifier|private
name|DockerServiceImpl
name|dockerService
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setup
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.base"
argument_list|,
literal|"."
argument_list|)
expr_stmt|;
name|dockerService
operator|=
operator|new
name|DockerServiceImpl
argument_list|()
expr_stmt|;
name|File
name|storage
init|=
operator|new
name|File
argument_list|(
literal|"docker"
argument_list|)
decl_stmt|;
name|storage
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|dockerService
operator|.
name|setStorageLocation
argument_list|(
name|storage
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
literal|"Require a running docker daemon"
argument_list|)
specifier|public
name|void
name|testProvision
parameter_list|()
throws|throws
name|Exception
block|{
name|dockerService
operator|.
name|provision
argument_list|(
literal|"test"
argument_list|,
literal|"8101"
argument_list|,
literal|"1099"
argument_list|,
literal|"44444"
argument_list|,
literal|"8181"
argument_list|,
literal|false
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


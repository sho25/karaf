begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|docker
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|docker
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|DockerServiceImpl
implements|implements
name|DockerService
block|{
specifier|private
name|File
name|storageLocation
decl_stmt|;
specifier|public
name|File
name|getStorageLocation
parameter_list|()
block|{
return|return
name|storageLocation
return|;
block|}
specifier|public
name|void
name|setStorageLocation
parameter_list|(
name|File
name|storageLocation
parameter_list|)
block|{
name|this
operator|.
name|storageLocation
operator|=
name|storageLocation
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Container
argument_list|>
name|ps
parameter_list|(
name|boolean
name|showAll
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|ps
argument_list|(
name|showAll
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Info
name|info
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|info
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|Version
name|version
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|version
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|create
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
comment|// pull the java:8-jre-alpine image
comment|// TODO it should be changed to the official karaf image as soon as it's available on Docker HUB
name|pull
argument_list|(
literal|"java"
argument_list|,
literal|"8-jre-alpine"
argument_list|,
literal|true
argument_list|,
name|url
argument_list|)
expr_stmt|;
comment|// create a default Karaf docker container configuration
name|ContainerConfig
name|config
init|=
operator|new
name|ContainerConfig
argument_list|()
decl_stmt|;
name|config
operator|.
name|setTty
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAttachStdin
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAttachStderr
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAttachStdout
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// TODO it should be changed to the official karaf image as soon as it's available on Docker HUB
name|config
operator|.
name|setImage
argument_list|(
literal|"java:8-jre-alpine"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setHostname
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|config
operator|.
name|setUser
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|config
operator|.
name|setCmd
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"/opt/apache-karaf/bin/karaf"
block|}
argument_list|)
expr_stmt|;
name|config
operator|.
name|setWorkingDir
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|config
operator|.
name|setOpenStdin
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setStdinOnce
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|exposedPorts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"8101/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"1099/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"44444/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"8181/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setExposedPorts
argument_list|(
name|exposedPorts
argument_list|)
expr_stmt|;
name|HostConfig
name|hostConfig
init|=
operator|new
name|HostConfig
argument_list|()
decl_stmt|;
name|hostConfig
operator|.
name|setPrivileged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setPublishAllPorts
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// getting the container storage
name|File
name|containerStorage
init|=
operator|new
name|File
argument_list|(
name|storageLocation
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|containerStorage
operator|.
name|exists
argument_list|()
condition|)
block|{
name|hostConfig
operator|.
name|setBinds
argument_list|(
operator|new
name|String
index|[]
block|{
name|containerStorage
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|":/opt/apache-karaf"
block|}
argument_list|)
expr_stmt|;
block|}
name|hostConfig
operator|.
name|setNetworkMode
argument_list|(
literal|"bridge"
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setLxcConf
argument_list|(
operator|new
name|String
index|[]
block|{}
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|HostPortBinding
argument_list|>
argument_list|>
name|portBindings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// ssh
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|sshPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|sshPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|sshPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|sshPortBinding
operator|.
name|setHostPort
argument_list|(
literal|"8101"
argument_list|)
expr_stmt|;
name|sshPortBindings
operator|.
name|add
argument_list|(
name|sshPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"8101/tcp"
argument_list|,
name|sshPortBindings
argument_list|)
expr_stmt|;
comment|// jmx rmi
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|jmxPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|jmxPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|jmxPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|jmxPortBinding
operator|.
name|setHostPort
argument_list|(
literal|"1099"
argument_list|)
expr_stmt|;
name|jmxPortBindings
operator|.
name|add
argument_list|(
name|jmxPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"1099/tcp"
argument_list|,
name|jmxPortBindings
argument_list|)
expr_stmt|;
comment|// jmx rmi registry
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|jmxRegistryPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|jmxRegistryPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|jmxRegistryPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|jmxRegistryPortBinding
operator|.
name|setHostPort
argument_list|(
literal|"44444"
argument_list|)
expr_stmt|;
name|jmxRegistryPortBindings
operator|.
name|add
argument_list|(
name|jmxRegistryPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"44444/tcp"
argument_list|,
name|jmxRegistryPortBindings
argument_list|)
expr_stmt|;
comment|// http
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|httpPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|httpPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|httpPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|httpPortBinding
operator|.
name|setHostPort
argument_list|(
literal|"8181"
argument_list|)
expr_stmt|;
name|httpPortBindings
operator|.
name|add
argument_list|(
name|httpPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"8181/tcp"
argument_list|,
name|httpPortBindings
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setPortBindings
argument_list|(
name|portBindings
argument_list|)
expr_stmt|;
name|config
operator|.
name|setHostConfig
argument_list|(
name|hostConfig
argument_list|)
expr_stmt|;
name|create
argument_list|(
name|name
argument_list|,
name|url
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|create
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|,
name|ContainerConfig
name|config
parameter_list|)
throws|throws
name|Exception
block|{
comment|// creating the docker container
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|create
argument_list|(
name|config
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|provision
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|sshPort
parameter_list|,
name|String
name|jmxRmiPort
parameter_list|,
name|String
name|jmxRmiRegistryPort
parameter_list|,
name|String
name|httpPort
parameter_list|,
name|boolean
name|copy
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
comment|// pull the java:8-jre-alpine image
name|pull
argument_list|(
literal|"java"
argument_list|,
literal|"8-jre-alpine"
argument_list|,
literal|true
argument_list|,
name|url
argument_list|)
expr_stmt|;
comment|// use Karaf instance as base
name|File
name|karafBase
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.base"
argument_list|)
argument_list|)
decl_stmt|;
name|File
name|containerStorage
decl_stmt|;
if|if
condition|(
name|copy
condition|)
block|{
name|containerStorage
operator|=
operator|new
name|File
argument_list|(
name|storageLocation
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|containerStorage
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|copy
argument_list|(
name|karafBase
argument_list|,
name|containerStorage
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/karaf"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/client"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/inc"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/instance"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/setenv"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/shell"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/start"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/status"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
name|chmod
argument_list|(
operator|new
name|File
argument_list|(
name|containerStorage
argument_list|,
literal|"bin/stop"
argument_list|)
argument_list|,
literal|"a+x"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|containerStorage
operator|=
name|karafBase
expr_stmt|;
block|}
comment|// creating the Karaf Docker container
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|ContainerConfig
name|config
init|=
operator|new
name|ContainerConfig
argument_list|()
decl_stmt|;
name|config
operator|.
name|setTty
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAttachStdout
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAttachStderr
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAttachStdin
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setImage
argument_list|(
literal|"java:8-jre-alpine"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setHostname
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|config
operator|.
name|setUser
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|config
operator|.
name|setCmd
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"/opt/apache-karaf/bin/karaf"
block|}
argument_list|)
expr_stmt|;
name|config
operator|.
name|setWorkingDir
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|config
operator|.
name|setOpenStdin
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|config
operator|.
name|setStdinOnce
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|exposedPorts
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"8101/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"1099/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"44444/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|exposedPorts
operator|.
name|put
argument_list|(
literal|"8181/tcp"
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|config
operator|.
name|setExposedPorts
argument_list|(
name|exposedPorts
argument_list|)
expr_stmt|;
name|HostConfig
name|hostConfig
init|=
operator|new
name|HostConfig
argument_list|()
decl_stmt|;
name|hostConfig
operator|.
name|setPrivileged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setPublishAllPorts
argument_list|(
literal|false
argument_list|)
expr_stmt|;
comment|// binding filesystem
name|hostConfig
operator|.
name|setBinds
argument_list|(
operator|new
name|String
index|[]
block|{
name|containerStorage
operator|.
name|getAbsolutePath
argument_list|()
operator|+
literal|":/opt/apache-karaf"
block|}
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setNetworkMode
argument_list|(
literal|"bridge"
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setLxcConf
argument_list|(
operator|new
name|String
index|[]
block|{}
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|HostPortBinding
argument_list|>
argument_list|>
name|portBindings
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// ssh
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|sshPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|sshPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|sshPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|sshPortBinding
operator|.
name|setHostPort
argument_list|(
name|sshPort
argument_list|)
expr_stmt|;
name|sshPortBindings
operator|.
name|add
argument_list|(
name|sshPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"8101/tcp"
argument_list|,
name|sshPortBindings
argument_list|)
expr_stmt|;
comment|// jmx rmi
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|jmxPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|jmxPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|jmxPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|jmxPortBinding
operator|.
name|setHostPort
argument_list|(
name|jmxRmiPort
argument_list|)
expr_stmt|;
name|jmxPortBindings
operator|.
name|add
argument_list|(
name|jmxPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"1099/tcp"
argument_list|,
name|jmxPortBindings
argument_list|)
expr_stmt|;
comment|// jmx rmi registry
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|jmxRegistryPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|jmxRegistryPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|jmxRegistryPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|jmxRegistryPortBinding
operator|.
name|setHostPort
argument_list|(
name|jmxRmiRegistryPort
argument_list|)
expr_stmt|;
name|jmxRegistryPortBindings
operator|.
name|add
argument_list|(
name|jmxRegistryPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"44444/tcp"
argument_list|,
name|jmxRegistryPortBindings
argument_list|)
expr_stmt|;
comment|// http
name|List
argument_list|<
name|HostPortBinding
argument_list|>
name|httpPortBindings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|HostPortBinding
name|httpPortBinding
init|=
operator|new
name|HostPortBinding
argument_list|()
decl_stmt|;
name|httpPortBinding
operator|.
name|setHostIp
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|httpPortBinding
operator|.
name|setHostPort
argument_list|(
name|httpPort
argument_list|)
expr_stmt|;
name|httpPortBindings
operator|.
name|add
argument_list|(
name|httpPortBinding
argument_list|)
expr_stmt|;
name|portBindings
operator|.
name|put
argument_list|(
literal|"8181/tcp"
argument_list|,
name|httpPortBindings
argument_list|)
expr_stmt|;
name|hostConfig
operator|.
name|setPortBindings
argument_list|(
name|portBindings
argument_list|)
expr_stmt|;
name|config
operator|.
name|setHostConfig
argument_list|(
name|hostConfig
argument_list|)
expr_stmt|;
name|dockerClient
operator|.
name|create
argument_list|(
name|config
argument_list|,
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|start
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|timeToWait
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|stop
argument_list|(
name|name
argument_list|,
name|timeToWait
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restart
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|timeToWait
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|restart
argument_list|(
name|name
argument_list|,
name|timeToWait
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|kill
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|signal
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|kill
argument_list|(
name|name
argument_list|,
name|signal
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|pause
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|pause
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unpause
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|unpause
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|rename
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|newName
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|rename
argument_list|(
name|name
argument_list|,
name|newName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|rm
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|removeVolumes
parameter_list|,
name|boolean
name|force
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|rm
argument_list|(
name|name
argument_list|,
name|removeVolumes
argument_list|,
name|force
argument_list|)
expr_stmt|;
name|File
name|containerStorage
init|=
operator|new
name|File
argument_list|(
name|storageLocation
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|containerStorage
operator|.
name|exists
argument_list|()
condition|)
block|{
name|containerStorage
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|logs
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|stdout
parameter_list|,
name|boolean
name|stderr
parameter_list|,
name|boolean
name|timestamps
parameter_list|,
name|boolean
name|details
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|String
name|log
init|=
name|dockerClient
operator|.
name|logs
argument_list|(
name|name
argument_list|,
name|stdout
argument_list|,
name|stderr
argument_list|,
name|timestamps
argument_list|,
name|details
argument_list|)
decl_stmt|;
return|return
name|log
return|;
block|}
annotation|@
name|Override
specifier|public
name|Top
name|top
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|top
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|commit
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|repo
parameter_list|,
name|String
name|tag
parameter_list|,
name|String
name|message
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|commit
argument_list|(
name|name
argument_list|,
literal|null
argument_list|,
name|message
argument_list|,
name|repo
argument_list|,
name|tag
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|Image
argument_list|>
name|images
parameter_list|(
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|images
argument_list|(
literal|true
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|pull
parameter_list|(
name|String
name|image
parameter_list|,
name|String
name|tag
parameter_list|,
name|boolean
name|verbose
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|pull
argument_list|(
name|image
argument_list|,
name|tag
argument_list|,
name|verbose
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ImageSearch
argument_list|>
name|search
parameter_list|(
name|String
name|term
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|search
argument_list|(
name|term
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Container
name|inspect
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|inspect
argument_list|(
name|name
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|push
parameter_list|(
name|String
name|image
parameter_list|,
name|String
name|tag
parameter_list|,
name|boolean
name|verbose
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|push
argument_list|(
name|image
argument_list|,
name|tag
argument_list|,
name|verbose
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|ImageHistory
argument_list|>
name|history
parameter_list|(
name|String
name|image
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
name|dockerClient
operator|.
name|history
argument_list|(
name|image
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|tag
parameter_list|(
name|String
name|image
parameter_list|,
name|String
name|repo
parameter_list|,
name|String
name|tag
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|tag
argument_list|(
name|image
argument_list|,
name|repo
argument_list|,
name|tag
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|rmi
parameter_list|(
name|String
name|image
parameter_list|,
name|boolean
name|force
parameter_list|,
name|boolean
name|noprune
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DockerClient
name|dockerClient
init|=
operator|new
name|DockerClient
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|dockerClient
operator|.
name|rmi
argument_list|(
name|image
argument_list|,
name|force
argument_list|,
name|noprune
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|copy
parameter_list|(
name|File
name|source
parameter_list|,
name|File
name|destination
parameter_list|)
throws|throws
name|IOException
block|{
if|if
condition|(
name|source
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"docker"
argument_list|)
condition|)
block|{
comment|// ignore inner docker
return|return;
block|}
if|if
condition|(
name|source
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"cache.lock"
argument_list|)
condition|)
block|{
comment|// ignore cache.lock file
return|return;
block|}
if|if
condition|(
name|source
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"lock"
argument_list|)
condition|)
block|{
comment|// ignore lock file
return|return;
block|}
if|if
condition|(
name|source
operator|.
name|getName
argument_list|()
operator|.
name|matches
argument_list|(
literal|"transaction_\\d+\\.log"
argument_list|)
condition|)
block|{
comment|// ignore active txlog files
return|return;
block|}
if|if
condition|(
name|source
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|destination
operator|.
name|exists
argument_list|()
condition|)
block|{
name|destination
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
block|}
name|String
index|[]
name|children
init|=
name|source
operator|.
name|list
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|child
range|:
name|children
control|)
block|{
name|copy
argument_list|(
operator|new
name|File
argument_list|(
name|source
argument_list|,
name|child
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|destination
argument_list|,
name|child
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
try|try
init|(
name|InputStream
name|in
init|=
operator|new
name|FileInputStream
argument_list|(
name|source
argument_list|)
init|;                     OutputStream out = new FileOutputStream(destination)
block|)
block|{
operator|new
name|StreamUtils
argument_list|()
operator|.
name|copy
argument_list|(
name|in
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

begin_class
class|class
name|StreamUtils
block|{
specifier|public
name|StreamUtils
parameter_list|()
block|{         }
specifier|public
name|void
name|close
parameter_list|(
name|Closeable
modifier|...
name|closeables
parameter_list|)
block|{
for|for
control|(
name|Closeable
name|c
range|:
name|closeables
control|)
block|{
try|try
block|{
if|if
condition|(
name|c
operator|!=
literal|null
condition|)
block|{
name|c
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
block|}
block|}
specifier|public
name|void
name|close
parameter_list|(
name|Iterable
argument_list|<
name|Closeable
argument_list|>
name|closeables
parameter_list|)
block|{
for|for
control|(
name|Closeable
name|c
range|:
name|closeables
control|)
block|{
try|try
block|{
if|if
condition|(
name|c
operator|!=
literal|null
condition|)
block|{
name|c
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
block|}
block|}
specifier|public
name|void
name|copy
parameter_list|(
specifier|final
name|InputStream
name|input
parameter_list|,
specifier|final
name|OutputStream
name|output
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|1024
operator|*
literal|16
index|]
decl_stmt|;
name|int
name|n
decl_stmt|;
while|while
condition|(
operator|(
name|n
operator|=
name|input
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|output
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|n
argument_list|)
expr_stmt|;
block|}
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
end_class

begin_function
specifier|private
name|int
name|chmod
parameter_list|(
name|File
name|serviceFile
parameter_list|,
name|String
name|mode
parameter_list|)
throws|throws
name|IOException
block|{
name|java
operator|.
name|lang
operator|.
name|ProcessBuilder
name|builder
init|=
operator|new
name|java
operator|.
name|lang
operator|.
name|ProcessBuilder
argument_list|()
decl_stmt|;
name|builder
operator|.
name|command
argument_list|(
literal|"chmod"
argument_list|,
name|mode
argument_list|,
name|serviceFile
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|java
operator|.
name|lang
operator|.
name|Process
name|p
init|=
name|builder
operator|.
name|start
argument_list|()
decl_stmt|;
try|try
block|{
return|return
name|p
operator|.
name|waitFor
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
name|e
parameter_list|)
block|{
throw|throw
operator|(
name|IOException
operator|)
operator|new
name|InterruptedIOException
argument_list|()
operator|.
name|initCause
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
end_function

unit|}
end_unit


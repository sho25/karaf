begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|container
operator|.
name|internal
operator|.
name|runner
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Abstract implementation of the script runner containging the entire self repeating code.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|BaseScriptRunner
implements|implements
name|Runner
block|{
specifier|protected
name|InternalRunner
name|runner
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|makeExec
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|protected
name|String
name|exec
decl_stmt|;
specifier|public
name|BaseScriptRunner
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|makeExec
parameter_list|,
name|String
name|exec
parameter_list|)
block|{
name|this
operator|.
name|makeExec
operator|=
name|makeExec
expr_stmt|;
name|this
operator|.
name|exec
operator|=
name|exec
expr_stmt|;
name|runner
operator|=
operator|new
name|InternalRunner
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|exec
parameter_list|(
specifier|final
name|String
index|[]
name|environment
parameter_list|,
specifier|final
name|File
name|karafBase
parameter_list|,
name|String
name|javaHome
parameter_list|,
name|String
index|[]
name|javaOpts
parameter_list|,
name|String
index|[]
name|javaEndorsedDirs
parameter_list|,
name|String
index|[]
name|javaExtDirs
parameter_list|,
name|String
name|karafHome
parameter_list|,
name|String
name|karafData
parameter_list|,
name|String
index|[]
name|karafOpts
parameter_list|,
name|String
index|[]
name|opts
parameter_list|,
name|String
index|[]
name|classPath
parameter_list|,
name|String
name|main
parameter_list|,
name|String
name|options
parameter_list|)
block|{
name|makeEnvironmentExecutable
argument_list|(
name|karafBase
argument_list|)
expr_stmt|;
name|startSystem
argument_list|(
name|environment
argument_list|,
name|karafBase
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|startSystem
parameter_list|(
specifier|final
name|String
index|[]
name|environment
parameter_list|,
specifier|final
name|File
name|karafBase
parameter_list|)
block|{
operator|new
name|Thread
argument_list|(
literal|"KarafJavaRunner"
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|CommandLineBuilder
name|commandLine
init|=
name|createCommandLine
argument_list|(
name|environment
argument_list|,
name|karafBase
argument_list|)
decl_stmt|;
name|runner
operator|.
name|exec
argument_list|(
name|commandLine
argument_list|,
name|karafBase
argument_list|,
name|environment
argument_list|)
expr_stmt|;
block|}
block|}
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|CommandLineBuilder
name|createCommandLine
parameter_list|(
specifier|final
name|String
index|[]
name|environment
parameter_list|,
specifier|final
name|File
name|karafBase
parameter_list|)
function_decl|;
specifier|private
name|void
name|makeEnvironmentExecutable
parameter_list|(
specifier|final
name|File
name|karafBase
parameter_list|)
block|{
operator|new
name|File
argument_list|(
name|karafBase
argument_list|,
name|exec
argument_list|)
operator|.
name|setExecutable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
for|for
control|(
name|String
name|execEntry
range|:
name|makeExec
control|)
block|{
operator|new
name|File
argument_list|(
name|karafBase
argument_list|,
name|execEntry
argument_list|)
operator|.
name|setExecutable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|shutdown
parameter_list|()
block|{
name|runner
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


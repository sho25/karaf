begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|container
operator|.
name|internal
operator|.
name|runner
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Very simple asynchronous implementation of Java Runner. Exec is being invoked in a fresh Thread.  */
end_comment

begin_class
specifier|public
class|class
name|KarafJavaRunner
implements|implements
name|Runner
block|{
specifier|private
name|InternalRunner
name|runner
decl_stmt|;
specifier|public
name|KarafJavaRunner
parameter_list|()
block|{
name|runner
operator|=
operator|new
name|InternalRunner
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|exec
parameter_list|(
specifier|final
name|String
index|[]
name|environment
parameter_list|,
specifier|final
name|File
name|karafBase
parameter_list|,
specifier|final
name|String
name|javaHome
parameter_list|,
specifier|final
name|String
index|[]
name|javaOpts
parameter_list|,
specifier|final
name|String
index|[]
name|javaEndorsedDirs
parameter_list|,
specifier|final
name|String
index|[]
name|javaExtDirs
parameter_list|,
specifier|final
name|String
name|karafHome
parameter_list|,
specifier|final
name|String
name|karafData
parameter_list|,
specifier|final
name|String
index|[]
name|karafOpts
parameter_list|,
specifier|final
name|String
index|[]
name|opts
parameter_list|,
specifier|final
name|String
index|[]
name|classPath
parameter_list|,
specifier|final
name|String
name|main
parameter_list|,
specifier|final
name|String
name|options
parameter_list|)
block|{
operator|new
name|Thread
argument_list|(
literal|"KarafJavaRunner"
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|String
name|cp
init|=
name|buildCmdSeparatedString
argument_list|(
name|classPath
argument_list|)
decl_stmt|;
name|String
name|endDirs
init|=
name|buildCmdSeparatedString
argument_list|(
name|javaEndorsedDirs
argument_list|)
decl_stmt|;
name|String
name|extDirs
init|=
name|buildCmdSeparatedString
argument_list|(
name|javaExtDirs
argument_list|)
decl_stmt|;
specifier|final
name|CommandLineBuilder
name|commandLine
init|=
operator|new
name|CommandLineBuilder
argument_list|()
operator|.
name|append
argument_list|(
name|getJavaExecutable
argument_list|(
name|javaHome
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
name|javaOpts
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Djava.endorsed.dirs="
operator|+
name|endDirs
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Djava.ext.dirs="
operator|+
name|extDirs
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Dkaraf.instances="
operator|+
name|karafHome
operator|+
literal|"/instances"
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Dkaraf.home="
operator|+
name|karafHome
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Dkaraf.base="
operator|+
name|karafBase
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Dkaraf.data="
operator|+
name|karafData
argument_list|)
operator|.
name|append
argument_list|(
literal|"-Djava.util.logging.config.file="
operator|+
name|karafBase
operator|+
literal|"/etc/java.util.logging.properties"
argument_list|)
operator|.
name|append
argument_list|(
name|karafOpts
argument_list|)
operator|.
name|append
argument_list|(
name|opts
argument_list|)
operator|.
name|append
argument_list|(
literal|"-cp"
argument_list|)
operator|.
name|append
argument_list|(
name|cp
argument_list|)
operator|.
name|append
argument_list|(
name|main
argument_list|)
operator|.
name|append
argument_list|(
name|options
argument_list|)
decl_stmt|;
name|runner
operator|.
name|exec
argument_list|(
name|commandLine
argument_list|,
name|karafBase
argument_list|,
name|environment
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|buildCmdSeparatedString
parameter_list|(
specifier|final
name|String
index|[]
name|splitted
parameter_list|)
block|{
specifier|final
name|StringBuilder
name|together
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|path
range|:
name|splitted
control|)
block|{
if|if
condition|(
name|together
operator|.
name|length
argument_list|()
operator|!=
literal|0
condition|)
block|{
name|together
operator|.
name|append
argument_list|(
name|File
operator|.
name|pathSeparator
argument_list|)
expr_stmt|;
block|}
name|together
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
return|return
name|together
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
name|String
name|getJavaExecutable
parameter_list|(
specifier|final
name|String
name|javaHome
parameter_list|)
block|{
if|if
condition|(
name|javaHome
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"JAVA_HOME is not set."
argument_list|)
throw|;
block|}
return|return
name|javaHome
operator|+
literal|"/bin/java"
return|;
block|}
block|}
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|shutdown
parameter_list|()
block|{
name|runner
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|exam
operator|.
name|options
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|options
operator|.
name|MavenUrlReference
import|;
end_import

begin_comment
comment|/**  * Option describing the karaf distribution to use; This option uses the specified scripts to run the environment  * depending on the platform. If a platform is defined and run on another platform it is simply ignored.  */
end_comment

begin_class
specifier|public
class|class
name|KarafDistributionKitConfigurationOption
extends|extends
name|KarafDistributionBaseConfigurationOption
block|{
specifier|public
enum|enum
name|Platform
block|{
name|WINDOWS
block|,
name|NIX
block|}
specifier|private
name|Platform
name|platform
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|makeExec
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|String
name|exec
decl_stmt|;
specifier|public
name|KarafDistributionKitConfigurationOption
parameter_list|(
name|KarafDistributionBaseConfigurationOption
name|base
parameter_list|,
name|Platform
name|platform
parameter_list|)
block|{
name|super
argument_list|(
name|base
argument_list|)
expr_stmt|;
name|setPlatform
argument_list|(
name|platform
argument_list|)
expr_stmt|;
block|}
specifier|public
name|KarafDistributionKitConfigurationOption
parameter_list|(
name|MavenUrlReference
name|frameworkURLReference
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|karafVersion
parameter_list|,
name|Platform
name|platform
parameter_list|)
block|{
name|super
argument_list|(
name|frameworkURLReference
argument_list|,
name|name
argument_list|,
name|karafVersion
argument_list|)
expr_stmt|;
name|setPlatform
argument_list|(
name|platform
argument_list|)
expr_stmt|;
block|}
specifier|public
name|KarafDistributionKitConfigurationOption
parameter_list|(
name|MavenUrlReference
name|frameworkURLReference
parameter_list|,
name|Platform
name|platform
parameter_list|)
block|{
name|super
argument_list|(
name|frameworkURLReference
argument_list|)
expr_stmt|;
name|setPlatform
argument_list|(
name|platform
argument_list|)
expr_stmt|;
block|}
specifier|public
name|KarafDistributionKitConfigurationOption
parameter_list|(
name|String
name|frameworkURL
parameter_list|,
name|String
name|name
parameter_list|,
name|String
name|karafVersion
parameter_list|,
name|Platform
name|platform
parameter_list|)
block|{
name|super
argument_list|(
name|frameworkURL
argument_list|,
name|name
argument_list|,
name|karafVersion
argument_list|)
expr_stmt|;
name|setPlatform
argument_list|(
name|platform
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|setPlatform
parameter_list|(
name|Platform
name|platform
parameter_list|)
block|{
name|this
operator|.
name|platform
operator|=
name|platform
expr_stmt|;
if|if
condition|(
name|platform
operator|.
name|equals
argument_list|(
name|Platform
operator|.
name|WINDOWS
argument_list|)
condition|)
block|{
name|exec
operator|=
literal|"bin\\karaf.bat"
expr_stmt|;
block|}
else|else
block|{
name|exec
operator|=
literal|"bin/karaf"
expr_stmt|;
block|}
block|}
specifier|public
name|KarafDistributionKitConfigurationOption
name|filesToMakeExecutable
parameter_list|(
name|String
modifier|...
name|platformRelativeFilePath
parameter_list|)
block|{
for|for
control|(
name|String
name|platformRelativePath
range|:
name|platformRelativeFilePath
control|)
block|{
name|makeExec
operator|.
name|add
argument_list|(
name|platformRelativePath
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
specifier|public
name|KarafDistributionKitConfigurationOption
name|executable
parameter_list|(
name|String
name|platformRelativeFilePath
parameter_list|)
block|{
name|exec
operator|=
name|platformRelativeFilePath
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Platform
name|getPlatform
parameter_list|()
block|{
return|return
name|platform
return|;
block|}
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getMakeExec
parameter_list|()
block|{
return|return
name|makeExec
return|;
block|}
specifier|public
name|String
name|getExec
parameter_list|()
block|{
return|return
name|exec
return|;
block|}
block|}
end_class

end_unit


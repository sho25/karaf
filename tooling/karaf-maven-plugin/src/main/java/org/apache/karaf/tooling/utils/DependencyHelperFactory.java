begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|utils
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|execution
operator|.
name|MavenSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|project
operator|.
name|MavenProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|PlexusContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|component
operator|.
name|repository
operator|.
name|exception
operator|.
name|ComponentLookupException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|RepositorySystem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|RepositorySystemSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|aether
operator|.
name|repository
operator|.
name|RemoteRepository
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Service-locator based factory for available Aether system.  *  *<p>Supports the Eclipse implementation for Maven 3.1.x+</p>  */
end_comment

begin_class
specifier|public
class|class
name|DependencyHelperFactory
block|{
comment|/**      * Create a new {@link DependencyHelper} based on what has been found in      * {@link org.codehaus.plexus.PlexusContainer}.      *      * @param container    The Maven Plexus container to use.      * @param mavenProject The Maven project to use.      * @param mavenSession The Maven session.      * @param cacheSize    Size of the artifact/file LRU cache      * @param log          The log to use for the messages.      *      * @return The {@link DependencyHelper} depending of the Maven version used.      *      * @throws MojoExecutionException If the plugin execution fails.      */
specifier|public
specifier|static
name|DependencyHelper
name|createDependencyHelper
parameter_list|(
name|PlexusContainer
name|container
parameter_list|,
name|MavenProject
name|mavenProject
parameter_list|,
name|MavenSession
name|mavenSession
parameter_list|,
name|int
name|cacheSize
parameter_list|,
name|Log
name|log
parameter_list|)
throws|throws
name|MojoExecutionException
block|{
try|try
block|{
specifier|final
name|RepositorySystem
name|system
init|=
name|container
operator|.
name|lookup
argument_list|(
name|RepositorySystem
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|RepositorySystemSession
name|session
init|=
name|mavenSession
operator|.
name|getRepositorySession
argument_list|()
decl_stmt|;
specifier|final
name|List
argument_list|<
name|RemoteRepository
argument_list|>
name|repositories
init|=
name|mavenProject
operator|.
name|getRemoteProjectRepositories
argument_list|()
decl_stmt|;
return|return
operator|new
name|Dependency31Helper
argument_list|(
name|repositories
argument_list|,
name|session
argument_list|,
name|system
argument_list|,
name|cacheSize
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ComponentLookupException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|MojoExecutionException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|features
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|sonatype
operator|.
name|aether
operator|.
name|util
operator|.
name|artifact
operator|.
name|DefaultArtifact
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|features
operator|.
name|MavenUtil
operator|.
name|aetherToMvn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|features
operator|.
name|MavenUtil
operator|.
name|artifactToMvn
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|features
operator|.
name|MavenUtil
operator|.
name|mvnToAether
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|features
operator|.
name|MavenUtil
operator|.
name|pathFromAether
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|tooling
operator|.
name|features
operator|.
name|MavenUtil
operator|.
name|pathFromMaven
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_comment
comment|/**  * @version $Rev:$ $Date:$  */
end_comment

begin_class
specifier|public
class|class
name|MavenUtilTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testMvnToAether
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"org.foo:org.foo.bar:1.0-SNAPSHOT"
argument_list|,
name|mvnToAether
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.foo:org.foo.bar:kar:1.0-SNAPSHOT"
argument_list|,
name|mvnToAether
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/kar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.foo:org.foo.bar:xml:features:1.0-SNAPSHOT"
argument_list|,
name|mvnToAether
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/xml/features"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAetherToMvn
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT"
argument_list|,
name|aetherToMvn
argument_list|(
literal|"org.foo:org.foo.bar:1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/kar"
argument_list|,
name|aetherToMvn
argument_list|(
literal|"org.foo:org.foo.bar:kar:1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/xml/features"
argument_list|,
name|aetherToMvn
argument_list|(
literal|"org.foo:org.foo.bar:xml:features:1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPathFromMvn
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"org/foo/org.foo.bar/1.0-SNAPSHOT/org.foo.bar-1.0-SNAPSHOT.jar"
argument_list|,
name|pathFromMaven
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org/foo/org.foo.bar/1.0-SNAPSHOT/org.foo.bar-1.0-SNAPSHOT.kar"
argument_list|,
name|pathFromMaven
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/kar"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org/foo/org.foo.bar/1.0-SNAPSHOT/org.foo.bar-1.0-SNAPSHOT-features.xml"
argument_list|,
name|pathFromMaven
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/xml/features"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPathFromAether
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"org/foo/org.foo.bar/1.0-SNAPSHOT/org.foo.bar-1.0-SNAPSHOT.jar"
argument_list|,
name|pathFromAether
argument_list|(
literal|"org.foo:org.foo.bar:1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org/foo/org.foo.bar/1.0-SNAPSHOT/org.foo.bar-1.0-SNAPSHOT.kar"
argument_list|,
name|pathFromAether
argument_list|(
literal|"org.foo:org.foo.bar:kar:1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org/foo/org.foo.bar/1.0-SNAPSHOT/org.foo.bar-1.0-SNAPSHOT-features.xml"
argument_list|,
name|pathFromAether
argument_list|(
literal|"org.foo:org.foo.bar:xml:features:1.0-SNAPSHOT"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testArtifactToMvn
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT"
argument_list|,
name|artifactToMvn
argument_list|(
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.foo:org.foo.bar:1.0-SNAPSHOT"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/kar"
argument_list|,
name|artifactToMvn
argument_list|(
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.foo:org.foo.bar:kar:1.0-SNAPSHOT"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.foo/org.foo.bar/1.0-SNAPSHOT/xml/features"
argument_list|,
name|artifactToMvn
argument_list|(
operator|new
name|DefaultArtifact
argument_list|(
literal|"org.foo:org.foo.bar:xml:features:1.0-SNAPSHOT"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


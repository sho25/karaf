begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed to the Apache Software Foundation (ASF) under one or more  *  contributor license agreements.  See the NOTICE file distributed with  *  this work for additional information regarding copyright ownership.  *  The ASF licenses this file to You under the Apache License, Version 2.0  *  (the "License"); you may not use this file except in compliance with  *  the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|examples
operator|.
name|bundle
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|examples
operator|.
name|bundle
operator|.
name|common
operator|.
name|BookingService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
implements|implements
name|BundleActivator
block|{
specifier|private
name|ServiceTracker
argument_list|<
name|BookingService
argument_list|,
name|BookingService
argument_list|>
name|bookingServiceTracker
decl_stmt|;
specifier|private
name|ServiceRegistration
name|clientServiceRegistration
decl_stmt|;
specifier|private
name|Display
name|display
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
name|BundleContext
name|bundleContext
parameter_list|)
throws|throws
name|Exception
block|{
name|bookingServiceTracker
operator|=
operator|new
name|ServiceTracker
argument_list|<
name|BookingService
argument_list|,
name|BookingService
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|BookingService
operator|.
name|class
argument_list|,
literal|null
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|BookingService
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|BookingService
argument_list|>
name|reference
parameter_list|)
block|{
name|BookingService
name|bookingService
init|=
name|bundleContext
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|ClientServiceImpl
name|clientService
init|=
operator|new
name|ClientServiceImpl
argument_list|()
decl_stmt|;
name|clientService
operator|.
name|setBookingService
argument_list|(
name|bookingService
argument_list|)
expr_stmt|;
name|clientServiceRegistration
operator|=
name|bundleContext
operator|.
name|registerService
argument_list|(
name|ClientService
operator|.
name|class
argument_list|,
name|clientService
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|display
operator|=
operator|new
name|Display
argument_list|()
expr_stmt|;
name|display
operator|.
name|setClientService
argument_list|(
name|clientService
argument_list|)
expr_stmt|;
name|display
operator|.
name|init
argument_list|()
expr_stmt|;
return|return
name|bookingService
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|BookingService
argument_list|>
name|reference
parameter_list|,
name|BookingService
name|service
parameter_list|)
block|{
name|display
operator|.
name|destroy
argument_list|()
expr_stmt|;
name|clientServiceRegistration
operator|.
name|unregister
argument_list|()
expr_stmt|;
block|}
block|}
expr_stmt|;
name|bookingServiceTracker
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|bundleContext
parameter_list|)
throws|throws
name|Exception
block|{
name|bookingServiceTracker
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  Copyright 2005-2014 Red Hat, Inc.  *  *  Red Hat licenses this file to you under the Apache License, version  *  2.0 (the "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or  *  implied.  See the License for the specific language governing  *  permissions and limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|services
operator|.
name|mavenproxy
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|CountDownLatch
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|JarEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|jar
operator|.
name|JarOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|AsyncContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ReadListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletInputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletOutputStream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|WriteListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletResponseWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IAnswer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Handler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|NetworkConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Request
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|handler
operator|.
name|AbstractHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|url
operator|.
name|mvn
operator|.
name|MavenResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|url
operator|.
name|mvn
operator|.
name|internal
operator|.
name|AetherBasedResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|url
operator|.
name|mvn
operator|.
name|internal
operator|.
name|config
operator|.
name|MavenConfigurationImpl
import|;
end_import

begin_import
import|import
name|shaded
operator|.
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|io
operator|.
name|FileUtils
import|;
end_import

begin_import
import|import
name|shaded
operator|.
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|metadata
operator|.
name|io
operator|.
name|xpp3
operator|.
name|MetadataXpp3Reader
import|;
end_import

begin_import
import|import
name|shaded
operator|.
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|settings
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|shaded
operator|.
name|org
operator|.
name|ops4j
operator|.
name|util
operator|.
name|property
operator|.
name|DictionaryPropertyResolver
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|MavenProxyServletTest
block|{
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"localRepository"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
block|{      }
specifier|private
name|MavenResolver
name|createResolver
parameter_list|()
block|{
return|return
name|createResolver
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.io.tmpdir"
argument_list|)
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
specifier|private
name|MavenResolver
name|createResolver
parameter_list|(
name|String
name|localRepo
parameter_list|,
name|String
name|remoteRepos
parameter_list|,
name|String
name|proxyProtocol
parameter_list|,
name|String
name|proxyHost
parameter_list|,
name|int
name|proxyPort
parameter_list|,
name|String
name|proxyUsername
parameter_list|,
name|String
name|proxyPassword
parameter_list|,
name|String
name|proxyNonProxyHosts
parameter_list|)
block|{
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
operator|new
name|Hashtable
argument_list|<>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"localRepository"
argument_list|,
name|localRepo
argument_list|)
expr_stmt|;
if|if
condition|(
name|remoteRepos
operator|!=
literal|null
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
literal|"repositories"
argument_list|,
name|remoteRepos
argument_list|)
expr_stmt|;
block|}
name|MavenConfigurationImpl
name|config
init|=
operator|new
name|MavenConfigurationImpl
argument_list|(
operator|new
name|DictionaryPropertyResolver
argument_list|(
name|props
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|proxyProtocol
operator|!=
literal|null
condition|)
block|{
name|Proxy
name|proxy
init|=
operator|new
name|Proxy
argument_list|()
decl_stmt|;
name|proxy
operator|.
name|setProtocol
argument_list|(
name|proxyProtocol
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setHost
argument_list|(
name|proxyHost
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setPort
argument_list|(
name|proxyPort
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setUsername
argument_list|(
name|proxyUsername
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setPassword
argument_list|(
name|proxyPassword
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setNonProxyHosts
argument_list|(
name|proxyNonProxyHosts
argument_list|)
expr_stmt|;
name|config
operator|.
name|getSettings
argument_list|()
operator|.
name|addProxy
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|AetherBasedResolver
argument_list|(
name|config
argument_list|)
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMetadataRegex
parameter_list|()
block|{
name|Matcher
name|m
init|=
name|MavenProxyServlet
operator|.
name|ARTIFACT_METADATA_URL_REGEX
operator|.
name|matcher
argument_list|(
literal|"groupId/artifactId/version/maven-metadata.xml"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"maven-metadata.xml"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|ARTIFACT_METADATA_URL_REGEX
operator|.
name|matcher
argument_list|(
literal|"groupId/artifactId/version/maven-metadata-local.xml"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"maven-metadata-local.xml"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"local"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|ARTIFACT_METADATA_URL_REGEX
operator|.
name|matcher
argument_list|(
literal|"groupId/artifactId/version/maven-metadata-rep-1234.xml"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"maven-metadata-rep-1234.xml"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rep-1234"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|ARTIFACT_METADATA_URL_REGEX
operator|.
name|matcher
argument_list|(
literal|"groupId/artifactId/version/maven-metadata.xml.md5"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"maven-metadata.xml"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRepoRegex
parameter_list|()
block|{
name|Matcher
name|m
init|=
name|MavenProxyServlet
operator|.
name|REPOSITORY_ID_REGEX
operator|.
name|matcher
argument_list|(
literal|"repo1.maven.org/maven2@id=central"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"central"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|REPOSITORY_ID_REGEX
operator|.
name|matcher
argument_list|(
literal|"https://repo.fusesource.com/nexus/content/repositories/releases@id=fusereleases"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"fusereleases"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|REPOSITORY_ID_REGEX
operator|.
name|matcher
argument_list|(
literal|"repo1.maven.org/maven2@snapshots@id=central"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"central"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|REPOSITORY_ID_REGEX
operator|.
name|matcher
argument_list|(
literal|"repo1.maven.org/maven2@id=central@snapshots"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"central"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|m
operator|=
name|MavenProxyServlet
operator|.
name|REPOSITORY_ID_REGEX
operator|.
name|matcher
argument_list|(
literal|"repo1.maven.org/maven2@noreleases@id=central@snapshots"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|matches
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"central"
argument_list|,
name|m
operator|.
name|group
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|InvalidMavenArtifactRequest
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testConvertNullPath
parameter_list|()
throws|throws
name|InvalidMavenArtifactRequest
block|{
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|createResolver
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConvertNormalPath
parameter_list|()
throws|throws
name|InvalidMavenArtifactRequest
block|{
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|createResolver
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"groupId:artifactId:extension:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"groupId/artifactId/version/artifactId-version.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group.id:artifactId:extension:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group/id/artifactId/version/artifactId-version.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group.id:artifact.id:extension:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group/id/artifact.id/version/artifact.id-version.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group-id:artifactId:extension:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group-id/artifactId/version/artifactId-version.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group-id:artifact-id:extension:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group-id/artifact-id/version/artifact-id-version.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group-id:my-artifact-id:extension:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group-id/my-artifact-id/version/my-artifact-id-version.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|//Some real cases
name|assertEquals
argument_list|(
literal|"org.apache.camel.karaf:apache-camel:jar:LATEST"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"org/apache/camel/karaf/apache-camel/LATEST/apache-camel-LATEST.jar"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.karaf:apache-cxf:jar:LATEST"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"org/apache/cxf/karaf/apache-cxf/LATEST/apache-cxf-LATEST.jar"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testConvertNormalPathWithClassifier
parameter_list|()
throws|throws
name|InvalidMavenArtifactRequest
block|{
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|createResolver
argument_list|()
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"groupId:artifactId:extension:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"groupId/artifactId/version/artifactId-version-classifier.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group.id:artifactId:extension:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group/id/artifactId/version/artifactId-version-classifier.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group.id:artifact.id:extension:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group/id/artifact.id/version/artifact.id-version-classifier.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group.id:artifact.id:extension.sha1:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group/id/artifact.id/version/artifact.id-version-classifier.extension.sha1"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group.id:artifact.id:extension.md5:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group/id/artifact.id/version/artifact.id-version-classifier.extension.md5"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group-id:artifactId:extension:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group-id/artifactId/version/artifactId-version-classifier.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group-id:artifact-id:extension:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group-id/artifact-id/version/artifact-id-version-classifier.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"group-id:my-artifact-id:extension:classifier:version"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"group-id/my-artifact-id/version/my-artifact-id-version-classifier.extension"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
comment|//Some real cases
name|assertEquals
argument_list|(
literal|"org.apache.camel.karaf:apache-camel:xml:features:LATEST"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"org/apache/camel/karaf/apache-camel/LATEST/apache-camel-LATEST-features.xml"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cxf.karaf:apache-cxf:xml:features:LATEST"
argument_list|,
name|servlet
operator|.
name|convertArtifactPathToCoord
argument_list|(
literal|"org/apache/cxf/karaf/apache-cxf/LATEST/apache-cxf-LATEST-features.xml"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStartServlet
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|old
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.data"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|MavenResolver
name|resolver
init|=
name|createResolver
argument_list|()
decl_stmt|;
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|resolver
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|servlet
operator|.
name|init
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|old
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
name|old
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDownloadUsingAuthenticatedProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|testDownload
argument_list|(
operator|new
name|AbstractHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|Request
name|baseRequest
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|String
name|proxyAuth
init|=
name|request
operator|.
name|getHeader
argument_list|(
literal|"Proxy-Authorization"
argument_list|)
decl_stmt|;
if|if
condition|(
name|proxyAuth
operator|==
literal|null
operator|||
name|proxyAuth
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_PROXY_AUTHENTICATION_REQUIRED
argument_list|)
expr_stmt|;
name|response
operator|.
name|addHeader
argument_list|(
literal|"Proxy-Authenticate"
argument_list|,
literal|"Basic realm=\"Proxy Server\""
argument_list|)
expr_stmt|;
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|write
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|0x42
block|}
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDownloadUsingNonAuthenticatedProxy
parameter_list|()
throws|throws
name|Exception
block|{
name|testDownload
argument_list|(
operator|new
name|AbstractHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|Request
name|baseRequest
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|write
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|0x42
block|}
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDownloadMetadata
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|String
name|old
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.data"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/tmp"
argument_list|)
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
operator|new
name|AbstractHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|Request
name|baseRequest
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|String
name|result
init|=
literal|null
decl_stmt|;
if|if
condition|(
literal|"/repo1/org/apache/camel/camel-core/maven-metadata.xml"
operator|.
name|equals
argument_list|(
name|target
argument_list|)
condition|)
block|{
name|result
operator|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<metadata>\n"
operator|+
literal|"<groupId>org.apache.camel</groupId>\n"
operator|+
literal|"<artifactId>camel-core</artifactId>\n"
operator|+
literal|"<versioning>\n"
operator|+
literal|"<latest>2.14.0</latest>\n"
operator|+
literal|"<release>2.14.0</release>\n"
operator|+
literal|"<versions>\n"
operator|+
literal|"<version>1.6.1</version>\n"
operator|+
literal|"<version>1.6.2</version>\n"
operator|+
literal|"<version>1.6.3</version>\n"
operator|+
literal|"<version>1.6.4</version>\n"
operator|+
literal|"<version>2.0-M2</version>\n"
operator|+
literal|"<version>2.0-M3</version>\n"
operator|+
literal|"<version>2.0.0</version>\n"
operator|+
literal|"<version>2.1.0</version>\n"
operator|+
literal|"<version>2.2.0</version>\n"
operator|+
literal|"<version>2.3.0</version>\n"
operator|+
literal|"<version>2.4.0</version>\n"
operator|+
literal|"<version>2.5.0</version>\n"
operator|+
literal|"<version>2.6.0</version>\n"
operator|+
literal|"<version>2.7.0</version>\n"
operator|+
literal|"<version>2.7.1</version>\n"
operator|+
literal|"<version>2.7.2</version>\n"
operator|+
literal|"<version>2.7.3</version>\n"
operator|+
literal|"<version>2.7.4</version>\n"
operator|+
literal|"<version>2.7.5</version>\n"
operator|+
literal|"<version>2.8.0</version>\n"
operator|+
literal|"<version>2.8.1</version>\n"
operator|+
literal|"<version>2.8.2</version>\n"
operator|+
literal|"<version>2.8.3</version>\n"
operator|+
literal|"<version>2.8.4</version>\n"
operator|+
literal|"<version>2.8.5</version>\n"
operator|+
literal|"<version>2.8.6</version>\n"
operator|+
literal|"<version>2.9.0-RC1</version>\n"
operator|+
literal|"<version>2.9.0</version>\n"
operator|+
literal|"<version>2.9.1</version>\n"
operator|+
literal|"<version>2.9.2</version>\n"
operator|+
literal|"<version>2.9.3</version>\n"
operator|+
literal|"<version>2.9.4</version>\n"
operator|+
literal|"<version>2.9.5</version>\n"
operator|+
literal|"<version>2.9.6</version>\n"
operator|+
literal|"<version>2.9.7</version>\n"
operator|+
literal|"<version>2.9.8</version>\n"
operator|+
literal|"<version>2.10.0</version>\n"
operator|+
literal|"<version>2.10.1</version>\n"
operator|+
literal|"<version>2.10.2</version>\n"
operator|+
literal|"<version>2.10.3</version>\n"
operator|+
literal|"<version>2.10.4</version>\n"
operator|+
literal|"<version>2.10.5</version>\n"
operator|+
literal|"<version>2.10.6</version>\n"
operator|+
literal|"<version>2.10.7</version>\n"
operator|+
literal|"<version>2.11.0</version>\n"
operator|+
literal|"<version>2.11.1</version>\n"
operator|+
literal|"<version>2.11.2</version>\n"
operator|+
literal|"<version>2.11.3</version>\n"
operator|+
literal|"<version>2.11.4</version>\n"
operator|+
literal|"<version>2.12.0</version>\n"
operator|+
literal|"<version>2.12.1</version>\n"
operator|+
literal|"<version>2.12.2</version>\n"
operator|+
literal|"<version>2.12.3</version>\n"
operator|+
literal|"<version>2.12.4</version>\n"
operator|+
literal|"<version>2.13.0</version>\n"
operator|+
literal|"<version>2.13.1</version>\n"
operator|+
literal|"<version>2.13.2</version>\n"
operator|+
literal|"<version>2.14.0</version>\n"
operator|+
literal|"</versions>\n"
operator|+
literal|"<lastUpdated>20140918132816</lastUpdated>\n"
operator|+
literal|"</versioning>\n"
operator|+
literal|"</metadata>\n"
operator|+
literal|"\n"
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"/repo2/org/apache/camel/camel-core/maven-metadata.xml"
operator|.
name|equals
argument_list|(
name|target
argument_list|)
condition|)
block|{
name|result
operator|=
literal|"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
operator|+
literal|"<metadata modelVersion=\"1.1.0\">\n"
operator|+
literal|"<groupId>org.apache.camel</groupId>\n"
operator|+
literal|"<artifactId>camel-core</artifactId>\n"
operator|+
literal|"<versioning>\n"
operator|+
literal|"<latest>2.14.0.redhat-620034</latest>\n"
operator|+
literal|"<release>2.14.0.redhat-620034</release>\n"
operator|+
literal|"<versions>\n"
operator|+
literal|"<version>2.10.0.redhat-60074</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610312</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610328</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610355</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610378</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610396</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610399</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610401</version>\n"
operator|+
literal|"<version>2.12.0.redhat-610402</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611403</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611405</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611406</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611408</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611409</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611410</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611411</version>\n"
operator|+
literal|"<version>2.12.0.redhat-611412</version>\n"
operator|+
literal|"<version>2.14.0.redhat-620031</version>\n"
operator|+
literal|"<version>2.14.0.redhat-620033</version>\n"
operator|+
literal|"<version>2.14.0.redhat-620034</version>\n"
operator|+
literal|"</versions>\n"
operator|+
literal|"<lastUpdated>20141019130841</lastUpdated>\n"
operator|+
literal|"</versioning>\n"
operator|+
literal|"</metadata>\n"
operator|+
literal|"\n"
expr_stmt|;
block|}
if|if
condition|(
name|result
operator|==
literal|null
condition|)
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NOT_FOUND
argument_list|)
expr_stmt|;
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_OK
argument_list|)
expr_stmt|;
name|baseRequest
operator|.
name|setHandled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|write
argument_list|(
name|result
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|response
operator|.
name|getOutputStream
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|int
name|localPort
init|=
operator|(
operator|(
name|NetworkConnector
operator|)
name|server
operator|.
name|getConnectors
argument_list|()
index|[
literal|0
index|]
operator|)
operator|.
name|getLocalPort
argument_list|()
decl_stmt|;
comment|// TODO: local repo should point to target/tmp
name|MavenResolver
name|resolver
init|=
name|createResolver
argument_list|(
literal|"target/tmp"
argument_list|,
literal|"http://relevant.not/repo1@id=repo1,http://relevant.not/repo2@id=repo2"
argument_list|,
literal|"http"
argument_list|,
literal|"localhost"
argument_list|,
name|localPort
argument_list|,
literal|"fuse"
argument_list|,
literal|"fuse"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|resolver
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|AsyncContext
name|context
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|AsyncContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|getPathInfo
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"org/apache/camel/camel-core/maven-metadata.xml"
argument_list|)
expr_stmt|;
comment|//            EasyMock.expect(request.getPathInfo()).andReturn("org/apache/camel/camel-core/LATEST/camel-core-LATEST.jar");
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|startAsync
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|context
operator|.
name|setTimeout
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|response
operator|.
name|getOutputStream
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|ServletOutputStream
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|baos
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|baos
operator|.
name|write
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isReady
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setWriteListener
parameter_list|(
name|WriteListener
name|writeListener
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setStatus
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentLength
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentType
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setDateHeader
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|,
name|EasyMock
operator|.
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setHeader
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|,
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|context
operator|.
name|complete
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andAnswer
argument_list|(
operator|new
name|IAnswer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|()
throws|throws
name|Throwable
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|makeThreadSafe
argument_list|(
name|context
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|init
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
name|shaded
operator|.
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|repository
operator|.
name|metadata
operator|.
name|Metadata
name|m
init|=
operator|new
name|MetadataXpp3Reader
argument_list|()
operator|.
name|read
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"2.14.0.redhat-620034"
argument_list|,
name|m
operator|.
name|getVersioning
argument_list|()
operator|.
name|getLatest
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|getVersioning
argument_list|()
operator|.
name|getVersions
argument_list|()
operator|.
name|contains
argument_list|(
literal|"2.10.4"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|m
operator|.
name|getVersioning
argument_list|()
operator|.
name|getVersions
argument_list|()
operator|.
name|contains
argument_list|(
literal|"2.12.0.redhat-610399"
argument_list|)
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
name|old
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|testDownload
parameter_list|(
name|Handler
name|serverHandler
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|String
name|old
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.data"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/tmp"
argument_list|)
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|serverHandler
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|int
name|localPort
init|=
operator|(
operator|(
name|NetworkConnector
operator|)
name|server
operator|.
name|getConnectors
argument_list|()
index|[
literal|0
index|]
operator|)
operator|.
name|getLocalPort
argument_list|()
decl_stmt|;
comment|// TODO: local repo should point to target/tmp
name|MavenResolver
name|resolver
init|=
name|createResolver
argument_list|(
literal|"target/tmp"
argument_list|,
literal|"http://relevant.not/maven2@id=central"
argument_list|,
literal|"http"
argument_list|,
literal|"localhost"
argument_list|,
name|localPort
argument_list|,
literal|"fuse"
argument_list|,
literal|"fuse"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|resolver
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|AsyncContext
name|context
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|AsyncContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|getPathInfo
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|"org.apache.camel/camel-core/2.13.0/camel-core-2.13.0-sources.jar"
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|startAsync
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|context
operator|.
name|setTimeout
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
expr_stmt|;
name|HttpServletResponse
name|response
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|response
operator|.
name|getOutputStream
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|ServletOutputStream
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|int
name|b
parameter_list|)
throws|throws
name|IOException
block|{
name|baos
operator|.
name|write
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|write
parameter_list|(
name|byte
index|[]
name|b
parameter_list|,
name|int
name|off
parameter_list|,
name|int
name|len
parameter_list|)
throws|throws
name|IOException
block|{
name|baos
operator|.
name|write
argument_list|(
name|b
argument_list|,
name|off
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isReady
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setWriteListener
parameter_list|(
name|WriteListener
name|writeListener
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
argument_list|)
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setStatus
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentLength
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentType
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setDateHeader
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|,
name|EasyMock
operator|.
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setHeader
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|,
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
specifier|final
name|CountDownLatch
name|latch
init|=
operator|new
name|CountDownLatch
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|context
operator|.
name|complete
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|andAnswer
argument_list|(
operator|new
name|IAnswer
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Object
name|answer
parameter_list|()
throws|throws
name|Throwable
block|{
name|latch
operator|.
name|countDown
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|makeThreadSafe
argument_list|(
name|context
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|context
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|init
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doGet
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|latch
operator|.
name|await
argument_list|()
expr_stmt|;
name|Assert
operator|.
name|assertArrayEquals
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|0x42
block|}
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|request
argument_list|,
name|response
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
name|old
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJarUploadFullMvnPath
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|jarPath
init|=
literal|"org.acme/acme-core/1.0/acme-core-1.0.jar"
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|JarOutputStream
name|jas
init|=
operator|new
name|JarOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
literal|"hello.txt"
argument_list|,
literal|"Hello!"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|jas
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|contents
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|testUpload
argument_list|(
name|jarPath
argument_list|,
name|contents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJarUploadWithMvnPom
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|jarPath
init|=
literal|"org.acme/acme-core/1.0/acme-core-1.0.jar"
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|JarOutputStream
name|jas
init|=
operator|new
name|JarOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
literal|"hello.txt"
argument_list|,
literal|"Hello!"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|addPom
argument_list|(
name|jas
argument_list|,
literal|"org.acme"
argument_list|,
literal|"acme-core"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|jas
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|contents
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|testUpload
argument_list|(
name|jarPath
argument_list|,
name|contents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJarUploadNoMvnPath
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|jarPath
init|=
literal|"acme-core-1.0.jar"
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|JarOutputStream
name|jas
init|=
operator|new
name|JarOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
literal|"hello.txt"
argument_list|,
literal|"Hello!"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|jas
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|contents
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|testUpload
argument_list|(
name|jarPath
argument_list|,
name|contents
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWarUploadFullMvnPath
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|warPath
init|=
literal|"org.acme/acme-ui/1.0/acme-ui-1.0.war"
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|JarOutputStream
name|jas
init|=
operator|new
name|JarOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
literal|"WEB-INF/web.xml"
argument_list|,
literal|"<web/>"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|jas
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|contents
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|testUpload
argument_list|(
name|warPath
argument_list|,
name|contents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWarUploadWithMvnPom
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|warPath
init|=
literal|"org.acme/acme-ui/1.0/acme-ui-1.0.war"
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|JarOutputStream
name|jas
init|=
operator|new
name|JarOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
literal|"WEB-INF/web.xml"
argument_list|,
literal|"<web/>"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|addPom
argument_list|(
name|jas
argument_list|,
literal|"org.acme"
argument_list|,
literal|"acme-ui"
argument_list|,
literal|"1.0"
argument_list|)
expr_stmt|;
name|jas
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|contents
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|testUpload
argument_list|(
name|warPath
argument_list|,
name|contents
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWarUploadNoMvnPath
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|warPath
init|=
literal|"acme-ui-1.0.war"
decl_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|JarOutputStream
name|jas
init|=
operator|new
name|JarOutputStream
argument_list|(
name|baos
argument_list|)
decl_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
literal|"WEB-INF/web.xml"
argument_list|,
literal|"<web/>"
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|jas
operator|.
name|close
argument_list|()
expr_stmt|;
name|byte
index|[]
name|contents
init|=
name|baos
operator|.
name|toByteArray
argument_list|()
decl_stmt|;
name|testUpload
argument_list|(
name|warPath
argument_list|,
name|contents
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addEntry
parameter_list|(
name|JarOutputStream
name|jas
parameter_list|,
name|String
name|name
parameter_list|,
name|byte
index|[]
name|content
parameter_list|)
throws|throws
name|Exception
block|{
name|JarEntry
name|entry
init|=
operator|new
name|JarEntry
argument_list|(
name|name
argument_list|)
decl_stmt|;
name|jas
operator|.
name|putNextEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
if|if
condition|(
name|content
operator|!=
literal|null
condition|)
block|{
name|jas
operator|.
name|write
argument_list|(
name|content
argument_list|)
expr_stmt|;
block|}
name|jas
operator|.
name|closeEntry
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|addPom
parameter_list|(
name|JarOutputStream
name|jas
parameter_list|,
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|Exception
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"groupId"
argument_list|,
name|groupId
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"artifactId"
argument_list|,
name|artifactId
argument_list|)
expr_stmt|;
name|properties
operator|.
name|setProperty
argument_list|(
literal|"version"
argument_list|,
name|version
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|baos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|properties
operator|.
name|store
argument_list|(
name|baos
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|addEntry
argument_list|(
name|jas
argument_list|,
name|String
operator|.
name|format
argument_list|(
literal|"META-INF/maven/%s/%s/%s/pom.properties"
argument_list|,
name|groupId
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|)
argument_list|,
name|baos
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|testUpload
parameter_list|(
name|String
name|path
parameter_list|,
specifier|final
name|byte
index|[]
name|contents
parameter_list|,
name|boolean
name|hasLocationHeader
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|testUpload
argument_list|(
name|path
argument_list|,
name|contents
argument_list|,
literal|null
argument_list|,
name|hasLocationHeader
argument_list|)
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|testUpload
parameter_list|(
name|String
name|path
parameter_list|,
specifier|final
name|byte
index|[]
name|contents
parameter_list|,
name|String
name|location
parameter_list|,
name|boolean
name|hasLocationHeader
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|testUpload
argument_list|(
name|path
argument_list|,
name|contents
argument_list|,
name|location
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|hasLocationHeader
argument_list|)
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|testUpload
parameter_list|(
name|String
name|path
parameter_list|,
specifier|final
name|byte
index|[]
name|contents
parameter_list|,
name|String
name|location
parameter_list|,
name|String
name|profile
parameter_list|,
name|String
name|version
parameter_list|,
name|boolean
name|hasLocationHeader
parameter_list|)
throws|throws
name|Exception
block|{
specifier|final
name|String
name|old
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.data"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
operator|new
name|File
argument_list|(
literal|"target"
argument_list|)
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
operator|new
name|File
argument_list|(
literal|"target/tmp"
argument_list|)
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
operator|new
name|AbstractHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|String
name|target
parameter_list|,
name|Request
name|baseRequest
parameter_list|,
name|HttpServletRequest
name|request
parameter_list|,
name|HttpServletResponse
name|response
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|response
operator|.
name|setStatus
argument_list|(
name|HttpServletResponse
operator|.
name|SC_NO_CONTENT
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|int
name|localPort
init|=
operator|(
operator|(
name|NetworkConnector
operator|)
name|server
operator|.
name|getConnectors
argument_list|()
index|[
literal|0
index|]
operator|)
operator|.
name|getLocalPort
argument_list|()
decl_stmt|;
name|MavenResolver
name|resolver
init|=
name|createResolver
argument_list|(
literal|"target/tmp"
argument_list|,
literal|"http://relevant.not/maven2@id=central"
argument_list|,
literal|"http"
argument_list|,
literal|"localhost"
argument_list|,
name|localPort
argument_list|,
literal|"fuse"
argument_list|,
literal|"fuse"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|MavenProxyServlet
name|servlet
init|=
operator|new
name|MavenProxyServlet
argument_list|(
name|resolver
argument_list|,
literal|5
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|HttpServletRequest
name|request
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletRequest
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|getPathInfo
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|getInputStream
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|ServletInputStream
argument_list|()
block|{
specifier|private
name|int
name|i
decl_stmt|;
annotation|@
name|Override
specifier|public
name|int
name|read
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
name|i
operator|>=
name|contents
operator|.
name|length
condition|)
block|{
return|return
operator|-
literal|1
return|;
block|}
return|return
operator|(
name|contents
index|[
name|i
operator|++
index|]
operator|&
literal|0xFF
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isFinished
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isReady
parameter_list|()
block|{
comment|// TODO Auto-generated method stub
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setReadListener
parameter_list|(
name|ReadListener
name|readListener
parameter_list|)
block|{
comment|// TODO Auto-generated method stub
block|}
block|}
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|request
operator|.
name|getHeader
argument_list|(
literal|"X-Location"
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|location
argument_list|)
expr_stmt|;
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|HttpServletResponse
name|rm
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|HttpServletResponse
operator|.
name|class
argument_list|)
decl_stmt|;
name|HttpServletResponse
name|response
init|=
operator|new
name|HttpServletResponseWrapper
argument_list|(
name|rm
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|addHeader
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|headers
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|response
operator|.
name|setStatus
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentLength
argument_list|(
name|EasyMock
operator|.
name|anyInt
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setContentType
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setDateHeader
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|,
name|EasyMock
operator|.
name|anyLong
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|response
operator|.
name|setHeader
argument_list|(
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|,
operator|(
name|String
operator|)
name|EasyMock
operator|.
name|anyObject
argument_list|()
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|expectLastCall
argument_list|()
operator|.
name|anyTimes
argument_list|()
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|request
argument_list|,
name|rm
argument_list|)
expr_stmt|;
name|servlet
operator|.
name|init
argument_list|()
expr_stmt|;
name|servlet
operator|.
name|doPut
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|verify
argument_list|(
name|request
argument_list|,
name|rm
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|hasLocationHeader
argument_list|,
name|headers
operator|.
name|containsKey
argument_list|(
literal|"X-Location"
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|headers
return|;
block|}
finally|finally
block|{
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
if|if
condition|(
name|old
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.data"
argument_list|,
name|old
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit


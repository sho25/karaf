begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|services
operator|.
name|staticcm
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
implements|implements
name|BundleActivator
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CONFIG_DIRS
init|=
literal|"org.apache.karaf.services.staticcm.ConfigDirs"
decl_stmt|;
name|ServiceRegistration
argument_list|<
name|ConfigurationAdmin
argument_list|>
name|registration
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|Configuration
argument_list|>
name|configs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|String
name|cfgDirs
init|=
name|context
operator|.
name|getProperty
argument_list|(
name|CONFIG_DIRS
argument_list|)
decl_stmt|;
if|if
condition|(
name|cfgDirs
operator|==
literal|null
condition|)
block|{
name|cfgDirs
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.etc"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|dir
range|:
name|cfgDirs
operator|.
name|split
argument_list|(
literal|","
argument_list|)
control|)
block|{
name|List
argument_list|<
name|Configuration
argument_list|>
name|cfgs
init|=
name|Configurations
operator|.
name|loadConfigurations
argument_list|(
name|context
argument_list|,
operator|new
name|File
argument_list|(
name|dir
operator|.
name|trim
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|configs
operator|.
name|addAll
argument_list|(
name|cfgs
argument_list|)
expr_stmt|;
block|}
name|StaticConfigAdminImpl
name|cm
init|=
operator|new
name|StaticConfigAdminImpl
argument_list|(
name|context
argument_list|,
name|configs
argument_list|)
decl_stmt|;
name|registration
operator|=
name|context
operator|.
name|registerService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|,
name|cm
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|registration
operator|!=
literal|null
condition|)
block|{
name|registration
operator|.
name|unregister
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


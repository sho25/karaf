#!/bin/sh
#
# Karaf control script
# description: Karaf startup script
# processname: ${KARAF_SERVICE_NAME}
# pidfile: ${KARAF_SERVICE_PIDFILE}
# config: ${KARAF_SERVICE_CONF}
#

# Location of JDK
if [ -n "$JAVA_HOME" ]; then
    export JAVA_HOME
fi

# Setup the JVM
if [ -z "$JAVA" ]; then
    if [ -n "$JAVA_HOME" ]; then
        JAVA="$JAVA_HOME/bin/java"
    else
        JAVA="java"
    fi
fi

if [ -r "${KARAF_SERVICE_CONF}" ]; then
    . "${KARAF_SERVICE_CONF}"
else
    echo "Error KARAF_SERVICE_CONF not defined"
    exit -1
fi

if [ -z "$STARTUP_WAIT" ]; then
    STARTUP_WAIT=30
fi

if [ -z "$SHUTDOWN_WAIT" ]; then
    SHUTDOWN_WAIT=30
fi

prog=${KARAF_SERVICE_NAME}
currenttime=$(date +%s%N | cut -b1-13)

do_start() {
    echo "Starting $prog: "
    if [ -f $KARAF_SERVICE_PIDFILE ]; then
        read ppid < $KARAF_SERVICE_PIDFILE
        if [ `ps -p $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
            echo "$prog is already running"
            return 1
        else
            rm -f $KARAF_SERVICE_PIDFILE
        fi
    fi
    
    mkdir -p $(dirname $KARAF_SERVICE_LOG)
    cat /dev/null > $KARAF_SERVICE_LOG
    chown $KARAF_SERVICE_USER:$KARAF_SERVICE_GROUP  $KARAF_SERVICE_LOG

    mkdir -p $(dirname $KARAF_SERVICE_PIDFILE)
    chown $KARAF_SERVICE_USER:$KARAF_SERVICE_GROUP $(dirname $KARAF_SERVICE_PIDFILE) || true

    if [ ! -z "$KARAF_SERVICE_USER" ]; then
        su - $KARAF_SERVICE_USER \
            -c " { $KARAF_SERVICE_PATH/bin/karaf daemon >> $KARAF_SERVICE_LOG 2>&1 & } ; echo \$! >| $KARAF_SERVICE_PIDFILE "
    fi
 
    RETVAL=$?    
    return $RETVAL
}

do_stop() {
    echo $"Stopping $prog: "
    count=0;

    if [ -f $KARAF_SERVICE_PIDFILE ]; then
        read kpid < $KARAF_SERVICE_PIDFILE
        let kwait=$SHUTDOWN_WAIT

        # Try issuing SIGTERM
        su - $KARAF_SERVICE_USER -c $KARAF_SERVICE_PATH/bin/stop
        until [ `ps -p $kpid 2> /dev/null | grep -c $kpid 2> /dev/null` -eq '0' ] || [ $count -gt $kwait ]
        do
            sleep 1
            let count=$count+1;
        done

        if [ $count -gt $kwait ]; then
            kill -9 $kpid
        fi
    fi

    rm -f $KARAF_SERVICE_PIDFILE
    rm -f $KARAF_LOCKFILE
}

do_status() {
    if [ -f $KARAF_SERVICE_PIDFILE ]; then
        read ppid < $KARAF_SERVICE_PIDFILE
        if [ `ps -p $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
            echo "$prog is running (pid $ppid)"
            return 0
        else
            echo "$prog dead but pid file exists"
            return 1
        fi
    fi
    echo "$prog is not running"
    return 3
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    restart)
        do_stop
        do_start
        ;;
    status)
        do_status
        ;;
    *)
        ## If no parameters are given, print which are avaiable.
        echo "Usage: $0 {start|stop|status|restart}"
        exit 1
        ;;
esac

begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|dev
operator|.
name|core
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|NotCompliantMBeanException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|StandardMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|dev
operator|.
name|core
operator|.
name|DevMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|dev
operator|.
name|core
operator|.
name|DevService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|dev
operator|.
name|core
operator|.
name|FrameworkType
import|;
end_import

begin_comment
comment|/**  * Implementation of the DevMBean.  */
end_comment

begin_class
specifier|public
class|class
name|Dev
extends|extends
name|StandardMBean
implements|implements
name|DevMBean
block|{
specifier|private
specifier|final
name|DevService
name|devService
decl_stmt|;
specifier|public
name|Dev
parameter_list|(
name|DevService
name|devService
parameter_list|)
throws|throws
name|NotCompliantMBeanException
block|{
name|super
argument_list|(
name|DevMBean
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|devService
operator|=
name|devService
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getFramework
parameter_list|()
block|{
return|return
name|this
operator|.
name|devService
operator|.
name|getFramework
argument_list|()
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFramework
parameter_list|(
name|String
name|framework
parameter_list|)
block|{
name|this
operator|.
name|devService
operator|.
name|setFramework
argument_list|(
name|FrameworkType
operator|.
name|valueOf
argument_list|(
name|framework
operator|.
name|toLowerCase
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setFrameworkDebug
parameter_list|(
name|boolean
name|debug
parameter_list|)
block|{
name|this
operator|.
name|devService
operator|.
name|setFrameworkDebug
argument_list|(
name|debug
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|restart
parameter_list|(
name|boolean
name|clean
parameter_list|)
block|{
name|this
operator|.
name|devService
operator|.
name|restart
argument_list|(
name|clean
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


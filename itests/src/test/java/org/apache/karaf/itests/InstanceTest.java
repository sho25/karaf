begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|itests
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServerConnection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|TabularData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|junit
operator|.
name|PaxExam
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|ExamReactorStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|exam
operator|.
name|spi
operator|.
name|reactors
operator|.
name|PerClass
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|PaxExam
operator|.
name|class
argument_list|)
annotation|@
name|ExamReactorStrategy
argument_list|(
name|PerClass
operator|.
name|class
argument_list|)
specifier|public
class|class
name|InstanceTest
extends|extends
name|KarafTestSupport
block|{
annotation|@
name|Test
specifier|public
name|void
name|createDestroyCommand
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:create itest1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"itest1"
argument_list|,
name|executeCommand
argument_list|(
literal|"instance:list"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:destroy itest1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContainsNot
argument_list|(
literal|"itest1"
argument_list|,
name|executeCommand
argument_list|(
literal|"instance:list"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createDestroyViaMBean
parameter_list|()
throws|throws
name|Exception
block|{
name|MBeanServer
name|mbeanServer
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|ObjectName
name|name
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.karaf:type=instance,name=root"
argument_list|)
decl_stmt|;
name|int
name|oldNum
init|=
name|getInstancesNum
argument_list|(
name|mbeanServer
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|mbeanServer
operator|.
name|invoke
argument_list|(
name|name
argument_list|,
literal|"createInstance"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"itest2"
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|,
literal|"int"
block|,
literal|"int"
block|,
literal|"int"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oldNum
operator|+
literal|1
argument_list|,
name|getInstancesNum
argument_list|(
name|mbeanServer
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|mbeanServer
operator|.
name|invoke
argument_list|(
name|name
argument_list|,
literal|"destroyInstance"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"itest2"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oldNum
argument_list|,
name|getInstancesNum
argument_list|(
name|mbeanServer
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createStartCommand
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:create itest"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"itest"
argument_list|,
name|executeCommand
argument_list|(
literal|"instance:list"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:start itest"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|output
init|=
name|executeCommand
argument_list|(
literal|"instance:status itest"
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|!
name|output
operator|.
name|contains
argument_list|(
literal|"Started"
argument_list|)
condition|)
block|{
if|if
condition|(
name|i
operator|>=
literal|10
condition|)
block|{
break|break;
block|}
name|i
operator|=
name|i
operator|+
literal|1
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|output
operator|=
name|executeCommand
argument_list|(
literal|"instance:status itest"
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"itest instance status: "
operator|+
name|output
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Started"
argument_list|,
name|output
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:stop itest"
argument_list|)
argument_list|)
expr_stmt|;
name|output
operator|=
name|executeCommand
argument_list|(
literal|"instance:status itest"
argument_list|)
expr_stmt|;
name|i
operator|=
literal|0
expr_stmt|;
while|while
condition|(
operator|!
name|output
operator|.
name|contains
argument_list|(
literal|"Stopped"
argument_list|)
condition|)
block|{
if|if
condition|(
name|i
operator|>=
literal|10
condition|)
block|{
break|break;
block|}
name|i
operator|=
name|i
operator|+
literal|1
expr_stmt|;
name|Thread
operator|.
name|sleep
argument_list|(
literal|5000
argument_list|)
expr_stmt|;
name|output
operator|=
name|executeCommand
argument_list|(
literal|"instance:status itest"
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"itest instance status: "
operator|+
name|output
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"Stopped"
argument_list|,
name|output
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createStartConnectCommand
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:create itestCSCC"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"itestCSCC"
argument_list|,
name|executeCommand
argument_list|(
literal|"instance:list"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|getInstancesNum
parameter_list|(
name|MBeanServerConnection
name|connection
parameter_list|,
name|ObjectName
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|TabularData
name|instances
init|=
operator|(
name|TabularData
operator|)
name|connection
operator|.
name|getAttribute
argument_list|(
name|name
argument_list|,
literal|"Instances"
argument_list|)
decl_stmt|;
return|return
name|instances
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cloneCommand
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:clone root itest3"
argument_list|)
argument_list|)
expr_stmt|;
name|assertContains
argument_list|(
literal|"itest3"
argument_list|,
name|executeCommand
argument_list|(
literal|"instance:list"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|cloneViaMBean
parameter_list|()
throws|throws
name|Exception
block|{
name|MBeanServer
name|mbeanServer
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|ObjectName
name|name
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.karaf:type=instance,name=root"
argument_list|)
decl_stmt|;
name|int
name|oldNum
init|=
name|getInstancesNum
argument_list|(
name|mbeanServer
argument_list|,
name|name
argument_list|)
decl_stmt|;
name|mbeanServer
operator|.
name|invoke
argument_list|(
name|name
argument_list|,
literal|"cloneInstance"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"root"
block|,
literal|"itest4"
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|null
block|,
literal|null
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|,
literal|"int"
block|,
literal|"int"
block|,
literal|"int"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
name|oldNum
operator|+
literal|1
argument_list|,
name|getInstancesNum
argument_list|(
name|mbeanServer
argument_list|,
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|renameCommand
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:create itest"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|executeCommand
argument_list|(
literal|"instance:rename itest new_itest"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|instanceListOutput
init|=
name|executeCommand
argument_list|(
literal|"instance:list"
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|instanceListOutput
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|instanceListOutput
operator|.
name|contains
argument_list|(
literal|"new_itest"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|renameViaMBean
parameter_list|()
throws|throws
name|Exception
block|{
name|MBeanServer
name|mbeanServer
init|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
decl_stmt|;
name|ObjectName
name|name
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.karaf:type=instance,name=root"
argument_list|)
decl_stmt|;
name|mbeanServer
operator|.
name|invoke
argument_list|(
name|name
argument_list|,
literal|"createInstance"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"itest5"
block|,
literal|0
block|,
literal|0
block|,
literal|0
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|,
literal|"int"
block|,
literal|"int"
block|,
literal|"int"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
name|mbeanServer
operator|.
name|invoke
argument_list|(
name|name
argument_list|,
literal|"renameInstance"
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"itest5"
block|,
literal|"new_itest5"
block|}
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"java.lang.String"
block|,
literal|"java.lang.String"
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


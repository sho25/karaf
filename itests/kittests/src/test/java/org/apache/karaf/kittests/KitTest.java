begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|kittests
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|kittests
operator|.
name|Helper
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|KitTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testKit
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|home
init|=
operator|new
name|File
argument_list|(
literal|"target/karaf"
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Karaf home: "
operator|+
name|home
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Extracting Karaf"
argument_list|)
expr_stmt|;
name|extractKit
argument_list|(
name|home
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Starting Karaf"
argument_list|)
expr_stmt|;
name|Instance
name|karaf
init|=
name|startKaraf
argument_list|(
name|home
argument_list|)
decl_stmt|;
try|try
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Wait for Karaf to be started"
argument_list|)
expr_stmt|;
name|waitForKarafStarted
argument_list|(
name|karaf
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Launching stop script to shutdown"
argument_list|)
expr_stmt|;
name|Process
name|client
init|=
name|launchScript
argument_list|(
name|home
argument_list|,
literal|"stop"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
try|try
block|{
name|waitForProcessEnd
argument_list|(
name|client
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Client terminated"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|kill
argument_list|(
name|client
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Waiting for karaf to stop"
argument_list|)
expr_stmt|;
name|waitForKarafStopped
argument_list|(
name|karaf
argument_list|,
literal|20000
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Karaf stopped"
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|kill
argument_list|(
name|karaf
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


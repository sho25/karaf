begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|config
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|InvalidSyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_interface
specifier|public
interface|interface
name|ConfigRepository
block|{
comment|/**      * Save config to storage or ConfigurationAdmin.      *      * @param pid the configuration PID.      * @param props the dictionary used to update the configuration.      * @throws IOException in case of update failure.      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|void
name|update
parameter_list|(
name|String
name|pid
parameter_list|,
name|Dictionary
name|props
parameter_list|)
throws|throws
name|IOException
function_decl|;
name|void
name|delete
parameter_list|(
name|String
name|pid
parameter_list|)
throws|throws
name|Exception
function_decl|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
name|Dictionary
name|getConfigProperties
parameter_list|(
name|String
name|pid
parameter_list|)
throws|throws
name|IOException
throws|,
name|InvalidSyntaxException
function_decl|;
name|ConfigurationAdmin
name|getConfigAdmin
parameter_list|()
function_decl|;
comment|/**      * Create a factory based configuration.      *      * @param factoryPid the configuration factory PID.      * @param properties the new properties to set in the configuration.      * @return the created configuration PID.      */
name|String
name|createFactoryConfiguration
parameter_list|(
name|String
name|factoryPid
parameter_list|,
name|Dictionary
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|properties
parameter_list|)
function_decl|;
block|}
end_interface

end_unit


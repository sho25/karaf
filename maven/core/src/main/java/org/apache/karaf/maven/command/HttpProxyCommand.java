begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|maven
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|settings
operator|.
name|Proxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"maven"
argument_list|,
name|name
operator|=
literal|"http-proxy"
argument_list|,
name|description
operator|=
literal|"Manage HTTP proxy configuration for Maven remote repositories"
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|HttpProxyCommand
extends|extends
name|MavenSecuritySupport
block|{
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--add"
argument_list|,
name|description
operator|=
literal|"Adds HTTP proxy configuration to Maven settings"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|add
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--change"
argument_list|,
name|description
operator|=
literal|"Changes HTTP proxy configuration in Maven settings"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|change
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--remove"
argument_list|,
name|description
operator|=
literal|"Removes HTTP proxy configuration from Maven settings"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|remove
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-id"
argument_list|,
name|description
operator|=
literal|"Identifier of HTTP proxy"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|id
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-f"
argument_list|,
name|aliases
operator|=
block|{
literal|"--force"
block|}
argument_list|,
name|description
operator|=
literal|"Do not ask for confirmation"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|force
init|=
literal|false
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-u"
argument_list|,
name|aliases
operator|=
block|{
literal|"--username"
block|}
argument_list|,
name|description
operator|=
literal|"Username for remote repository"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|username
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-p"
argument_list|,
name|aliases
operator|=
block|{
literal|"--password"
block|}
argument_list|,
name|description
operator|=
literal|"Password for remote repository (may be encrypted, see \"maven:password -ep\")"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|password
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-n"
argument_list|,
name|aliases
operator|=
block|{
literal|"--non-proxy-hosts"
block|}
argument_list|,
name|description
operator|=
literal|"Non-proxied hosts (in the format '192.168.*|localhost|...')"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|nonProxyHosts
decl_stmt|;
annotation|@
name|Argument
argument_list|(
name|description
operator|=
literal|"host:port of HTTP proxy"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|hostPort
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|doAction
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|add
operator|&&
operator|(
name|change
operator|||
name|remove
operator|)
operator|||
name|change
operator|&&
name|remove
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Please specify only one of --add/--change/--remove"
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|id
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|id
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Please specify ID of HTTP proxy"
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|mavenSettings
operator|.
name|getProxies
argument_list|()
operator|==
literal|null
condition|)
block|{
name|mavenSettings
operator|.
name|setProxies
argument_list|(
operator|new
name|LinkedList
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|Optional
argument_list|<
name|Proxy
argument_list|>
name|existingProxy
init|=
name|mavenSettings
operator|.
name|getProxies
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
parameter_list|(
name|p
parameter_list|)
lambda|->
name|id
operator|.
name|equals
argument_list|(
name|p
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|findAny
argument_list|()
decl_stmt|;
if|if
condition|(
name|add
condition|)
block|{
if|if
condition|(
name|hostPort
operator|==
literal|null
operator|||
literal|""
operator|.
name|equals
argument_list|(
name|hostPort
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Please specify host:port of new HTTP proxy"
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|existingProxy
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|printf
argument_list|(
literal|"HTTP proxy with ID \"%s\" is already configured\n"
argument_list|,
name|id
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|existingProxy
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|printf
argument_list|(
literal|"Can't find HTTP proxy with ID \"%s\"\n"
argument_list|,
name|id
argument_list|)
expr_stmt|;
return|return;
block|}
name|boolean
name|hasUsername
init|=
name|username
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|username
operator|.
name|trim
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|hasPassword
init|=
name|password
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|password
operator|.
name|trim
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|hasCredentials
init|=
name|hasUsername
operator|&&
name|hasPassword
decl_stmt|;
if|if
condition|(
operator|(
name|hasUsername
operator|&&
operator|!
name|hasPassword
operator|)
operator|||
operator|(
operator|!
name|hasUsername
operator|&&
name|hasPassword
operator|)
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Please specify both username and password"
argument_list|)
expr_stmt|;
return|return;
block|}
name|Proxy
name|proxy
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|add
condition|)
block|{
name|proxy
operator|=
operator|new
name|Proxy
argument_list|()
expr_stmt|;
name|proxy
operator|.
name|setId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|mavenSettings
operator|.
name|getProxies
argument_list|()
operator|.
name|add
argument_list|(
name|proxy
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|change
condition|)
block|{
name|proxy
operator|=
name|existingProxy
operator|.
name|get
argument_list|()
expr_stmt|;
comment|// should be there
block|}
else|else
comment|/*if (remove)*/
block|{
comment|// remove
name|List
argument_list|<
name|Proxy
argument_list|>
name|newProxies
init|=
name|mavenSettings
operator|.
name|getProxies
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
parameter_list|(
name|p
parameter_list|)
lambda|->
operator|!
name|id
operator|.
name|equals
argument_list|(
name|p
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|mavenSettings
operator|.
name|setProxies
argument_list|(
name|newProxies
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|add
operator|||
name|change
condition|)
block|{
name|proxy
operator|.
name|setActive
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setProtocol
argument_list|(
literal|"http"
argument_list|)
expr_stmt|;
if|if
condition|(
name|nonProxyHosts
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|nonProxyHosts
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
name|proxy
operator|.
name|setNonProxyHosts
argument_list|(
name|nonProxyHosts
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hostPort
operator|!=
literal|null
operator|&&
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|hostPort
operator|.
name|trim
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|hostPort
operator|.
name|contains
argument_list|(
literal|":"
argument_list|)
condition|)
block|{
name|proxy
operator|.
name|setHost
argument_list|(
name|hostPort
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|hostPort
operator|.
name|indexOf
argument_list|(
literal|':'
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setPort
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|hostPort
operator|.
name|substring
argument_list|(
name|hostPort
operator|.
name|indexOf
argument_list|(
literal|':'
argument_list|)
operator|+
literal|1
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|proxy
operator|.
name|setHost
argument_list|(
name|hostPort
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setPort
argument_list|(
literal|3128
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|hasCredentials
condition|)
block|{
name|proxy
operator|.
name|setUsername
argument_list|(
name|username
argument_list|)
expr_stmt|;
name|proxy
operator|.
name|setPassword
argument_list|(
name|password
argument_list|)
expr_stmt|;
block|}
block|}
name|updateSettings
argument_list|(
name|prefix
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|Configuration
name|cmConfig
init|=
name|cm
operator|.
name|getConfiguration
argument_list|(
name|PID
argument_list|)
decl_stmt|;
name|cmConfig
operator|.
name|update
argument_list|(
name|config
argument_list|)
expr_stmt|;
comment|// list (also after --add or --remove)
if|if
condition|(
name|showPasswords
condition|)
block|{
name|session
operator|.
name|execute
argument_list|(
literal|"maven:http-proxy-list -x"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|session
operator|.
name|execute
argument_list|(
literal|"maven:http-proxy-list"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|maven
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|support
operator|.
name|table
operator|.
name|Row
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|support
operator|.
name|table
operator|.
name|ShellTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|settings
operator|.
name|Proxy
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"maven"
argument_list|,
name|name
operator|=
literal|"http-proxy"
argument_list|,
name|description
operator|=
literal|"Manage HTTP proxy configuration for Maven remote repositories"
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|HttpProxyCommand
extends|extends
name|MavenConfigurationSupport
block|{
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--add"
argument_list|,
name|description
operator|=
literal|"Adds HTTP proxy configuration to Maven settings"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|add
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--remove"
argument_list|,
name|description
operator|=
literal|"Removes HTTP proxy configuration from Maven settings"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|remove
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|doAction
parameter_list|(
name|String
name|prefix
parameter_list|,
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|add
operator|&&
name|remove
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Please specify only one of --add and --remove"
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
name|add
condition|)
block|{
comment|// add
block|}
if|if
condition|(
name|remove
condition|)
block|{
comment|// remove
block|}
comment|// list (also after --add or --remove)
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
if|if
condition|(
name|mavenSettings
operator|!=
literal|null
operator|&&
name|mavenSettings
operator|.
name|getProxies
argument_list|()
operator|!=
literal|null
operator|&&
name|mavenSettings
operator|.
name|getProxies
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|ShellTable
name|table
init|=
operator|new
name|ShellTable
argument_list|()
decl_stmt|;
name|table
operator|.
name|column
argument_list|(
literal|"ID"
argument_list|)
expr_stmt|;
name|table
operator|.
name|column
argument_list|(
literal|"Host"
argument_list|)
expr_stmt|;
name|table
operator|.
name|column
argument_list|(
literal|"Port"
argument_list|)
expr_stmt|;
name|table
operator|.
name|column
argument_list|(
literal|"Username"
argument_list|)
expr_stmt|;
if|if
condition|(
name|showPasswords
condition|)
block|{
name|table
operator|.
name|column
argument_list|(
literal|"Password"
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Proxy
name|proxy
range|:
name|mavenSettings
operator|.
name|getProxies
argument_list|()
control|)
block|{
name|Row
name|row
init|=
name|table
operator|.
name|addRow
argument_list|()
decl_stmt|;
name|row
operator|.
name|addContent
argument_list|(
name|proxy
operator|.
name|getId
argument_list|()
argument_list|,
name|proxy
operator|.
name|getHost
argument_list|()
argument_list|,
name|proxy
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|.
name|addContent
argument_list|(
name|proxy
operator|.
name|getUsername
argument_list|()
operator|!=
literal|null
condition|?
name|proxy
operator|.
name|getUsername
argument_list|()
else|:
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|showPasswords
condition|)
block|{
name|addPasswordInfo
argument_list|(
name|row
argument_list|,
name|proxyPasswords
argument_list|,
name|proxy
operator|.
name|getId
argument_list|()
argument_list|,
name|proxy
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|table
operator|.
name|print
argument_list|(
name|System
operator|.
name|out
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|"No HTTP proxies configured"
argument_list|)
expr_stmt|;
if|if
condition|(
name|settings
operator|!=
literal|null
operator|&&
name|settings
operator|.
name|value
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|print
argument_list|(
literal|" in "
operator|+
name|settings
operator|.
name|value
argument_list|)
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
name|System
operator|.
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


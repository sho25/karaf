begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|maven
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|settings
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|settings
operator|.
name|Settings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|settings
operator|.
name|io
operator|.
name|DefaultSettingsWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|sonatype
operator|.
name|plexus
operator|.
name|components
operator|.
name|cipher
operator|.
name|DefaultPlexusCipher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|sonatype
operator|.
name|plexus
operator|.
name|components
operator|.
name|cipher
operator|.
name|PBECipher
import|;
end_import

begin_class
specifier|public
class|class
name|SettingsTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|readAndWriteSettings
parameter_list|()
throws|throws
name|IOException
block|{
name|Settings
name|settings
init|=
operator|new
name|Settings
argument_list|()
decl_stmt|;
name|Server
name|s
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|s
operator|.
name|setId
argument_list|(
literal|"id"
argument_list|)
expr_stmt|;
name|s
operator|.
name|setUsername
argument_list|(
literal|"admin"
argument_list|)
expr_stmt|;
name|s
operator|.
name|setPassword
argument_list|(
literal|"admin"
argument_list|)
expr_stmt|;
name|settings
operator|.
name|getServers
argument_list|()
operator|.
name|add
argument_list|(
name|s
argument_list|)
expr_stmt|;
operator|new
name|DefaultSettingsWriter
argument_list|()
operator|.
name|write
argument_list|(
name|System
operator|.
name|out
argument_list|,
literal|null
argument_list|,
name|settings
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|encryptMavenPassword
parameter_list|()
throws|throws
name|Exception
block|{
comment|// non-master password ('mvn -ep admin')
name|DefaultPlexusCipher
name|plexusCipher
init|=
operator|new
name|DefaultPlexusCipher
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plexusCipher
operator|.
name|encrypt
argument_list|(
literal|"admin"
argument_list|,
literal|"admin"
argument_list|)
argument_list|)
expr_stmt|;
comment|// master password (`mvn -emp admin`)
name|PBECipher
name|cipher
init|=
operator|new
name|PBECipher
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|cipher
operator|.
name|encrypt64
argument_list|(
literal|"admin"
argument_list|,
literal|"settings.security"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|decryptMavenPassword
parameter_list|()
throws|throws
name|Exception
block|{
comment|// non-master password ('mvn -ep admin')
name|DefaultPlexusCipher
name|plexusCipher
init|=
operator|new
name|DefaultPlexusCipher
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plexusCipher
operator|.
name|decrypt
argument_list|(
literal|"{EhjazkVpkMoHjAgaUKX+UxeXn9lsJGHst2uFKmhNZ8U=}"
argument_list|,
literal|"admin"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|plexusCipher
operator|.
name|decrypt
argument_list|(
literal|"{oWE12FbirwYHNit93TAMA+OC/GJge2r9FuzI8kOuHlA=}"
argument_list|,
literal|"settings.security"
argument_list|)
argument_list|)
expr_stmt|;
comment|// master password (`mvn -emp admin`)
name|PBECipher
name|cipher
init|=
operator|new
name|PBECipher
argument_list|()
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|cipher
operator|.
name|decrypt64
argument_list|(
literal|"EhjazkVpkMoHjAgaUKX+UxeXn9lsJGHst2uFKmhNZ8U="
argument_list|,
literal|"admin"
argument_list|)
argument_list|)
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|cipher
operator|.
name|decrypt64
argument_list|(
literal|"oWE12FbirwYHNit93TAMA+OC/GJge2r9FuzI8kOuHlA="
argument_list|,
literal|"settings.security"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


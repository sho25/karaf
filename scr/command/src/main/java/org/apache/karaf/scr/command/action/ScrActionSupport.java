begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scr
operator|.
name|command
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|ScrService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fusesource
operator|.
name|jansi
operator|.
name|Ansi
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|FrameworkUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|ScrActionSupport
extends|extends
name|AbstractAction
block|{
specifier|protected
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|ScrService
name|scrService
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|Object
name|doExecute
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|scrService
operator|==
literal|null
condition|)
block|{
name|String
name|msg
init|=
literal|"ScrService is unavailable"
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|msg
argument_list|)
expr_stmt|;
name|logger
operator|.
name|warn
argument_list|(
name|msg
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|doScrAction
argument_list|(
name|scrService
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|protected
specifier|abstract
name|Object
name|doScrAction
parameter_list|(
name|ScrService
name|scrService
parameter_list|)
throws|throws
name|Exception
function_decl|;
specifier|public
name|String
name|getBoldString
parameter_list|(
name|String
name|value
parameter_list|)
block|{
return|return
name|Ansi
operator|.
name|ansi
argument_list|()
operator|.
name|a
argument_list|(
name|Ansi
operator|.
name|Attribute
operator|.
name|INTENSITY_BOLD
argument_list|)
operator|.
name|a
argument_list|(
name|value
argument_list|)
operator|.
name|a
argument_list|(
name|Ansi
operator|.
name|Attribute
operator|.
name|INTENSITY_BOLD_OFF
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|buildRightPadBracketDisplay
parameter_list|(
name|String
name|s
parameter_list|,
name|int
name|max
parameter_list|)
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%1$-"
operator|+
name|max
operator|+
literal|"s"
argument_list|,
name|s
argument_list|)
return|;
block|}
specifier|public
name|String
name|buildLeftPadBracketDisplay
parameter_list|(
name|String
name|s
parameter_list|,
name|int
name|max
parameter_list|)
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%1$#"
operator|+
name|max
operator|+
literal|"s"
argument_list|,
name|s
argument_list|)
return|;
block|}
comment|/**      * Get the bundleContext Object associated with this instance of      * ScrActionSupport.      *       * @return the bundleContext      */
specifier|public
name|BundleContext
name|getBundleContext
parameter_list|()
block|{
return|return
name|FrameworkUtil
operator|.
name|getBundle
argument_list|(
name|ListAction
operator|.
name|class
argument_list|)
operator|.
name|getBundleContext
argument_list|()
return|;
block|}
comment|/**      * Get the scrService Object associated with this instance of      * ScrActionSupport.      *       * @return the scrService      */
specifier|public
name|ScrService
name|getScrService
parameter_list|()
block|{
return|return
name|scrService
return|;
block|}
comment|/**      * Sets the scrService Object for this ScrActionSupport instance.      *       * @param scrService      *            the scrService to set      */
specifier|public
name|void
name|setScrService
parameter_list|(
name|ScrService
name|scrService
parameter_list|)
block|{
name|this
operator|.
name|scrService
operator|=
name|scrService
expr_stmt|;
block|}
block|}
end_class

end_unit


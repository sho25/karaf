begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scr
operator|.
name|command
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|scr
operator|.
name|ScrService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scr
operator|.
name|command
operator|.
name|ScrCommandConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scr
operator|.
name|command
operator|.
name|ScrUtils
import|;
end_import

begin_comment
comment|/**  * Activates the given component by supplying its component name.  */
end_comment

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
name|ScrCommandConstants
operator|.
name|SCR_COMMAND
argument_list|,
name|name
operator|=
name|ScrCommandConstants
operator|.
name|ACTIVATE_FUNCTION
argument_list|,
name|description
operator|=
literal|"Activates a Component for the given name"
argument_list|)
specifier|public
class|class
name|ActivateAction
extends|extends
name|ScrActionSupport
block|{
annotation|@
name|Argument
argument_list|(
name|index
operator|=
literal|0
argument_list|,
name|name
operator|=
literal|"name"
argument_list|,
name|description
operator|=
literal|"The name of the Component to activate "
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|name
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|Object
name|doScrAction
parameter_list|(
name|ScrService
name|scrService
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|logger
operator|.
name|isDebugEnabled
argument_list|()
condition|)
block|{
name|logger
operator|.
name|debug
argument_list|(
literal|"Activate Action"
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"  Activating the Component: "
operator|+
name|name
argument_list|)
expr_stmt|;
block|}
name|Component
index|[]
name|components
init|=
name|scrService
operator|.
name|getComponents
argument_list|(
name|name
argument_list|)
decl_stmt|;
for|for
control|(
name|Component
name|component
range|:
name|ScrUtils
operator|.
name|emptyIfNull
argument_list|(
name|Component
operator|.
name|class
argument_list|,
name|components
argument_list|)
control|)
block|{
name|component
operator|.
name|enable
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


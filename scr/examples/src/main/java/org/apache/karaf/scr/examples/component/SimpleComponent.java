begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scr
operator|.
name|examples
operator|.
name|component
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scr
operator|.
name|examples
operator|.
name|service
operator|.
name|ExampleService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|log
operator|.
name|LogService
import|;
end_import

begin_import
import|import
name|aQute
operator|.
name|bnd
operator|.
name|annotation
operator|.
name|component
operator|.
name|Activate
import|;
end_import

begin_import
import|import
name|aQute
operator|.
name|bnd
operator|.
name|annotation
operator|.
name|component
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|aQute
operator|.
name|bnd
operator|.
name|annotation
operator|.
name|component
operator|.
name|Deactivate
import|;
end_import

begin_import
import|import
name|aQute
operator|.
name|bnd
operator|.
name|annotation
operator|.
name|component
operator|.
name|Reference
import|;
end_import

begin_class
annotation|@
name|Component
argument_list|(
name|name
operator|=
name|SimpleComponent
operator|.
name|COMPONENT_NAME
argument_list|)
specifier|public
class|class
name|SimpleComponent
block|{
specifier|public
specifier|static
specifier|final
name|String
name|COMPONENT_NAME
init|=
literal|"SimpleComponent"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMPONENT_LABEL
init|=
literal|"Example Component"
decl_stmt|;
specifier|private
name|LogService
name|logService
decl_stmt|;
specifier|private
name|ExampleService
name|exampleService
decl_stmt|;
comment|/**      * Called when all of the SCR Components required dependencies have been      * satisfied.      */
annotation|@
name|Activate
specifier|public
name|void
name|activate
parameter_list|()
block|{
name|logService
operator|.
name|log
argument_list|(
name|LogService
operator|.
name|LOG_INFO
argument_list|,
literal|"Activating the "
operator|+
name|COMPONENT_LABEL
argument_list|)
expr_stmt|;
name|exampleService
operator|.
name|setName
argument_list|(
literal|"Scott"
argument_list|)
expr_stmt|;
name|exampleService
operator|.
name|setSalutation
argument_list|(
literal|"Hello"
argument_list|)
expr_stmt|;
name|exampleService
operator|.
name|printGreetings
argument_list|()
expr_stmt|;
block|}
comment|/**      * Called when any of the SCR Components required dependencies become      * unsatisfied.      */
annotation|@
name|Deactivate
specifier|public
name|void
name|deactivate
parameter_list|()
block|{
name|logService
operator|.
name|log
argument_list|(
name|LogService
operator|.
name|LOG_INFO
argument_list|,
literal|"Deactivating the "
operator|+
name|COMPONENT_LABEL
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Reference
specifier|public
name|void
name|setExampleService
parameter_list|(
specifier|final
name|ExampleService
name|exampleService
parameter_list|)
block|{
name|this
operator|.
name|exampleService
operator|=
name|exampleService
expr_stmt|;
block|}
specifier|public
name|void
name|unsetExampleService
parameter_list|(
specifier|final
name|ExampleService
name|exampleService
parameter_list|)
block|{
name|this
operator|.
name|exampleService
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Reference
specifier|protected
name|void
name|setLogService
parameter_list|(
name|LogService
name|logService
parameter_list|)
block|{
name|this
operator|.
name|logService
operator|=
name|logService
expr_stmt|;
block|}
specifier|protected
name|void
name|unsetLogService
parameter_list|(
name|LogService
name|logService
parameter_list|)
block|{
name|this
operator|.
name|logService
operator|=
literal|null
expr_stmt|;
block|}
block|}
end_class

end_unit


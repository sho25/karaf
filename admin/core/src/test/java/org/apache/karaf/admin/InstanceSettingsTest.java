begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|admin
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|admin
operator|.
name|InstanceSettings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_class
specifier|public
class|class
name|InstanceSettingsTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testInstanceSettings
parameter_list|()
block|{
name|InstanceSettings
name|is
init|=
operator|new
name|InstanceSettings
argument_list|(
literal|1
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"hi"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|is
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertNull
argument_list|(
name|is
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"hi"
argument_list|)
argument_list|,
name|is
operator|.
name|getFeatures
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|is
operator|.
name|getFeatureURLs
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEqualsHashCode
parameter_list|()
block|{
name|testEqualsHashCode
argument_list|(
literal|1
argument_list|,
literal|"top"
argument_list|,
literal|"foo"
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"hi"
argument_list|)
argument_list|)
expr_stmt|;
name|testEqualsHashCode
argument_list|(
literal|0
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|testEqualsHashCode
parameter_list|(
name|int
name|port
parameter_list|,
name|String
name|location
parameter_list|,
name|String
name|javaOpts
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|featureURLs
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|features
parameter_list|)
block|{
name|InstanceSettings
name|is
init|=
operator|new
name|InstanceSettings
argument_list|(
name|port
argument_list|,
name|location
argument_list|,
name|javaOpts
argument_list|,
name|featureURLs
argument_list|,
name|features
argument_list|)
decl_stmt|;
name|InstanceSettings
name|is2
init|=
operator|new
name|InstanceSettings
argument_list|(
name|port
argument_list|,
name|location
argument_list|,
name|javaOpts
argument_list|,
name|featureURLs
argument_list|,
name|features
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|is
argument_list|,
name|is2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|is
operator|.
name|hashCode
argument_list|()
argument_list|,
name|is2
operator|.
name|hashCode
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEqualsHashCode2
parameter_list|()
block|{
name|InstanceSettings
name|is
init|=
operator|new
name|InstanceSettings
argument_list|(
literal|1
argument_list|,
literal|"top"
argument_list|,
literal|"foo"
argument_list|,
name|Collections
operator|.
expr|<
name|String
operator|>
name|emptyList
argument_list|()
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
literal|"hi"
argument_list|)
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|is
operator|.
name|equals
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|is
operator|.
name|equals
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|is
argument_list|,
name|is
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


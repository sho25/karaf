begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|javax
operator|.
name|xml
operator|.
name|xpath
package|;
end_package

begin_class
specifier|public
specifier|abstract
class|class
name|XPathFactory
block|{
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_PROPERTY_NAME
init|=
literal|"javax.xml.xpath.XPathFactory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_OBJECT_MODEL_URI
init|=
literal|"http://java.sun.com/jaxp/xpath/dom"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_IMPL
init|=
literal|"com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl"
decl_stmt|;
specifier|protected
name|XPathFactory
parameter_list|()
block|{     }
specifier|public
specifier|static
name|XPathFactory
name|newDefaultInstance
parameter_list|()
block|{
try|try
block|{
return|return
operator|new
name|$XPathFactoryFinder
argument_list|(
literal|null
argument_list|)
operator|.
name|createInstance
argument_list|(
name|DEFAULT_IMPL
argument_list|,
literal|true
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|XPathFactoryConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"XPathFactory#newInstance() failed to create an XPathFactory for the default object model: "
operator|+
name|DEFAULT_OBJECT_MODEL_URI
operator|+
literal|" with the XPathFactoryConfigurationException: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|XPathFactory
name|newInstance
parameter_list|()
block|{
try|try
block|{
return|return
name|newInstance
argument_list|(
name|DEFAULT_OBJECT_MODEL_URI
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|XPathFactoryConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"XPathFactory#newInstance() failed to create an XPathFactory for the default object model: "
operator|+
name|DEFAULT_OBJECT_MODEL_URI
operator|+
literal|" with the XPathFactoryConfigurationException: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|XPathFactory
name|newInstance
parameter_list|(
specifier|final
name|String
name|uri
parameter_list|)
throws|throws
name|XPathFactoryConfigurationException
block|{
if|if
condition|(
name|uri
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"XPathFactory#newInstance(String uri) cannot be called with uri == null"
argument_list|)
throw|;
block|}
if|if
condition|(
name|uri
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"XPathFactory#newInstance(String uri) cannot be called with uri == \"\""
argument_list|)
throw|;
block|}
name|ClassLoader
name|classLoader
init|=
name|$XPathFactoryFinder
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
if|if
condition|(
name|classLoader
operator|==
literal|null
condition|)
block|{
name|classLoader
operator|=
name|XPathFactory
operator|.
name|class
operator|.
name|getClassLoader
argument_list|()
expr_stmt|;
block|}
name|XPathFactory
name|xpathFactory
init|=
operator|new
name|$XPathFactoryFinder
argument_list|(
name|classLoader
argument_list|)
operator|.
name|newFactory
argument_list|(
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|xpathFactory
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathFactoryConfigurationException
argument_list|(
literal|"No XPathFactory implementation found for the object model: "
operator|+
name|uri
argument_list|)
throw|;
block|}
return|return
name|xpathFactory
return|;
block|}
specifier|public
specifier|static
name|XPathFactory
name|newInstance
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|factoryClassName
parameter_list|,
name|ClassLoader
name|classLoader
parameter_list|)
throws|throws
name|XPathFactoryConfigurationException
block|{
name|ClassLoader
name|cl
init|=
name|classLoader
decl_stmt|;
if|if
condition|(
name|uri
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|NullPointerException
argument_list|(
literal|"XPathFactory#newInstance(String uri) cannot be called with uri == null"
argument_list|)
throw|;
block|}
if|if
condition|(
name|uri
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"XPathFactory#newInstance(String uri) cannot be called with uri == \"\""
argument_list|)
throw|;
block|}
if|if
condition|(
name|cl
operator|==
literal|null
condition|)
block|{
name|cl
operator|=
name|$XPathFactoryFinder
operator|.
name|getContextClassLoader
argument_list|()
expr_stmt|;
block|}
name|XPathFactory
name|f
init|=
operator|new
name|$XPathFactoryFinder
argument_list|(
name|cl
argument_list|)
operator|.
name|createInstance
argument_list|(
name|factoryClassName
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|XPathFactoryConfigurationException
argument_list|(
literal|"No XPathFactory implementation found for the object model: "
operator|+
name|uri
argument_list|)
throw|;
block|}
if|if
condition|(
name|f
operator|.
name|isObjectModelSupported
argument_list|(
name|uri
argument_list|)
condition|)
block|{
return|return
name|f
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|XPathFactoryConfigurationException
argument_list|(
literal|"Factory "
operator|+
name|factoryClassName
operator|+
literal|" doesn't support given "
operator|+
name|uri
operator|+
literal|" object model"
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|abstract
name|boolean
name|isObjectModelSupported
parameter_list|(
name|String
name|objectModel
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|void
name|setFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|boolean
name|value
parameter_list|)
throws|throws
name|XPathFactoryConfigurationException
function_decl|;
specifier|public
specifier|abstract
name|boolean
name|getFeature
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|XPathFactoryConfigurationException
function_decl|;
specifier|public
specifier|abstract
name|void
name|setXPathVariableResolver
parameter_list|(
name|XPathVariableResolver
name|resolver
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|void
name|setXPathFunctionResolver
parameter_list|(
name|XPathFunctionResolver
name|resolver
parameter_list|)
function_decl|;
specifier|public
specifier|abstract
name|XPath
name|newXPath
parameter_list|()
function_decl|;
block|}
end_class

end_unit


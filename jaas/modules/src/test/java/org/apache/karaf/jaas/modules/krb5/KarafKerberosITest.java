begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed under the Apache License, Version 2.0 (the "License");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|modules
operator|.
name|krb5
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|api
operator|.
name|util
operator|.
name|Strings
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|server
operator|.
name|kerberos
operator|.
name|kdc
operator|.
name|AbstractKerberosITest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|shared
operator|.
name|kerberos
operator|.
name|codec
operator|.
name|types
operator|.
name|EncryptionType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|directory
operator|.
name|shared
operator|.
name|kerberos
operator|.
name|crypto
operator|.
name|checksum
operator|.
name|ChecksumType
import|;
end_import

begin_class
specifier|public
class|class
name|KarafKerberosITest
extends|extends
name|AbstractKerberosITest
block|{
specifier|protected
name|String
name|createKrb5Conf
parameter_list|(
name|ChecksumType
name|checksumType
parameter_list|,
name|EncryptionType
name|encryptionType
parameter_list|,
name|boolean
name|isTcp
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|file
init|=
name|folder
operator|.
name|newFile
argument_list|(
literal|"krb5.conf"
argument_list|)
decl_stmt|;
name|PrintStream
name|out
init|=
operator|new
name|PrintStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"[libdefaults]"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"default_realm = "
operator|+
name|REALM
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"default_tkt_enctypes = "
operator|+
name|encryptionType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"default_tgs_enctypes = "
operator|+
name|encryptionType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"permitted_enctypes = "
operator|+
name|encryptionType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"default-checksum_type = "
operator|+
name|checksumType
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isTcp
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"udp_preference_limit = 1"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|(
literal|"[realms]"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|REALM
operator|+
literal|" = {"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"kdc = "
operator|+
name|HOSTNAME
operator|+
literal|":"
operator|+
name|kdcServer
operator|.
name|getTransports
argument_list|()
index|[
literal|0
index|]
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"}"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"[domain_realm]"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"."
operator|+
name|Strings
operator|.
name|lowerCaseAscii
argument_list|(
name|REALM
argument_list|)
operator|+
literal|" = "
operator|+
name|REALM
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|Strings
operator|.
name|lowerCaseAscii
argument_list|(
name|REALM
argument_list|)
operator|+
literal|" = "
operator|+
name|REALM
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|file
operator|.
name|getAbsolutePath
argument_list|()
return|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|modules
operator|.
name|properties
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|container
operator|.
name|ReifiedType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Test cases for {@link org.apache.karaf.jaas.modules.properties.PropertiesConverter}  */
end_comment

begin_class
specifier|public
class|class
name|PropertiesConverterTest
extends|extends
name|TestCase
block|{
specifier|private
name|PropertiesConverter
name|converter
decl_stmt|;
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|converter
operator|=
operator|new
name|PropertiesConverter
argument_list|()
expr_stmt|;
block|}
comment|/*      * Test the canConvert method      */
specifier|public
name|void
name|testCanConvert
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|converter
operator|.
name|canConvert
argument_list|(
literal|"a string"
argument_list|,
operator|new
name|ReifiedType
argument_list|(
name|Properties
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|converter
operator|.
name|canConvert
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|,
operator|new
name|ReifiedType
argument_list|(
name|Properties
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|converter
operator|.
name|canConvert
argument_list|(
literal|"a string"
argument_list|,
operator|new
name|ReifiedType
argument_list|(
name|List
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test the convert method when dealing with unix paths (no \)      */
specifier|public
name|void
name|testConvertWithUnixPathNames
parameter_list|()
throws|throws
name|Exception
block|{
name|Properties
name|properties
init|=
operator|(
name|Properties
operator|)
name|converter
operator|.
name|convert
argument_list|(
literal|"users = /opt/karaf/etc/users.properties"
argument_list|,
operator|new
name|ReifiedType
argument_list|(
name|Properties
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"/opt/karaf/etc/users.properties"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
literal|"users"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Test the convert method when dealing with windows paths (avoid escaping \)      */
specifier|public
name|void
name|testConvertWithWindowsPathNames
parameter_list|()
throws|throws
name|Exception
block|{
name|Properties
name|properties
init|=
operator|(
name|Properties
operator|)
name|converter
operator|.
name|convert
argument_list|(
literal|"users = c:\\opt\\karaf/etc/users.properties"
argument_list|,
operator|new
name|ReifiedType
argument_list|(
name|Properties
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"c:/opt/karaf/etc/users.properties"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
literal|"users"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


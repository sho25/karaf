begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  *  Licensed under the Apache License, Version 2.0 (the "License");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|modules
operator|.
name|ldap
package|;
end_package

begin_class
class|class
name|Util
block|{
specifier|static
name|String
name|doRFC2254Encoding
parameter_list|(
name|String
name|inputString
parameter_list|)
block|{
name|StringBuilder
name|buf
init|=
operator|new
name|StringBuilder
argument_list|(
name|inputString
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|inputString
operator|.
name|length
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|char
name|c
init|=
name|inputString
operator|.
name|charAt
argument_list|(
name|i
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|c
condition|)
block|{
case|case
literal|'\\'
case|:
name|buf
operator|.
name|append
argument_list|(
literal|"\\5c"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|'*'
case|:
name|buf
operator|.
name|append
argument_list|(
literal|"\\2a"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|'('
case|:
name|buf
operator|.
name|append
argument_list|(
literal|"\\28"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|')'
case|:
name|buf
operator|.
name|append
argument_list|(
literal|"\\29"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|'\u0000'
case|:
name|buf
operator|.
name|append
argument_list|(
literal|"\\00"
argument_list|)
expr_stmt|;
break|break;
default|default:
name|buf
operator|.
name|append
argument_list|(
name|c
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
return|return
name|buf
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit


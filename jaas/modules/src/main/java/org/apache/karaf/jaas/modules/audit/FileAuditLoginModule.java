begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed under the Apache License, Version 2.0 (the "License");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|modules
operator|.
name|audit
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileChannel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|channels
operator|.
name|FileLock
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|callback
operator|.
name|CallbackHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|modules
operator|.
name|JAASUtils
import|;
end_import

begin_class
specifier|public
class|class
name|FileAuditLoginModule
extends|extends
name|AbstractAuditLoginModule
block|{
specifier|public
specifier|static
specifier|final
name|String
name|LOG_FILE_OPTION
init|=
literal|"file"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|DateFormat
name|DATE_FORMAT
init|=
operator|new
name|SimpleDateFormat
argument_list|(
literal|"MM/dd/yyyy HH:mm:ss"
argument_list|)
decl_stmt|;
specifier|private
name|String
name|logFile
decl_stmt|;
specifier|public
name|void
name|initialize
parameter_list|(
name|Subject
name|subject
parameter_list|,
name|CallbackHandler
name|callbackHandler
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|sharedState
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|options
parameter_list|)
block|{
name|super
operator|.
name|initialize
argument_list|(
name|subject
argument_list|,
name|callbackHandler
argument_list|,
name|sharedState
argument_list|,
name|options
argument_list|)
expr_stmt|;
name|logFile
operator|=
name|JAASUtils
operator|.
name|getString
argument_list|(
name|options
argument_list|,
name|LOG_FILE_OPTION
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|synchronized
name|void
name|audit
parameter_list|(
name|Action
name|action
parameter_list|,
name|String
name|username
parameter_list|)
block|{
name|Date
name|date
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
try|try
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|logFile
argument_list|)
decl_stmt|;
name|file
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|FileOutputStream
name|out
init|=
operator|new
name|FileOutputStream
argument_list|(
name|file
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|FileChannel
name|channel
init|=
name|out
operator|.
name|getChannel
argument_list|()
decl_stmt|;
name|FileLock
name|lock
init|=
name|channel
operator|.
name|lock
argument_list|(
literal|0
argument_list|,
name|Long
operator|.
name|MAX_VALUE
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|PrintWriter
name|writer
init|=
operator|new
name|PrintWriter
argument_list|(
name|out
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|String
name|actionStr
decl_stmt|;
switch|switch
condition|(
name|action
condition|)
block|{
case|case
name|ATTEMPT
case|:
name|actionStr
operator|=
literal|"Authentication attempt"
expr_stmt|;
break|break;
case|case
name|SUCCESS
case|:
name|actionStr
operator|=
literal|"Authentication succeeded"
expr_stmt|;
break|break;
case|case
name|FAILURE
case|:
name|actionStr
operator|=
literal|"Authentication failed"
expr_stmt|;
break|break;
case|case
name|LOGOUT
case|:
name|actionStr
operator|=
literal|"Explicit logout"
expr_stmt|;
break|break;
default|default:
name|actionStr
operator|=
name|action
operator|.
name|toString
argument_list|()
expr_stmt|;
break|break;
block|}
name|writer
operator|.
name|println
argument_list|(
name|DATE_FORMAT
operator|.
name|format
argument_list|(
name|date
argument_list|)
operator|+
literal|" - "
operator|+
name|actionStr
operator|+
literal|" - "
operator|+
name|username
operator|+
literal|" - "
operator|+
name|getPrincipalInfo
argument_list|()
argument_list|)
expr_stmt|;
name|writer
operator|.
name|flush
argument_list|()
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
if|if
condition|(
name|lock
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|lock
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Unable to write to authentication log file"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit


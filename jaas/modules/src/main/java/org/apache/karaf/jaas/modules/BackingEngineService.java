begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|modules
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|boot
operator|.
name|ProxyLoginModule
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|AppConfigurationEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @author iocanel  */
end_comment

begin_class
specifier|public
class|class
name|BackingEngineService
block|{
specifier|private
name|List
argument_list|<
name|BackingEngineFactory
argument_list|>
name|engineFactories
decl_stmt|;
specifier|public
name|BackingEngine
name|get
parameter_list|(
name|AppConfigurationEntry
name|entry
parameter_list|)
block|{
if|if
condition|(
name|engineFactories
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|BackingEngineFactory
name|factory
range|:
name|engineFactories
control|)
block|{
name|String
name|loginModuleClass
init|=
operator|(
name|String
operator|)
name|entry
operator|.
name|getOptions
argument_list|()
operator|.
name|get
argument_list|(
name|ProxyLoginModule
operator|.
name|PROPERTY_MODULE
argument_list|)
decl_stmt|;
if|if
condition|(
name|factory
operator|.
name|getModuleClass
argument_list|()
operator|.
name|equals
argument_list|(
name|loginModuleClass
argument_list|)
condition|)
block|{
return|return
name|factory
operator|.
name|build
argument_list|(
name|entry
operator|.
name|getOptions
argument_list|()
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|BackingEngineFactory
argument_list|>
name|getEngineFactories
parameter_list|()
block|{
return|return
name|engineFactories
return|;
block|}
specifier|public
name|void
name|setEngineFactories
parameter_list|(
name|List
argument_list|<
name|BackingEngineFactory
argument_list|>
name|engineFactories
parameter_list|)
block|{
name|this
operator|.
name|engineFactories
operator|=
name|engineFactories
expr_stmt|;
block|}
block|}
end_class

end_unit


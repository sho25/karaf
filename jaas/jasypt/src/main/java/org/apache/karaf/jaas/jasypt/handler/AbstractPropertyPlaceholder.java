begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|jasypt
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|ComponentDefinitionRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|ComponentDefinitionRegistryProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableBeanArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableBeanMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableBeanProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableCollectionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableMapMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutablePropsMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableReferenceListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableRegistrationListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|mutable
operator|.
name|MutableServiceMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|container
operator|.
name|ComponentDefinitionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|BeanArgument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|BeanMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|BeanProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|CollectionMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|MapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|MapMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|Metadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|NonNullMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|PropsMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|ReferenceListMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|ReferenceListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|ReferenceMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|RegistrationListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|ServiceMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|Target
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|reflect
operator|.
name|ValueMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Abstract class for property placeholders.  *  * @version $Rev$, $Date$  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractPropertyPlaceholder
implements|implements
name|ComponentDefinitionRegistryProcessor
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|AbstractPropertyPlaceholder
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|String
name|placeholderPrefix
init|=
literal|"${"
decl_stmt|;
specifier|private
name|String
name|placeholderSuffix
init|=
literal|"}"
decl_stmt|;
specifier|private
name|Pattern
name|pattern
decl_stmt|;
specifier|public
name|String
name|getPlaceholderPrefix
parameter_list|()
block|{
return|return
name|placeholderPrefix
return|;
block|}
specifier|public
name|void
name|setPlaceholderPrefix
parameter_list|(
name|String
name|placeholderPrefix
parameter_list|)
block|{
name|this
operator|.
name|placeholderPrefix
operator|=
name|placeholderPrefix
expr_stmt|;
block|}
specifier|public
name|String
name|getPlaceholderSuffix
parameter_list|()
block|{
return|return
name|placeholderSuffix
return|;
block|}
specifier|public
name|void
name|setPlaceholderSuffix
parameter_list|(
name|String
name|placeholderSuffix
parameter_list|)
block|{
name|this
operator|.
name|placeholderSuffix
operator|=
name|placeholderSuffix
expr_stmt|;
block|}
specifier|public
name|void
name|process
parameter_list|(
name|ComponentDefinitionRegistry
name|registry
parameter_list|)
throws|throws
name|ComponentDefinitionException
block|{
for|for
control|(
name|String
name|name
range|:
name|registry
operator|.
name|getComponentDefinitionNames
argument_list|()
control|)
block|{
name|processMetadata
argument_list|(
name|registry
operator|.
name|getComponentDefinition
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|Metadata
name|processMetadata
parameter_list|(
name|Metadata
name|metadata
parameter_list|)
block|{
if|if
condition|(
name|metadata
operator|instanceof
name|BeanMetadata
condition|)
block|{
return|return
name|processBeanMetadata
argument_list|(
operator|(
name|BeanMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|ReferenceListMetadata
condition|)
block|{
return|return
name|processRefCollectionMetadata
argument_list|(
operator|(
name|ReferenceListMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|ReferenceMetadata
condition|)
block|{
return|return
name|processReferenceMetadata
argument_list|(
operator|(
name|ReferenceMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|ServiceMetadata
condition|)
block|{
return|return
name|processServiceMetadata
argument_list|(
operator|(
name|ServiceMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|CollectionMetadata
condition|)
block|{
return|return
name|processCollectionMetadata
argument_list|(
operator|(
name|CollectionMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|MapMetadata
condition|)
block|{
return|return
name|processMapMetadata
argument_list|(
operator|(
name|MapMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|PropsMetadata
condition|)
block|{
return|return
name|processPropsMetadata
argument_list|(
operator|(
name|PropsMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|metadata
operator|instanceof
name|ValueMetadata
condition|)
block|{
return|return
name|processValueMetadata
argument_list|(
operator|(
name|ValueMetadata
operator|)
name|metadata
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|metadata
return|;
block|}
block|}
specifier|protected
name|Metadata
name|processBeanMetadata
parameter_list|(
name|BeanMetadata
name|component
parameter_list|)
block|{
for|for
control|(
name|BeanArgument
name|arg
range|:
name|component
operator|.
name|getArguments
argument_list|()
control|)
block|{
operator|(
operator|(
name|MutableBeanArgument
operator|)
name|arg
operator|)
operator|.
name|setValue
argument_list|(
name|processMetadata
argument_list|(
name|arg
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|BeanProperty
name|prop
range|:
name|component
operator|.
name|getProperties
argument_list|()
control|)
block|{
operator|(
operator|(
name|MutableBeanProperty
operator|)
name|prop
operator|)
operator|.
name|setValue
argument_list|(
name|processMetadata
argument_list|(
name|prop
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
operator|(
operator|(
name|MutableBeanMetadata
operator|)
name|component
operator|)
operator|.
name|setFactoryComponent
argument_list|(
operator|(
name|Target
operator|)
name|processMetadata
argument_list|(
name|component
operator|.
name|getFactoryComponent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|component
return|;
block|}
specifier|protected
name|Metadata
name|processServiceMetadata
parameter_list|(
name|ServiceMetadata
name|component
parameter_list|)
block|{
operator|(
operator|(
name|MutableServiceMetadata
operator|)
name|component
operator|)
operator|.
name|setServiceComponent
argument_list|(
operator|(
name|Target
operator|)
name|processMetadata
argument_list|(
name|component
operator|.
name|getServiceComponent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|MapEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|MapEntry
argument_list|>
argument_list|(
name|component
operator|.
name|getServiceProperties
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|MapEntry
name|entry
range|:
name|entries
control|)
block|{
operator|(
operator|(
name|MutableServiceMetadata
operator|)
name|component
operator|)
operator|.
name|removeServiceProperty
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|MapEntry
name|entry
range|:
name|processMapEntries
argument_list|(
name|entries
argument_list|)
control|)
block|{
operator|(
operator|(
name|MutableServiceMetadata
operator|)
name|component
operator|)
operator|.
name|addServiceProperty
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|RegistrationListener
name|listener
range|:
name|component
operator|.
name|getRegistrationListeners
argument_list|()
control|)
block|{
operator|(
operator|(
name|MutableRegistrationListener
operator|)
name|listener
operator|)
operator|.
name|setListenerComponent
argument_list|(
operator|(
name|Target
operator|)
name|processMetadata
argument_list|(
name|listener
operator|.
name|getListenerComponent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|component
return|;
block|}
specifier|protected
name|Metadata
name|processReferenceMetadata
parameter_list|(
name|ReferenceMetadata
name|component
parameter_list|)
block|{
for|for
control|(
name|ReferenceListener
name|listener
range|:
name|component
operator|.
name|getReferenceListeners
argument_list|()
control|)
block|{
operator|(
operator|(
name|MutableReferenceListener
operator|)
name|listener
operator|)
operator|.
name|setListenerComponent
argument_list|(
operator|(
name|Target
operator|)
name|processMetadata
argument_list|(
name|listener
operator|.
name|getListenerComponent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|component
return|;
block|}
specifier|protected
name|Metadata
name|processRefCollectionMetadata
parameter_list|(
name|ReferenceListMetadata
name|component
parameter_list|)
block|{
for|for
control|(
name|ReferenceListener
name|listener
range|:
name|component
operator|.
name|getReferenceListeners
argument_list|()
control|)
block|{
operator|(
operator|(
name|MutableReferenceListener
operator|)
name|listener
operator|)
operator|.
name|setListenerComponent
argument_list|(
operator|(
name|Target
operator|)
name|processMetadata
argument_list|(
name|listener
operator|.
name|getListenerComponent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|component
return|;
block|}
specifier|protected
name|Metadata
name|processPropsMetadata
parameter_list|(
name|PropsMetadata
name|metadata
parameter_list|)
block|{
name|List
argument_list|<
name|MapEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|MapEntry
argument_list|>
argument_list|(
name|metadata
operator|.
name|getEntries
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|MapEntry
name|entry
range|:
name|entries
control|)
block|{
operator|(
operator|(
name|MutablePropsMetadata
operator|)
name|metadata
operator|)
operator|.
name|removeEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|MapEntry
name|entry
range|:
name|processMapEntries
argument_list|(
name|entries
argument_list|)
control|)
block|{
operator|(
operator|(
name|MutablePropsMetadata
operator|)
name|metadata
operator|)
operator|.
name|addEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
return|return
name|metadata
return|;
block|}
specifier|protected
name|Metadata
name|processMapMetadata
parameter_list|(
name|MapMetadata
name|metadata
parameter_list|)
block|{
name|List
argument_list|<
name|MapEntry
argument_list|>
name|entries
init|=
operator|new
name|ArrayList
argument_list|<
name|MapEntry
argument_list|>
argument_list|(
name|metadata
operator|.
name|getEntries
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|MapEntry
name|entry
range|:
name|entries
control|)
block|{
operator|(
operator|(
name|MutableMapMetadata
operator|)
name|metadata
operator|)
operator|.
name|removeEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|MapEntry
name|entry
range|:
name|processMapEntries
argument_list|(
name|entries
argument_list|)
control|)
block|{
operator|(
operator|(
name|MutableMapMetadata
operator|)
name|metadata
operator|)
operator|.
name|addEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
return|return
name|metadata
return|;
block|}
specifier|protected
name|List
argument_list|<
name|MapEntry
argument_list|>
name|processMapEntries
parameter_list|(
name|List
argument_list|<
name|MapEntry
argument_list|>
name|entries
parameter_list|)
block|{
for|for
control|(
name|MapEntry
name|entry
range|:
name|entries
control|)
block|{
operator|(
operator|(
name|MutableMapEntry
operator|)
name|entry
operator|)
operator|.
name|setKey
argument_list|(
operator|(
name|NonNullMetadata
operator|)
name|processMetadata
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
operator|(
operator|(
name|MutableMapEntry
operator|)
name|entry
operator|)
operator|.
name|setValue
argument_list|(
name|processMetadata
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|entries
return|;
block|}
specifier|protected
name|Metadata
name|processCollectionMetadata
parameter_list|(
name|CollectionMetadata
name|metadata
parameter_list|)
block|{
name|List
argument_list|<
name|Metadata
argument_list|>
name|values
init|=
operator|new
name|ArrayList
argument_list|<
name|Metadata
argument_list|>
argument_list|(
name|metadata
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Metadata
name|value
range|:
name|values
control|)
block|{
operator|(
operator|(
name|MutableCollectionMetadata
operator|)
name|metadata
operator|)
operator|.
name|removeValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Metadata
name|value
range|:
name|values
control|)
block|{
operator|(
operator|(
name|MutableCollectionMetadata
operator|)
name|metadata
operator|)
operator|.
name|addValue
argument_list|(
name|processMetadata
argument_list|(
name|value
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|metadata
return|;
block|}
specifier|protected
name|Metadata
name|processValueMetadata
parameter_list|(
name|ValueMetadata
name|metadata
parameter_list|)
block|{
return|return
operator|new
name|LateBindingValueMetadata
argument_list|(
name|metadata
argument_list|)
return|;
block|}
specifier|protected
name|String
name|retrieveValue
parameter_list|(
name|String
name|expression
parameter_list|)
block|{
return|return
name|getProperty
argument_list|(
name|expression
argument_list|)
return|;
block|}
specifier|protected
name|String
name|processString
parameter_list|(
name|String
name|str
parameter_list|)
block|{
comment|// TODO: we need to handle escapes on the prefix / suffix
name|Matcher
name|matcher
init|=
name|getPattern
argument_list|()
operator|.
name|matcher
argument_list|(
name|str
argument_list|)
decl_stmt|;
while|while
condition|(
name|matcher
operator|.
name|find
argument_list|()
condition|)
block|{
name|String
name|rep
init|=
name|retrieveValue
argument_list|(
name|matcher
operator|.
name|group
argument_list|(
literal|1
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|rep
operator|!=
literal|null
condition|)
block|{
name|str
operator|=
name|str
operator|.
name|replace
argument_list|(
name|matcher
operator|.
name|group
argument_list|(
literal|0
argument_list|)
argument_list|,
name|rep
argument_list|)
expr_stmt|;
name|matcher
operator|.
name|reset
argument_list|(
name|str
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|str
return|;
block|}
specifier|protected
name|String
name|getProperty
parameter_list|(
name|String
name|val
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|protected
name|Pattern
name|getPattern
parameter_list|()
block|{
if|if
condition|(
name|pattern
operator|==
literal|null
condition|)
block|{
name|pattern
operator|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"\\Q"
operator|+
name|placeholderPrefix
operator|+
literal|"\\E(.+?)\\Q"
operator|+
name|placeholderSuffix
operator|+
literal|"\\E"
argument_list|)
expr_stmt|;
block|}
return|return
name|pattern
return|;
block|}
specifier|public
class|class
name|LateBindingValueMetadata
implements|implements
name|ValueMetadata
block|{
specifier|private
specifier|final
name|ValueMetadata
name|metadata
decl_stmt|;
specifier|private
name|boolean
name|retrieved
decl_stmt|;
specifier|private
name|String
name|retrievedValue
decl_stmt|;
specifier|public
name|LateBindingValueMetadata
parameter_list|(
name|ValueMetadata
name|metadata
parameter_list|)
block|{
name|this
operator|.
name|metadata
operator|=
name|metadata
expr_stmt|;
block|}
specifier|public
name|String
name|getStringValue
parameter_list|()
block|{
if|if
condition|(
operator|!
name|retrieved
condition|)
block|{
name|String
name|v
init|=
name|metadata
operator|.
name|getStringValue
argument_list|()
decl_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Before process: {}"
argument_list|,
name|v
argument_list|)
expr_stmt|;
name|retrievedValue
operator|=
name|processString
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"After process: {}"
argument_list|,
name|retrievedValue
argument_list|)
expr_stmt|;
name|retrieved
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|retrievedValue
return|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|metadata
operator|.
name|getType
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  *  Licensed under the Apache License, Version 2.0 (the "License");  *  you may not use this file except in compliance with the License.  *  You may obtain a copy of the License at  *  *       http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  *  under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|blueprint
operator|.
name|jasypt
operator|.
name|handler
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|aries
operator|.
name|blueprint
operator|.
name|ext
operator|.
name|AbstractPropertyPlaceholderExt
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jasypt
operator|.
name|encryption
operator|.
name|StringEncryptor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|EncryptablePropertyPlaceholder
extends|extends
name|AbstractPropertyPlaceholderExt
block|{
specifier|private
name|StringEncryptor
name|encryptor
decl_stmt|;
specifier|public
name|StringEncryptor
name|getEncryptor
parameter_list|()
block|{
return|return
name|encryptor
return|;
block|}
specifier|public
name|void
name|setEncryptor
parameter_list|(
name|StringEncryptor
name|encryptor
parameter_list|)
block|{
name|this
operator|.
name|encryptor
operator|=
name|encryptor
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|()
block|{      }
annotation|@
name|Override
specifier|protected
name|String
name|getProperty
parameter_list|(
name|String
name|val
parameter_list|)
block|{
return|return
name|encryptor
operator|.
name|decrypt
argument_list|(
name|val
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getDefaultProperties
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


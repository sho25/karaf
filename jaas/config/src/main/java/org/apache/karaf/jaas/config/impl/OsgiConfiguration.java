begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|AppConfigurationEntry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|login
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|JaasRealm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|collections
operator|.
name|CopyOnWriteArrayIdentityList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|OsgiConfiguration
extends|extends
name|Configuration
block|{
specifier|private
specifier|final
name|List
argument_list|<
name|JaasRealm
argument_list|>
name|realms
init|=
operator|new
name|CopyOnWriteArrayIdentityList
argument_list|<
name|JaasRealm
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Configuration
name|defaultConfiguration
decl_stmt|;
specifier|public
name|void
name|init
parameter_list|()
block|{
try|try
block|{
name|defaultConfiguration
operator|=
name|Configuration
operator|.
name|getConfiguration
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
comment|// default configuration for fallback could not be retrieved
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|OsgiConfiguration
operator|.
name|class
argument_list|)
operator|.
name|warn
argument_list|(
literal|"Unable to retrieve default configuration"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
name|Configuration
operator|.
name|setConfiguration
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|realms
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Configuration
operator|.
name|setConfiguration
argument_list|(
name|defaultConfiguration
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|register
parameter_list|(
name|JaasRealm
name|realm
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|properties
parameter_list|)
block|{
if|if
condition|(
name|realm
operator|!=
literal|null
condition|)
block|{
name|realms
operator|.
name|add
argument_list|(
name|realm
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|unregister
parameter_list|(
name|JaasRealm
name|realm
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|properties
parameter_list|)
block|{
if|if
condition|(
name|realm
operator|!=
literal|null
condition|)
block|{
name|realms
operator|.
name|remove
argument_list|(
name|realm
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|AppConfigurationEntry
index|[]
name|getAppConfigurationEntry
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|JaasRealm
name|realm
init|=
literal|null
decl_stmt|;
for|for
control|(
name|JaasRealm
name|r
range|:
name|realms
control|)
block|{
if|if
condition|(
name|r
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|name
argument_list|)
condition|)
block|{
if|if
condition|(
name|realm
operator|==
literal|null
operator|||
name|r
operator|.
name|getRank
argument_list|()
operator|>
name|realm
operator|.
name|getRank
argument_list|()
condition|)
block|{
name|realm
operator|=
name|r
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|realm
operator|!=
literal|null
condition|)
block|{
return|return
name|realm
operator|.
name|getEntries
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|defaultConfiguration
operator|!=
literal|null
condition|)
block|{
return|return
name|defaultConfiguration
operator|.
name|getAppConfigurationEntry
argument_list|(
name|name
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|refresh
parameter_list|()
block|{
if|if
condition|(
name|defaultConfiguration
operator|!=
literal|null
condition|)
block|{
name|defaultConfiguration
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


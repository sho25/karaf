begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|boot
operator|.
name|ProxyLoginModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|JaasRealm
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|KeystoreInstance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|KeystoreManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTrackerCustomizer
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
implements|implements
name|BundleActivator
block|{
specifier|private
name|OsgiConfiguration
name|osgiConfiguration
decl_stmt|;
specifier|private
name|ServiceRegistration
argument_list|<
name|KeystoreManager
argument_list|>
name|registration
decl_stmt|;
specifier|private
name|ServiceTracker
argument_list|<
name|KeystoreInstance
argument_list|,
name|KeystoreInstance
argument_list|>
name|keystoreInstanceServiceTracker
decl_stmt|;
specifier|private
name|ServiceTracker
argument_list|<
name|JaasRealm
argument_list|,
name|JaasRealm
argument_list|>
name|jaasRealmServiceTracker
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
specifier|final
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|ProxyLoginModule
operator|.
name|init
argument_list|(
name|context
operator|.
name|getBundle
argument_list|(
literal|0
argument_list|)
operator|.
name|getBundleContext
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|OsgiKeystoreManager
name|keystoreManager
init|=
operator|new
name|OsgiKeystoreManager
argument_list|()
decl_stmt|;
name|keystoreInstanceServiceTracker
operator|=
operator|new
name|ServiceTracker
argument_list|<>
argument_list|(
name|context
argument_list|,
name|KeystoreInstance
operator|.
name|class
argument_list|,
operator|new
name|ServiceTrackerCustomizer
argument_list|<
name|KeystoreInstance
argument_list|,
name|KeystoreInstance
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|KeystoreInstance
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|KeystoreInstance
argument_list|>
name|reference
parameter_list|)
block|{
name|KeystoreInstance
name|service
init|=
name|context
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|keystoreManager
operator|.
name|register
argument_list|(
name|service
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifiedService
parameter_list|(
name|ServiceReference
argument_list|<
name|KeystoreInstance
argument_list|>
name|reference
parameter_list|,
name|KeystoreInstance
name|service
parameter_list|)
block|{             }
annotation|@
name|Override
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|KeystoreInstance
argument_list|>
name|reference
parameter_list|,
name|KeystoreInstance
name|service
parameter_list|)
block|{
name|keystoreManager
operator|.
name|unregister
argument_list|(
name|service
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|context
operator|.
name|ungetService
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|keystoreInstanceServiceTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|osgiConfiguration
operator|=
operator|new
name|OsgiConfiguration
argument_list|()
expr_stmt|;
name|osgiConfiguration
operator|.
name|init
argument_list|()
expr_stmt|;
name|jaasRealmServiceTracker
operator|=
operator|new
name|ServiceTracker
argument_list|<>
argument_list|(
name|context
argument_list|,
name|JaasRealm
operator|.
name|class
argument_list|,
operator|new
name|ServiceTrackerCustomizer
argument_list|<
name|JaasRealm
argument_list|,
name|JaasRealm
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|JaasRealm
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|JaasRealm
argument_list|>
name|reference
parameter_list|)
block|{
name|JaasRealm
name|service
init|=
name|context
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|osgiConfiguration
operator|.
name|register
argument_list|(
name|service
argument_list|,
literal|null
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifiedService
parameter_list|(
name|ServiceReference
argument_list|<
name|JaasRealm
argument_list|>
name|reference
parameter_list|,
name|JaasRealm
name|service
parameter_list|)
block|{             }
annotation|@
name|Override
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|JaasRealm
argument_list|>
name|reference
parameter_list|,
name|JaasRealm
name|service
parameter_list|)
block|{
name|osgiConfiguration
operator|.
name|unregister
argument_list|(
name|service
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|jaasRealmServiceTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|registration
operator|=
name|context
operator|.
name|registerService
argument_list|(
name|KeystoreManager
operator|.
name|class
argument_list|,
name|keystoreManager
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|registration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|keystoreInstanceServiceTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|jaasRealmServiceTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|osgiConfiguration
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


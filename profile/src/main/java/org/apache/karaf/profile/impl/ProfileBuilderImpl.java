begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|profile
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
operator|.
name|Entry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|utils
operator|.
name|properties
operator|.
name|TypedProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|profile
operator|.
name|Profile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|profile
operator|.
name|ProfileBuilder
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|profile
operator|.
name|ProfileConstants
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|profile
operator|.
name|impl
operator|.
name|ProfileImpl
operator|.
name|ConfigListType
import|;
end_import

begin_comment
comment|/**  * The default {@link ProfileBuilder}  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|ProfileBuilderImpl
implements|implements
name|ProfileBuilder
block|{
specifier|private
name|String
name|profileId
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|FileContent
argument_list|>
name|fileMapping
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|boolean
name|isOverlay
decl_stmt|;
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|from
parameter_list|(
name|Profile
name|profile
parameter_list|)
block|{
name|profileId
operator|=
name|profile
operator|.
name|getId
argument_list|()
expr_stmt|;
name|setFileConfigurations
argument_list|(
name|profile
operator|.
name|getFileConfigurations
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|identity
parameter_list|(
name|String
name|profileId
parameter_list|)
block|{
name|this
operator|.
name|profileId
operator|=
name|profileId
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getParents
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|getConfigurationInternal
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|)
decl_stmt|;
name|String
name|pspec
init|=
operator|(
name|String
operator|)
name|config
operator|.
name|get
argument_list|(
name|PARENTS
argument_list|)
decl_stmt|;
name|String
index|[]
name|parentIds
init|=
name|pspec
operator|!=
literal|null
condition|?
name|pspec
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
else|:
operator|new
name|String
index|[
literal|0
index|]
decl_stmt|;
return|return
name|Arrays
operator|.
name|asList
argument_list|(
name|parentIds
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addParent
parameter_list|(
name|String
name|parentId
parameter_list|)
block|{
return|return
name|addParentsInternal
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|parentId
argument_list|)
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addParents
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|parentIds
parameter_list|)
block|{
return|return
name|addParentsInternal
argument_list|(
name|parentIds
argument_list|,
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setParents
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|parentIds
parameter_list|)
block|{
return|return
name|addParentsInternal
argument_list|(
name|parentIds
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|private
name|ProfileBuilder
name|addParentsInternal
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|parentIds
parameter_list|,
name|boolean
name|clear
parameter_list|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|currentIds
init|=
operator|new
name|LinkedHashSet
argument_list|<>
argument_list|(
name|getParents
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|clear
condition|)
block|{
name|currentIds
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|parentIds
operator|!=
literal|null
condition|)
block|{
name|currentIds
operator|.
name|addAll
argument_list|(
name|parentIds
argument_list|)
expr_stmt|;
block|}
name|updateParentsAttribute
argument_list|(
name|currentIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|removeParent
parameter_list|(
name|String
name|profileId
parameter_list|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|currentIds
init|=
operator|new
name|LinkedHashSet
argument_list|<>
argument_list|(
name|getParents
argument_list|()
argument_list|)
decl_stmt|;
name|currentIds
operator|.
name|remove
argument_list|(
name|profileId
argument_list|)
expr_stmt|;
name|updateParentsAttribute
argument_list|(
name|currentIds
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|void
name|updateParentsAttribute
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|parentIds
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|getConfigurationInternal
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|)
decl_stmt|;
name|config
operator|.
name|remove
argument_list|(
name|PARENTS
argument_list|)
expr_stmt|;
if|if
condition|(
name|parentIds
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|config
operator|.
name|put
argument_list|(
name|PARENTS
argument_list|,
name|parentsAttributeValue
argument_list|(
name|parentIds
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|addConfiguration
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|parentsAttributeValue
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|parentIds
parameter_list|)
block|{
return|return
name|parentIds
operator|.
name|isEmpty
argument_list|()
condition|?
literal|""
else|:
name|String
operator|.
name|join
argument_list|(
literal|" "
argument_list|,
name|parentIds
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getFileConfigurationKeys
parameter_list|()
block|{
return|return
name|fileMapping
operator|.
name|keySet
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|getFileConfiguration
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|fileMapping
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|==
literal|null
condition|?
literal|null
else|:
name|fileMapping
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|.
name|bytes
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setFileConfigurations
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|byte
index|[]
argument_list|>
name|configurations
parameter_list|)
block|{
name|fileMapping
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|configurations
operator|.
name|forEach
argument_list|(
parameter_list|(
name|name
parameter_list|,
name|bytes
parameter_list|)
lambda|->
name|fileMapping
operator|.
name|put
argument_list|(
name|name
argument_list|,
operator|new
name|FileContent
argument_list|(
name|bytes
argument_list|,
literal|false
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addFileConfiguration
parameter_list|(
name|String
name|fileName
parameter_list|,
name|byte
index|[]
name|data
parameter_list|)
block|{
name|fileMapping
operator|.
name|put
argument_list|(
name|fileName
argument_list|,
operator|new
name|FileContent
argument_list|(
name|data
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|deleteFileConfiguration
parameter_list|(
name|String
name|fileName
parameter_list|)
block|{
name|fileMapping
operator|.
name|remove
argument_list|(
name|fileName
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setConfigurations
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|configs
parameter_list|)
block|{
for|for
control|(
name|String
name|pid
range|:
name|getConfigurationKeys
argument_list|()
control|)
block|{
name|deleteConfiguration
argument_list|(
name|pid
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|>
name|entry
range|:
name|configs
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|addConfiguration
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addConfiguration
parameter_list|(
name|String
name|pid
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
parameter_list|)
block|{
name|fileMapping
operator|.
name|put
argument_list|(
name|pid
operator|+
name|Profile
operator|.
name|PROPERTIES_SUFFIX
argument_list|,
operator|new
name|FileContent
argument_list|(
name|Utils
operator|.
name|toBytes
argument_list|(
name|config
argument_list|)
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addConfiguration
parameter_list|(
name|String
name|pid
parameter_list|,
name|String
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|getConfigurationInternal
argument_list|(
name|pid
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|addConfiguration
argument_list|(
name|pid
argument_list|,
name|config
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getConfigurationKeys
parameter_list|()
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|result
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|fileKey
range|:
name|fileMapping
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|fileKey
operator|.
name|endsWith
argument_list|(
name|Profile
operator|.
name|PROPERTIES_SUFFIX
argument_list|)
condition|)
block|{
name|String
name|configKey
init|=
name|fileKey
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|fileKey
operator|.
name|indexOf
argument_list|(
name|Profile
operator|.
name|PROPERTIES_SUFFIX
argument_list|)
argument_list|)
decl_stmt|;
name|result
operator|.
name|add
argument_list|(
name|configKey
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|result
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getConfiguration
parameter_list|(
name|String
name|pid
parameter_list|)
block|{
return|return
name|getConfigurationInternal
argument_list|(
name|pid
argument_list|)
return|;
block|}
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getConfigurationInternal
parameter_list|(
name|String
name|pid
parameter_list|)
block|{
name|FileContent
name|content
init|=
name|fileMapping
operator|.
name|get
argument_list|(
name|pid
operator|+
name|Profile
operator|.
name|PROPERTIES_SUFFIX
argument_list|)
decl_stmt|;
return|return
name|Utils
operator|.
name|toProperties
argument_list|(
name|content
operator|==
literal|null
condition|?
literal|null
else|:
name|content
operator|.
name|bytes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|deleteConfiguration
parameter_list|(
name|String
name|pid
parameter_list|)
block|{
name|fileMapping
operator|.
name|remove
argument_list|(
name|pid
operator|+
name|Profile
operator|.
name|PROPERTIES_SUFFIX
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setBundles
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|BUNDLES
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addBundle
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|BUNDLES
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setFeatures
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|FEATURES
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addFeature
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|FEATURES
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setRepositories
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|REPOSITORIES
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addRepository
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|REPOSITORIES
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setOverrides
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|OVERRIDES
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setOptionals
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|addProfileConfiguration
argument_list|(
name|ConfigListType
operator|.
name|OPTIONALS
argument_list|,
name|values
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|ProfileBuilder
name|setOverlay
parameter_list|(
name|boolean
name|overlay
parameter_list|)
block|{
name|this
operator|.
name|isOverlay
operator|=
name|overlay
expr_stmt|;
name|addConfiguration
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|,
name|Profile
operator|.
name|ATTRIBUTE_PREFIX
operator|+
name|Profile
operator|.
name|OVERLAY
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|overlay
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|addAttribute
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|addConfiguration
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|,
name|Profile
operator|.
name|ATTRIBUTE_PREFIX
operator|+
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
annotation|@
name|Override
specifier|public
name|ProfileBuilder
name|setAttributes
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|attributes
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|getConfigurationInternal
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|config
operator|.
name|keySet
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|Profile
operator|.
name|ATTRIBUTE_PREFIX
argument_list|)
condition|)
block|{
name|config
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|attributes
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|config
operator|.
name|put
argument_list|(
name|Profile
operator|.
name|ATTRIBUTE_PREFIX
operator|+
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|addConfiguration
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|,
name|config
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|addProfileConfiguration
parameter_list|(
name|ConfigListType
name|type
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|values
parameter_list|)
block|{
name|String
name|prefix
init|=
name|type
operator|+
literal|"."
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|getConfigurationInternal
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|config
operator|.
name|keySet
argument_list|()
argument_list|)
control|)
block|{
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|prefix
argument_list|)
condition|)
block|{
name|config
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|value
range|:
name|values
control|)
block|{
name|config
operator|.
name|put
argument_list|(
name|prefix
operator|+
name|value
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
name|addConfiguration
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|addProfileConfiguration
parameter_list|(
name|ConfigListType
name|type
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|String
name|prefix
init|=
name|type
operator|+
literal|"."
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
name|getConfigurationInternal
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|)
decl_stmt|;
name|config
operator|.
name|put
argument_list|(
name|prefix
operator|+
name|value
argument_list|,
name|value
argument_list|)
expr_stmt|;
name|addConfiguration
argument_list|(
name|Profile
operator|.
name|INTERNAL_PID
argument_list|,
name|config
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns an immutable implementation of {@link Profile}      * @return      */
annotation|@
name|Override
specifier|public
name|Profile
name|getProfile
parameter_list|()
block|{
comment|// reformatting all generated files.
name|Map
argument_list|<
name|String
argument_list|,
name|byte
index|[]
argument_list|>
name|files
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|fileMapping
operator|.
name|forEach
argument_list|(
parameter_list|(
name|k
parameter_list|,
name|v
parameter_list|)
lambda|->
name|files
operator|.
name|put
argument_list|(
name|k
argument_list|,
name|reformat
argument_list|(
name|k
argument_list|,
name|v
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
operator|new
name|ProfileImpl
argument_list|(
name|profileId
argument_list|,
name|getParents
argument_list|()
argument_list|,
name|files
argument_list|,
name|isOverlay
argument_list|)
return|;
block|}
comment|/**      * If some properties file has been marked as {@link FileContent#generated}, then we can add some comment hints.      * @param name      * @param fileContent      * @return      */
specifier|private
name|byte
index|[]
name|reformat
parameter_list|(
name|String
name|name
parameter_list|,
name|FileContent
name|fileContent
parameter_list|)
block|{
if|if
condition|(
operator|!
name|fileContent
operator|.
name|generated
operator|&&
operator|!
operator|(
name|isOverlay
operator|&&
name|name
operator|.
name|equals
argument_list|(
name|INTERNAL_PID
operator|+
name|PROPERTIES_SUFFIX
argument_list|)
operator|)
condition|)
block|{
return|return
name|fileContent
operator|.
name|bytes
return|;
block|}
name|TypedProperties
name|properties
init|=
name|Utils
operator|.
name|toProperties
argument_list|(
name|fileContent
operator|.
name|bytes
argument_list|)
decl_stmt|;
name|TypedProperties
name|result
init|=
name|Utils
operator|.
name|toProperties
argument_list|(
operator|(
name|byte
index|[]
operator|)
literal|null
argument_list|)
decl_stmt|;
name|String
name|parents
init|=
literal|null
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|attributes
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|repositories
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|features
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|bundles
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|libraries
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|bootLibraries
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|endorsedLibraries
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|extLibraries
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|config
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|system
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|overrides
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|optionals
init|=
operator|new
name|LinkedHashMap
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|key
range|:
name|properties
operator|.
name|keySet
argument_list|()
control|)
block|{
name|Object
name|v
init|=
name|properties
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|.
name|equals
argument_list|(
name|PARENTS
argument_list|)
condition|)
block|{
name|parents
operator|=
operator|(
name|String
operator|)
name|v
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|ATTRIBUTE_PREFIX
argument_list|)
condition|)
block|{
name|attributes
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|REPOSITORY_PREFIX
argument_list|)
condition|)
block|{
name|repositories
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|FEATURE_PREFIX
argument_list|)
condition|)
block|{
name|features
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|BUNDLE_PREFIX
argument_list|)
condition|)
block|{
name|bundles
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|LIB_PREFIX
argument_list|)
condition|)
block|{
name|libraries
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|BOOT_PREFIX
argument_list|)
condition|)
block|{
name|bootLibraries
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|ENDORSED_PREFIX
argument_list|)
condition|)
block|{
name|endorsedLibraries
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|EXT_PREFIX
argument_list|)
condition|)
block|{
name|extLibraries
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|CONFIG_PREFIX
argument_list|)
condition|)
block|{
name|config
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|SYSTEM_PREFIX
argument_list|)
condition|)
block|{
name|system
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|OVERRIDE_PREFIX
argument_list|)
condition|)
block|{
name|overrides
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|key
operator|.
name|startsWith
argument_list|(
name|OPTIONAL_PREFIX
argument_list|)
condition|)
block|{
name|optionals
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|v
argument_list|)
expr_stmt|;
block|}
block|}
name|result
operator|.
name|setHeader
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|"#"
argument_list|,
literal|"# Profile generated by Karaf Assembly Builder"
argument_list|,
literal|"#"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|parents
operator|!=
literal|null
condition|)
block|{
name|result
operator|.
name|put
argument_list|(
name|PARENTS
argument_list|,
name|comment
argument_list|(
literal|"Parent profiles"
argument_list|)
argument_list|,
name|parents
argument_list|)
expr_stmt|;
block|}
name|addGroupOfProperties
argument_list|(
literal|"Attributes"
argument_list|,
name|result
argument_list|,
name|attributes
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Feature XML repositories"
argument_list|,
name|result
argument_list|,
name|repositories
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Features"
argument_list|,
name|result
argument_list|,
name|features
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Bundles"
argument_list|,
name|result
argument_list|,
name|bundles
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Libraries"
argument_list|,
name|result
argument_list|,
name|libraries
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Boot libraries"
argument_list|,
name|result
argument_list|,
name|bootLibraries
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Endorsed libraries"
argument_list|,
name|result
argument_list|,
name|endorsedLibraries
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Extension libraries"
argument_list|,
name|result
argument_list|,
name|extLibraries
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Configuration properties for etc/config.properties"
argument_list|,
name|result
argument_list|,
name|config
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Configuration properties for etc/system.properties"
argument_list|,
name|result
argument_list|,
name|system
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Bundle overrides (deprecated)"
argument_list|,
name|result
argument_list|,
name|overrides
argument_list|)
expr_stmt|;
name|addGroupOfProperties
argument_list|(
literal|"Optional resources for resolution"
argument_list|,
name|result
argument_list|,
name|optionals
argument_list|)
expr_stmt|;
return|return
name|Utils
operator|.
name|toBytes
argument_list|(
name|result
argument_list|)
return|;
block|}
comment|/**      * Puts properties under single comment.      * @param comment      * @param properties      * @param values      */
specifier|private
name|void
name|addGroupOfProperties
parameter_list|(
name|String
name|comment
parameter_list|,
name|TypedProperties
name|properties
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|values
parameter_list|)
block|{
name|boolean
name|first
init|=
literal|true
decl_stmt|;
for|for
control|(
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|entry
range|:
name|values
operator|.
name|entrySet
argument_list|()
control|)
block|{
if|if
condition|(
name|first
condition|)
block|{
name|first
operator|=
literal|false
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|comment
argument_list|(
name|comment
argument_list|)
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|properties
operator|.
name|put
argument_list|(
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
name|entry
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Helper method to generate comments above property groups in {@link TypedProperties}      * @param comment      * @return      */
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|comment
parameter_list|(
name|String
name|comment
parameter_list|)
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
literal|""
argument_list|,
literal|"# "
operator|+
name|comment
argument_list|)
return|;
block|}
comment|/**      * We can distinguish between bytes read from external file and bytes from serialized      * {@link org.apache.felix.utils.properties.TypedProperties}      */
specifier|static
class|class
name|FileContent
block|{
name|byte
index|[]
name|bytes
decl_stmt|;
name|boolean
name|generated
decl_stmt|;
specifier|public
name|FileContent
parameter_list|(
name|byte
index|[]
name|bytes
parameter_list|,
name|boolean
name|generated
parameter_list|)
block|{
name|this
operator|.
name|bytes
operator|=
name|bytes
expr_stmt|;
name|this
operator|.
name|generated
operator|=
name|generated
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
return|return
literal|false
return|;
name|FileContent
name|that
init|=
operator|(
name|FileContent
operator|)
name|o
decl_stmt|;
return|return
name|Arrays
operator|.
name|equals
argument_list|(
name|bytes
argument_list|,
name|that
operator|.
name|bytes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|hashCode
argument_list|(
name|bytes
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit


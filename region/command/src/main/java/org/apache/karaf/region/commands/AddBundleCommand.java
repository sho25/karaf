begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|region
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|equinox
operator|.
name|region
operator|.
name|Region
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|equinox
operator|.
name|region
operator|.
name|RegionDigraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"region"
argument_list|,
name|name
operator|=
literal|"bundle-add"
argument_list|,
name|description
operator|=
literal|"Adds a list of known bundles by id to a specified region."
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|AddBundleCommand
extends|extends
name|RegionCommandSupport
block|{
annotation|@
name|Argument
argument_list|(
name|index
operator|=
literal|0
argument_list|,
name|name
operator|=
literal|"region"
argument_list|,
name|description
operator|=
literal|"Region to add the bundles to"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|String
name|region
decl_stmt|;
annotation|@
name|Argument
argument_list|(
name|index
operator|=
literal|1
argument_list|,
name|name
operator|=
literal|"bundles"
argument_list|,
name|description
operator|=
literal|"Bundles by id to add to the region"
argument_list|,
name|required
operator|=
literal|true
argument_list|,
name|multiValued
operator|=
literal|true
argument_list|)
name|List
argument_list|<
name|Long
argument_list|>
name|ids
decl_stmt|;
specifier|protected
name|void
name|doExecute
parameter_list|(
name|RegionDigraph
name|regionDigraph
parameter_list|)
throws|throws
name|Exception
block|{
name|Region
name|r
init|=
name|getRegion
argument_list|(
name|regionDigraph
argument_list|,
name|region
argument_list|)
decl_stmt|;
for|for
control|(
name|Long
name|id
range|:
name|ids
control|)
block|{
for|for
control|(
name|Region
name|existing
range|:
name|regionDigraph
operator|.
name|getRegions
argument_list|()
control|)
block|{
if|if
condition|(
name|existing
operator|.
name|contains
argument_list|(
name|id
argument_list|)
condition|)
block|{
name|Bundle
name|b
init|=
name|bundleContext
operator|.
name|getBundle
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Removing bundle "
operator|+
name|id
operator|+
literal|" from region "
operator|+
name|existing
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|existing
operator|.
name|removeBundle
argument_list|(
name|b
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|r
operator|.
name|addBundle
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


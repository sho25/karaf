begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|bundle
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|bundle
operator|.
name|core
operator|.
name|internal
operator|.
name|BundleServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_class
specifier|public
class|class
name|ListServicesTest
block|{
specifier|private
name|BundleContext
name|bundleContext
decl_stmt|;
specifier|private
name|Services
name|listServices
decl_stmt|;
specifier|public
name|ListServicesTest
parameter_list|()
block|{
name|listServices
operator|=
operator|new
name|Services
argument_list|()
expr_stmt|;
name|bundleContext
operator|=
operator|new
name|TestBundleFactory
argument_list|()
operator|.
name|createBundleContext
argument_list|()
expr_stmt|;
name|listServices
operator|.
name|context
operator|=
literal|null
expr_stmt|;
name|listServices
operator|.
name|setBundleContext
argument_list|(
name|bundleContext
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|setBundleService
argument_list|(
operator|new
name|BundleServiceImpl
argument_list|(
name|bundleContext
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listAllShort
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"listAllShort"
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listAllLong
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"listAllLong"
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|ids
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"1"
block|,
literal|"2"
block|}
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|listAllLongServiceUse
parameter_list|()
throws|throws
name|Exception
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"listAllLongServicesUse"
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|ids
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"1"
block|,
literal|"2"
block|}
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|inUse
operator|=
literal|true
expr_stmt|;
name|listServices
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


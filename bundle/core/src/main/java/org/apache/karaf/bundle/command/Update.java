begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|bundle
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|bundles
operator|.
name|BundleUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|wiring
operator|.
name|FrameworkWiring
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"bundle"
argument_list|,
name|name
operator|=
literal|"update"
argument_list|,
name|description
operator|=
literal|"Update bundle."
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|Update
extends|extends
name|BundleCommand
block|{
annotation|@
name|Argument
argument_list|(
name|index
operator|=
literal|1
argument_list|,
name|name
operator|=
literal|"location"
argument_list|,
name|description
operator|=
literal|"The bundles update location"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|URI
name|location
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"--raw"
argument_list|,
name|description
operator|=
literal|"Do not update the bundles's Bundle-UpdateLocation manifest header"
argument_list|)
name|boolean
name|raw
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-r"
argument_list|,
name|aliases
operator|=
block|{
literal|"--refresh"
block|}
argument_list|,
name|description
operator|=
literal|"Perform a refresh after the bundle update"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|refresh
decl_stmt|;
specifier|protected
name|Object
name|doExecute
parameter_list|(
name|Bundle
name|bundle
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|location
operator|!=
literal|null
condition|)
block|{
name|update
argument_list|(
name|bundle
argument_list|,
name|location
operator|.
name|toURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|loc
init|=
name|bundle
operator|.
name|getHeaders
argument_list|()
operator|.
name|get
argument_list|(
name|Constants
operator|.
name|BUNDLE_UPDATELOCATION
argument_list|)
decl_stmt|;
if|if
condition|(
name|loc
operator|!=
literal|null
operator|&&
operator|!
name|loc
operator|.
name|equals
argument_list|(
name|bundle
operator|.
name|getLocation
argument_list|()
argument_list|)
condition|)
block|{
name|update
argument_list|(
name|bundle
argument_list|,
operator|new
name|URL
argument_list|(
name|loc
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|bundle
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
block|}
if|if
condition|(
name|refresh
condition|)
block|{
name|FrameworkWiring
name|wiring
init|=
name|bundleContext
operator|.
name|getBundle
argument_list|(
literal|0
argument_list|)
operator|.
name|adapt
argument_list|(
name|FrameworkWiring
operator|.
name|class
argument_list|)
decl_stmt|;
name|wiring
operator|.
name|refreshBundles
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|update
parameter_list|(
name|Bundle
name|bundle
parameter_list|,
name|URL
name|location
parameter_list|)
throws|throws
name|IOException
throws|,
name|BundleException
block|{
try|try
init|(
name|InputStream
name|is
init|=
name|location
operator|.
name|openStream
argument_list|()
init|)
block|{
if|if
condition|(
name|raw
condition|)
block|{
name|bundle
operator|.
name|update
argument_list|(
name|is
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|File
name|file
init|=
name|BundleUtils
operator|.
name|fixBundleWithUpdateLocation
argument_list|(
name|is
argument_list|,
name|location
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|FileInputStream
name|fis
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
init|)
block|{
name|bundle
operator|.
name|update
argument_list|(
name|fis
argument_list|)
expr_stmt|;
block|}
name|file
operator|.
name|delete
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|utils
operator|.
name|manifest
operator|.
name|Clause
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|BundleInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|tinybundles
operator|.
name|core
operator|.
name|TinyBundles
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|OverridesTest
block|{
specifier|private
name|String
name|bsn
init|=
literal|"bsn"
decl_stmt|;
specifier|private
name|File
name|b100
decl_stmt|;
specifier|private
name|File
name|b101
decl_stmt|;
specifier|private
name|File
name|b102
decl_stmt|;
specifier|private
name|File
name|b110
decl_stmt|;
specifier|private
name|File
name|c100
decl_stmt|;
specifier|private
name|File
name|c101
decl_stmt|;
specifier|private
name|File
name|c110
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|IOException
block|{
name|b100
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"-100.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.0.0"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|b100
argument_list|)
argument_list|)
expr_stmt|;
name|b101
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"-101.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.0.1"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|b101
argument_list|)
argument_list|)
expr_stmt|;
name|b102
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"-102.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.0.2"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|b102
argument_list|)
argument_list|)
expr_stmt|;
name|b110
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"-110.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.1.0"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|b110
argument_list|)
argument_list|)
expr_stmt|;
name|c100
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karafc"
argument_list|,
literal|"-100.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.0.0"
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Vendor"
argument_list|,
literal|"Apache"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|c100
argument_list|)
argument_list|)
expr_stmt|;
name|c101
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karafc"
argument_list|,
literal|"-101.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.0.1"
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Vendor"
argument_list|,
literal|"NotApache"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|c101
argument_list|)
argument_list|)
expr_stmt|;
name|c110
operator|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karafc"
argument_list|,
literal|"-110.jar"
argument_list|)
expr_stmt|;
name|copy
argument_list|(
name|TinyBundles
operator|.
name|bundle
argument_list|()
operator|.
name|set
argument_list|(
literal|"Bundle-SymbolicName"
argument_list|,
name|bsn
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Version"
argument_list|,
literal|"1.1.0"
argument_list|)
operator|.
name|set
argument_list|(
literal|"Bundle-Vendor"
argument_list|,
literal|"NotApache"
argument_list|)
operator|.
name|build
argument_list|()
argument_list|,
operator|new
name|FileOutputStream
argument_list|(
name|c110
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDifferentVendors
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|props
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"properties"
argument_list|)
decl_stmt|;
name|Writer
name|w
init|=
operator|new
name|FileWriter
argument_list|(
name|props
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
name|c101
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|c110
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|res
init|=
name|Overrides
operator|.
name|override
argument_list|(
name|Arrays
operator|.
expr|<
name|BundleInfo
operator|>
name|asList
argument_list|(
operator|new
name|Bundle
argument_list|(
name|c100
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|props
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|BundleInfo
name|out
init|=
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|c101
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|out
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatching101
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|props
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"properties"
argument_list|)
decl_stmt|;
name|Writer
name|w
init|=
operator|new
name|FileWriter
argument_list|(
name|props
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b101
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b110
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|res
init|=
name|Overrides
operator|.
name|override
argument_list|(
name|Arrays
operator|.
expr|<
name|BundleInfo
operator|>
name|asList
argument_list|(
operator|new
name|Bundle
argument_list|(
name|b100
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|props
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|BundleInfo
name|out
init|=
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b101
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|out
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatching102
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|props
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"properties"
argument_list|)
decl_stmt|;
name|Writer
name|w
init|=
operator|new
name|FileWriter
argument_list|(
name|props
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b101
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b102
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b110
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|res
init|=
name|Overrides
operator|.
name|override
argument_list|(
name|Arrays
operator|.
expr|<
name|BundleInfo
operator|>
name|asList
argument_list|(
operator|new
name|Bundle
argument_list|(
name|b100
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|props
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|BundleInfo
name|out
init|=
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b102
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|out
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testMatchingRange
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|props
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"properties"
argument_list|)
decl_stmt|;
name|Writer
name|w
init|=
operator|new
name|FileWriter
argument_list|(
name|props
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b101
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b110
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|";range=\"[1.0, 2.0)\"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|res
init|=
name|Overrides
operator|.
name|override
argument_list|(
name|Arrays
operator|.
expr|<
name|BundleInfo
operator|>
name|asList
argument_list|(
operator|new
name|Bundle
argument_list|(
name|b100
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|props
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|BundleInfo
name|out
init|=
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b110
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|out
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNotMatching
parameter_list|()
throws|throws
name|IOException
block|{
name|File
name|props
init|=
name|File
operator|.
name|createTempFile
argument_list|(
literal|"karaf"
argument_list|,
literal|"properties"
argument_list|)
decl_stmt|;
name|Writer
name|w
init|=
operator|new
name|FileWriter
argument_list|(
name|props
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
name|b110
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|w
operator|.
name|write
argument_list|(
literal|"\n"
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|res
init|=
name|Overrides
operator|.
name|override
argument_list|(
name|Arrays
operator|.
expr|<
name|BundleInfo
operator|>
name|asList
argument_list|(
operator|new
name|Bundle
argument_list|(
name|b100
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
argument_list|,
name|props
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|res
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|res
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|BundleInfo
name|out
init|=
name|res
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|b100
operator|.
name|toURI
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|out
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoadOverrides
parameter_list|()
block|{
name|List
argument_list|<
name|Clause
argument_list|>
name|overrides
init|=
name|Overrides
operator|.
name|loadOverrides
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"overrides.properties"
argument_list|)
operator|.
name|toExternalForm
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|overrides
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Clause
name|karafAdminCommand
init|=
literal|null
decl_stmt|;
name|Clause
name|karafAdminCore
init|=
literal|null
decl_stmt|;
for|for
control|(
name|Clause
name|clause
range|:
name|overrides
control|)
block|{
if|if
condition|(
name|clause
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"mvn:org.apache.karaf.admin/org.apache.karaf.admin.command/2.3.0.redhat-61033X"
argument_list|)
condition|)
block|{
name|karafAdminCommand
operator|=
name|clause
expr_stmt|;
block|}
if|if
condition|(
name|clause
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"mvn:org.apache.karaf.admin/org.apache.karaf.admin.core/2.3.0.redhat-61033X"
argument_list|)
condition|)
block|{
name|karafAdminCore
operator|=
name|clause
expr_stmt|;
block|}
block|}
name|assertNotNull
argument_list|(
literal|"Missing admin.command bundle override"
argument_list|,
name|karafAdminCommand
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing admin.core bundle override"
argument_list|,
name|karafAdminCore
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
literal|"Missing range on admin.core override"
argument_list|,
name|karafAdminCore
operator|.
name|getAttribute
argument_list|(
name|Overrides
operator|.
name|OVERRIDE_RANGE
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Copies the content of {@link java.io.InputStream} to {@link java.io.OutputStream}.      *      * @param input      * @param output      * @throws java.io.IOException      */
specifier|private
name|void
name|copy
parameter_list|(
specifier|final
name|InputStream
name|input
parameter_list|,
specifier|final
name|OutputStream
name|output
parameter_list|)
throws|throws
name|IOException
block|{
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
literal|1024
operator|*
literal|16
index|]
decl_stmt|;
name|int
name|n
decl_stmt|;
while|while
condition|(
operator|-
literal|1
operator|!=
operator|(
name|n
operator|=
name|input
operator|.
name|read
argument_list|(
name|buffer
argument_list|)
operator|)
condition|)
block|{
name|output
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|n
argument_list|)
expr_stmt|;
name|output
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
name|input
operator|.
name|close
argument_list|()
expr_stmt|;
name|output
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


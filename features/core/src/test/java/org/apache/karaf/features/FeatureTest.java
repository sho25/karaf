begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|FeatureTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testValueOf
parameter_list|()
block|{
name|Feature
name|feature
init|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
operator|.
name|valueOf
argument_list|(
literal|"name/1.0.0"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|feature
operator|.
name|getName
argument_list|()
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|feature
operator|.
name|getVersion
argument_list|()
argument_list|,
literal|"1.0.0"
argument_list|)
expr_stmt|;
name|feature
operator|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
operator|.
name|valueOf
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|feature
operator|.
name|getName
argument_list|()
argument_list|,
literal|"name"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|feature
operator|.
name|getVersion
argument_list|()
argument_list|,
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
operator|.
name|DEFAULT_VERSION
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|codec
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_BLACKLISTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_BUNDLES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_CONFIGURATIONFILES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_CONFIGURATIONS
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_CONFIG_PID
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_DEPENDENCIES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_INSTALLED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_REQUIRED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|FEATURE_VERSION
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|TabularData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Config
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|ConfigFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Dependency
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JmxFeatureTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testJmxFeatureCompositeData
parameter_list|()
throws|throws
name|Exception
block|{
name|Feature
name|feature
init|=
operator|new
name|Feature
argument_list|()
decl_stmt|;
name|feature
operator|.
name|setName
argument_list|(
literal|"test-feature"
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setVersion
argument_list|(
literal|"1.0.0"
argument_list|)
expr_stmt|;
name|feature
operator|.
name|setBlacklisted
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Dependency
name|dependency
init|=
operator|new
name|Dependency
argument_list|()
decl_stmt|;
name|dependency
operator|.
name|setName
argument_list|(
literal|"test-dependent-feature"
argument_list|)
expr_stmt|;
name|dependency
operator|.
name|setVersion
argument_list|(
literal|"1.0.0"
argument_list|)
expr_stmt|;
name|feature
operator|.
name|getFeature
argument_list|()
operator|.
name|add
argument_list|(
name|dependency
argument_list|)
expr_stmt|;
name|Bundle
name|bundle
init|=
operator|new
name|Bundle
argument_list|()
decl_stmt|;
name|bundle
operator|.
name|setLocation
argument_list|(
literal|"mvn:org.test/test/1.0.0"
argument_list|)
expr_stmt|;
name|feature
operator|.
name|getBundle
argument_list|()
operator|.
name|add
argument_list|(
name|bundle
argument_list|)
expr_stmt|;
name|Config
name|config
init|=
operator|new
name|Config
argument_list|()
decl_stmt|;
name|config
operator|.
name|setName
argument_list|(
name|FEATURE_CONFIG_PID
argument_list|)
expr_stmt|;
name|config
operator|.
name|setValue
argument_list|(
literal|"org.test.pid"
argument_list|)
expr_stmt|;
name|config
operator|.
name|setAppend
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|config
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
literal|"test-key"
argument_list|,
literal|"test-value"
argument_list|)
expr_stmt|;
name|feature
operator|.
name|getConfig
argument_list|()
operator|.
name|add
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|ConfigFile
name|configFile
init|=
operator|new
name|ConfigFile
argument_list|()
decl_stmt|;
name|configFile
operator|.
name|setFinalname
argument_list|(
literal|"test-configfile.cfg"
argument_list|)
expr_stmt|;
name|feature
operator|.
name|getConfigfile
argument_list|()
operator|.
name|add
argument_list|(
name|configFile
argument_list|)
expr_stmt|;
name|JmxFeature
name|jmxFeature
init|=
operator|new
name|JmxFeature
argument_list|(
name|feature
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|CompositeData
name|compositeData
init|=
name|jmxFeature
operator|.
name|asCompositeData
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test-feature"
argument_list|,
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"1.0.0"
argument_list|,
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_VERSION
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
name|Boolean
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_INSTALLED
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
name|Boolean
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_BLACKLISTED
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
name|Boolean
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_REQUIRED
argument_list|)
argument_list|)
expr_stmt|;
name|TabularData
name|featureDependencies
init|=
operator|(
name|TabularData
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_DEPENDENCIES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|featureDependencies
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|featureDependencies
operator|.
name|get
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"test-dependent-feature"
block|,
literal|"1.0.0"
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|bundleUrls
init|=
operator|(
name|String
index|[]
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_BUNDLES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"mvn:org.test/test/1.0.0"
block|}
argument_list|,
name|bundleUrls
argument_list|)
expr_stmt|;
name|TabularData
name|featureConfigs
init|=
operator|(
name|TabularData
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_CONFIGURATIONS
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|featureConfigs
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|featureConfigs
operator|.
name|get
argument_list|(
operator|new
name|Object
index|[]
block|{
name|FEATURE_CONFIG_PID
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|TabularData
name|featureConfigFiles
init|=
operator|(
name|TabularData
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|FEATURE_CONFIGURATIONFILES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|featureConfigFiles
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|featureConfigFiles
operator|.
name|get
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"test-configfile.cfg"
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


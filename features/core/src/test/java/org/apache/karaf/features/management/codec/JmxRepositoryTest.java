begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|codec
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|REPOSITORY_BLACKLISTED
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|REPOSITORY_FEATURES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|REPOSITORY_NAME
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|REPOSITORY_REPOSITORIES
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|FeaturesServiceMBean
operator|.
name|REPOSITORY_URI
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|CompositeData
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|TabularData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Features
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|service
operator|.
name|RepositoryImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|JmxRepositoryTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testJmxRepositoryCompositeData
parameter_list|()
throws|throws
name|Exception
block|{
name|Features
name|features
init|=
operator|new
name|Features
argument_list|()
decl_stmt|;
name|features
operator|.
name|setName
argument_list|(
literal|"test-1.0.0"
argument_list|)
expr_stmt|;
name|features
operator|.
name|getRepository
argument_list|()
operator|.
name|add
argument_list|(
literal|"mvn:org.test/test-dependency/1.0.0/xml/features"
argument_list|)
expr_stmt|;
name|features
operator|.
name|getFeature
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Feature
argument_list|(
literal|"test-feature"
argument_list|,
literal|"1.0.0"
argument_list|)
argument_list|)
expr_stmt|;
name|URI
name|uri
init|=
operator|new
name|URI
argument_list|(
literal|"mvn:org.test/test/1.0.0/xml/features"
argument_list|)
decl_stmt|;
name|Repository
name|repository
init|=
operator|new
name|RepositoryImpl
argument_list|(
name|uri
argument_list|,
name|features
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|JmxRepository
name|jmxRepository
init|=
operator|new
name|JmxRepository
argument_list|(
name|repository
argument_list|)
decl_stmt|;
name|CompositeData
name|compositeData
init|=
name|jmxRepository
operator|.
name|asCompositeData
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"test-1.0.0"
argument_list|,
name|compositeData
operator|.
name|get
argument_list|(
name|REPOSITORY_NAME
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|,
name|compositeData
operator|.
name|get
argument_list|(
name|REPOSITORY_URI
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|(
name|Boolean
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|REPOSITORY_BLACKLISTED
argument_list|)
argument_list|)
expr_stmt|;
name|String
index|[]
name|repositoryUris
init|=
operator|(
name|String
index|[]
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|REPOSITORY_REPOSITORIES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryUris
operator|.
name|length
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.test/test-dependency/1.0.0/xml/features"
argument_list|,
name|repositoryUris
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|TabularData
name|repositoryFeatures
init|=
operator|(
name|TabularData
operator|)
name|compositeData
operator|.
name|get
argument_list|(
name|REPOSITORY_FEATURES
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|repositoryFeatures
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|repositoryFeatures
operator|.
name|get
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"test-feature"
block|,
literal|"1.0.0"
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


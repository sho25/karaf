begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|service
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|BundleInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Features
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|JaxbUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|BlacklistTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBlacklistFeatureWithRange
parameter_list|()
block|{
name|Stream
argument_list|<
name|Feature
argument_list|>
name|features
init|=
name|blacklistWith
argument_list|(
literal|"spring;range=\"[2,3)\""
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|features
operator|.
name|noneMatch
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"spring/2.5.6.SEC02"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBlacklistFeatureWithVersion
parameter_list|()
block|{
name|Stream
argument_list|<
name|Feature
argument_list|>
name|features
init|=
name|blacklistWith
argument_list|(
literal|"spring;range=2.5.6.SEC02"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|features
operator|.
name|noneMatch
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getId
argument_list|()
operator|.
name|equals
argument_list|(
literal|"spring/2.5.6.SEC02"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBlacklistFeatureWithoutVersion
parameter_list|()
block|{
name|Stream
argument_list|<
name|Feature
argument_list|>
name|features
init|=
name|blacklistWith
argument_list|(
literal|"spring"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|features
operator|.
name|noneMatch
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getId
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"spring/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testBlacklistBundle
parameter_list|()
block|{
name|String
name|blacklisted
init|=
literal|"mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jasypt/1.7_1"
decl_stmt|;
name|Stream
argument_list|<
name|Feature
argument_list|>
name|features
init|=
name|blacklistWith
argument_list|(
name|blacklisted
argument_list|)
decl_stmt|;
name|Stream
argument_list|<
name|BundleInfo
argument_list|>
name|bundles
init|=
name|features
operator|.
name|flatMap
argument_list|(
name|f
lambda|->
name|f
operator|.
name|getBundles
argument_list|()
operator|.
name|stream
argument_list|()
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|bundles
operator|.
name|noneMatch
argument_list|(
name|b
lambda|->
name|b
operator|.
name|getLocation
argument_list|()
operator|.
name|equals
argument_list|(
name|blacklisted
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Stream
argument_list|<
name|Feature
argument_list|>
name|blacklistWith
parameter_list|(
name|String
name|blacklistClause
parameter_list|)
block|{
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"f02.xml"
argument_list|)
decl_stmt|;
name|Features
name|features
init|=
name|JaxbUtil
operator|.
name|unmarshal
argument_list|(
name|url
operator|.
name|toExternalForm
argument_list|()
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|Blacklist
name|blacklist
init|=
operator|new
name|Blacklist
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|blacklistClause
argument_list|)
argument_list|)
decl_stmt|;
name|blacklist
operator|.
name|blacklist
argument_list|(
name|features
argument_list|)
expr_stmt|;
return|return
name|features
operator|.
name|getFeature
argument_list|()
operator|.
name|stream
argument_list|()
return|;
block|}
block|}
end_class

end_unit


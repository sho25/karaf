begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|BundleInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|ConfigFileInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|ConfigInfo
import|;
end_import

begin_class
annotation|@
name|XmlTransient
specifier|public
class|class
name|Content
block|{
specifier|protected
name|List
argument_list|<
name|Config
argument_list|>
name|config
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|ConfigFile
argument_list|>
name|configfile
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|Dependency
argument_list|>
name|feature
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|Bundle
argument_list|>
name|bundle
decl_stmt|;
comment|/**      *<p>Gets the value of the config property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.      * This is why there is not a<CODE>set</CODE> method for the config property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *<pre>      *    getConfig().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link Config }</p>      *      * @return the list of config elements in a feature.      */
specifier|public
name|List
argument_list|<
name|Config
argument_list|>
name|getConfig
parameter_list|()
block|{
if|if
condition|(
name|config
operator|==
literal|null
condition|)
block|{
name|config
operator|=
operator|new
name|ArrayList
argument_list|<
name|Config
argument_list|>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|config
return|;
block|}
comment|/**      *<p>Gets the value of the configfile property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.      * This is why there is not a<CODE>set</CODE> method for the configfile property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *<pre>      *    getConfigfile().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link ConfigFile }</p>      *      * @return the list of configfile elements in a feature.      */
specifier|public
name|List
argument_list|<
name|ConfigFile
argument_list|>
name|getConfigfile
parameter_list|()
block|{
if|if
condition|(
name|configfile
operator|==
literal|null
condition|)
block|{
name|configfile
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|configfile
return|;
block|}
comment|/**      *<p>Gets the value of the feature property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.      * This is why there is not a<CODE>set</CODE> method for the feature property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *<pre>      *    getFeatures().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link Dependency }</p>      *      * @return the list of dependency features in a feature.      */
specifier|public
name|List
argument_list|<
name|Dependency
argument_list|>
name|getFeature
parameter_list|()
block|{
if|if
condition|(
name|feature
operator|==
literal|null
condition|)
block|{
name|feature
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|feature
return|;
block|}
comment|/**      *<p>Gets the value of the bundle property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.      * This is why there is not a<CODE>set</CODE> method for the bundle property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *<pre>      *    getBundle().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link Bundle }</p>      *      * @return the list of bundle elements in a feature.      */
specifier|public
name|List
argument_list|<
name|Bundle
argument_list|>
name|getBundle
parameter_list|()
block|{
if|if
condition|(
name|bundle
operator|==
literal|null
condition|)
block|{
name|bundle
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|bundle
return|;
block|}
specifier|public
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Dependency
argument_list|>
name|getDependencies
parameter_list|()
block|{
return|return
name|Collections
operator|.
expr|<
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Dependency
operator|>
name|unmodifiableList
argument_list|(
name|getFeature
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|getBundles
parameter_list|()
block|{
return|return
name|Collections
operator|.
expr|<
name|BundleInfo
operator|>
name|unmodifiableList
argument_list|(
name|getBundle
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|ConfigInfo
argument_list|>
name|getConfigurations
parameter_list|()
block|{
return|return
name|Collections
operator|.
expr|<
name|ConfigInfo
operator|>
name|unmodifiableList
argument_list|(
name|getConfig
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|ConfigFileInfo
argument_list|>
name|getConfigurationFiles
parameter_list|()
block|{
return|return
name|Collections
operator|.
expr|<
name|ConfigFileInfo
operator|>
name|unmodifiableList
argument_list|(
name|getConfigfile
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit


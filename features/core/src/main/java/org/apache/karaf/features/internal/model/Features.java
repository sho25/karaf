begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlRootElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlSchemaType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlTransient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_comment
comment|/**  *<p>Root element of Feature definition. It contains optional attribute which allow  * name of repository. This name will be used in shell to display source repository  * of given feature.</p>  *<p>Java class for featuresRoot complex type.</p>  *<p>The following schema fragment specifies the expected content contained within this class.</p>  *<pre>  *&lt;complexType name="features"&gt;  *&lt;complexContent&gt;  *&lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;  *&lt;sequence&gt;  *&lt;element name="repository" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/&gt;  *&lt;element name="resource-repository" type="{http://www.w3.org/2001/XMLSchema}anyURI" maxOccurs="unbounded" minOccurs="0"/&gt;  *&lt;element name="feature" type="{http://karaf.apache.org/xmlns/features/v1.0.0}feature" maxOccurs="unbounded" minOccurs="0"/&gt;  *&lt;/sequence&gt;  *&lt;attribute name="name" type="{http://www.w3.org/2001/XMLSchema}string" /&gt;  *&lt;/restriction&gt;  *&lt;/complexContent&gt;  *&lt;/complexType&gt;  *</pre>  */
end_comment

begin_class
annotation|@
name|XmlRootElement
argument_list|(
name|name
operator|=
literal|"features"
argument_list|,
name|namespace
operator|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesNamespaces
operator|.
name|URI_CURRENT
argument_list|)
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|"features"
argument_list|,
name|propOrder
operator|=
block|{
literal|"repository"
block|,
literal|"resourceRepository"
block|,
literal|"feature"
block|}
argument_list|)
specifier|public
class|class
name|Features
block|{
annotation|@
name|XmlSchemaType
argument_list|(
name|name
operator|=
literal|"anyURI"
argument_list|)
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"repository"
argument_list|,
name|namespace
operator|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesNamespaces
operator|.
name|URI_CURRENT
argument_list|)
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|repository
decl_stmt|;
annotation|@
name|XmlSchemaType
argument_list|(
name|name
operator|=
literal|"anyURI"
argument_list|)
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"resource-repository"
argument_list|,
name|namespace
operator|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesNamespaces
operator|.
name|URI_CURRENT
argument_list|)
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|resourceRepository
decl_stmt|;
annotation|@
name|XmlElement
argument_list|(
name|name
operator|=
literal|"feature"
argument_list|,
name|namespace
operator|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesNamespaces
operator|.
name|URI_CURRENT
argument_list|)
specifier|protected
name|List
argument_list|<
name|Feature
argument_list|>
name|feature
decl_stmt|;
annotation|@
name|XmlAttribute
specifier|protected
name|String
name|name
decl_stmt|;
annotation|@
name|XmlTransient
specifier|private
name|String
name|namespace
decl_stmt|;
comment|/**      *<p>Get the value of the repository property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.      * This is why there is not a<CODE>set</CODE> method for the repository property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *      *<pre>      *    getRepository().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link String}.</p>      *      * @return the list of inner repositories.      */
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getRepository
parameter_list|()
block|{
if|if
condition|(
name|repository
operator|==
literal|null
condition|)
block|{
name|repository
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|repository
return|;
block|}
comment|/**      *<p>Get the value of the resource repository property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.</p>      *      *<p>This is why there is not a<CODE>set</CODE> method for      * the resource repository property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *      *<pre>      *    getResourceRepository().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link String}</p>      *      * @return the list of inner resource repositories.      */
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getResourceRepository
parameter_list|()
block|{
if|if
condition|(
name|resourceRepository
operator|==
literal|null
condition|)
block|{
name|resourceRepository
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|resourceRepository
return|;
block|}
comment|/**      *<p>Get the value of the feature property.</p>      *      *<p>This accessor method returns a reference to the live list,      * not a snapshot. Therefore any modification you make to the      * returned list will be present inside the JAXB object.</p>      *      *<p>This is why there is not a<CODE>set</CODE> method      * for the feature property.</p>      *      *<p>For example, to add a new item, do as follows:</p>      *      *<pre>      *    getFeatures().add(newItem);      *</pre>      *      *<p>Objects of the following type(s) are allowed in the list      * {@link Feature}.</p>      *      * @return the list of inner features.      */
specifier|public
name|List
argument_list|<
name|Feature
argument_list|>
name|getFeature
parameter_list|()
block|{
if|if
condition|(
name|feature
operator|==
literal|null
condition|)
block|{
name|feature
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
return|return
name|this
operator|.
name|feature
return|;
block|}
comment|/**      * Get the value of the name property.      *      * @return possible object is {@link String}.      */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
comment|/**      * Set the value of the name property.      *      * @param value allowed object is {@link String}.      */
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|void
name|postUnmarshall
parameter_list|(
name|String
name|repositoryUri
parameter_list|)
block|{
if|if
condition|(
name|feature
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Feature
name|f
range|:
name|feature
control|)
block|{
name|f
operator|.
name|setRepositoryUrl
argument_list|(
name|repositoryUri
argument_list|)
expr_stmt|;
name|f
operator|.
name|setNamespace
argument_list|(
name|namespace
argument_list|)
expr_stmt|;
name|f
operator|.
name|setResourceRepositories
argument_list|(
name|getResourceRepository
argument_list|()
argument_list|)
expr_stmt|;
name|f
operator|.
name|postUnmarshall
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|setNamespace
parameter_list|(
name|String
name|namespace
parameter_list|)
block|{
name|this
operator|.
name|namespace
operator|=
name|namespace
expr_stmt|;
block|}
specifier|public
name|String
name|getNamespace
parameter_list|()
block|{
return|return
name|namespace
return|;
block|}
block|}
end_class

end_unit


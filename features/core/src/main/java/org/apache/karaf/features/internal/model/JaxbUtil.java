begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Unmarshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|ValidationEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|ValidationEventHandler
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParserFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|stream
operator|.
name|XMLInputFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|transform
operator|.
name|sax
operator|.
name|SAXSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesNamespaces
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|XMLFilterImpl
import|;
end_import

begin_class
specifier|public
class|class
name|JaxbUtil
block|{
specifier|public
specifier|static
specifier|final
name|XMLInputFactory
name|XMLINPUT_FACTORY
init|=
name|XMLInputFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|JAXBContext
name|FEATURES_CONTEXT
decl_stmt|;
static|static
block|{
try|try
block|{
name|FEATURES_CONTEXT
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|Features
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
specifier|static
name|void
name|marshal
parameter_list|(
name|Features
name|features
parameter_list|,
name|OutputStream
name|out
parameter_list|)
throws|throws
name|JAXBException
block|{
name|Marshaller
name|marshaller
init|=
name|FEATURES_CONTEXT
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
name|marshaller
operator|.
name|setProperty
argument_list|(
literal|"jaxb.formatted.output"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|marshal
argument_list|(
name|features
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|marshal
parameter_list|(
name|Features
name|features
parameter_list|,
name|Writer
name|out
parameter_list|)
throws|throws
name|JAXBException
block|{
name|Marshaller
name|marshaller
init|=
name|FEATURES_CONTEXT
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
name|marshaller
operator|.
name|setProperty
argument_list|(
literal|"jaxb.formatted.output"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|marshal
argument_list|(
name|features
argument_list|,
name|out
argument_list|)
expr_stmt|;
block|}
comment|/**      * Read in a Features from the input stream.      *      * @param in       input stream to read      * @param validate whether to validate the input.      * @return a Features read from the input stream      * @throws ParserConfigurationException is the SAX parser can not be configured      * @throws SAXException                 if there is an xml problem      * @throws JAXBException                if the xml cannot be marshalled into a T.      */
specifier|public
specifier|static
name|Features
name|unmarshal
parameter_list|(
name|InputStream
name|in
parameter_list|,
name|boolean
name|validate
parameter_list|)
block|{
name|InputSource
name|inputSource
init|=
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|SAXParserFactory
name|factory
init|=
name|SAXParserFactory
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|factory
operator|.
name|setNamespaceAware
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|factory
operator|.
name|setValidating
argument_list|(
name|validate
argument_list|)
expr_stmt|;
name|SAXParser
name|parser
decl_stmt|;
try|try
block|{
name|parser
operator|=
name|factory
operator|.
name|newSAXParser
argument_list|()
expr_stmt|;
name|Unmarshaller
name|unmarshaller
init|=
name|FEATURES_CONTEXT
operator|.
name|createUnmarshaller
argument_list|()
decl_stmt|;
name|unmarshaller
operator|.
name|setEventHandler
argument_list|(
operator|new
name|ValidationEventHandler
argument_list|()
block|{
specifier|public
name|boolean
name|handleEvent
parameter_list|(
name|ValidationEvent
name|validationEvent
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|validationEvent
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|XMLFilter
name|xmlFilter
init|=
operator|new
name|NoSourceAndNamespaceFilter
argument_list|(
name|parser
operator|.
name|getXMLReader
argument_list|()
argument_list|)
decl_stmt|;
name|xmlFilter
operator|.
name|setContentHandler
argument_list|(
name|unmarshaller
operator|.
name|getUnmarshallerHandler
argument_list|()
argument_list|)
expr_stmt|;
name|SAXSource
name|source
init|=
operator|new
name|SAXSource
argument_list|(
name|xmlFilter
argument_list|,
name|inputSource
argument_list|)
decl_stmt|;
return|return
operator|(
name|Features
operator|)
name|unmarshaller
operator|.
name|unmarshal
argument_list|(
name|source
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
catch|catch
parameter_list|(
name|SAXException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
comment|/**      * Provides an empty inputsource for the entity resolver.      * Converts all elements with empty namespace to the features namespace to make old feature files       * compatible to the new format      */
specifier|public
specifier|static
class|class
name|NoSourceAndNamespaceFilter
extends|extends
name|XMLFilterImpl
block|{
specifier|private
specifier|static
specifier|final
name|InputSource
name|EMPTY_INPUT_SOURCE
init|=
operator|new
name|InputSource
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
operator|new
name|byte
index|[
literal|0
index|]
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
name|NoSourceAndNamespaceFilter
parameter_list|(
name|XMLReader
name|xmlReader
parameter_list|)
block|{
name|super
argument_list|(
name|xmlReader
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|InputSource
name|resolveEntity
parameter_list|(
name|String
name|publicId
parameter_list|,
name|String
name|systemId
parameter_list|)
throws|throws
name|SAXException
throws|,
name|IOException
block|{
return|return
name|EMPTY_INPUT_SOURCE
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|atts
parameter_list|)
throws|throws
name|SAXException
block|{
name|super
operator|.
name|startElement
argument_list|(
name|FeaturesNamespaces
operator|.
name|URI_CURRENT
argument_list|,
name|localName
argument_list|,
name|qName
argument_list|,
name|atts
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|)
throws|throws
name|SAXException
block|{
name|super
operator|.
name|endElement
argument_list|(
name|FeaturesNamespaces
operator|.
name|URI_CURRENT
argument_list|,
name|localName
argument_list|,
name|qName
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


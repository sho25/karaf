begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Callable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|TimeUnit
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|NotCompliantMBeanException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|BootFeaturesInstaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|BundleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|FeatureConfigInstaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|FeatureFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|FeaturesServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|PersistentBundleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|internal
operator|.
name|FeaturesServiceMBeanImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|region
operator|.
name|persist
operator|.
name|RegionsPersistence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|locks
operator|.
name|FileLockUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|SingleServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceRegistration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|url
operator|.
name|URLStreamHandlerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTrackerCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
implements|implements
name|BundleActivator
implements|,
name|SingleServiceTracker
operator|.
name|SingleServiceListener
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|Activator
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|ExecutorService
name|executor
init|=
name|Executors
operator|.
name|newSingleThreadExecutor
argument_list|()
decl_stmt|;
specifier|private
name|BundleContext
name|bundleContext
decl_stmt|;
specifier|private
name|SingleServiceTracker
name|regionsPersistenceTracker
decl_stmt|;
specifier|private
name|SingleServiceTracker
argument_list|<
name|URLStreamHandlerService
argument_list|>
name|mvnUrlHandlerTracker
decl_stmt|;
specifier|private
name|SingleServiceTracker
argument_list|<
name|ConfigurationAdmin
argument_list|>
name|configurationAdminTracker
decl_stmt|;
specifier|private
name|ServiceTracker
argument_list|<
name|FeaturesListener
argument_list|,
name|FeaturesListener
argument_list|>
name|featuresListenerTracker
decl_stmt|;
specifier|private
name|FeaturesServiceImpl
name|featuresService
decl_stmt|;
specifier|private
name|ServiceRegistration
argument_list|<
name|ManagedService
argument_list|>
name|featureFinderRegistration
decl_stmt|;
specifier|private
name|ServiceRegistration
argument_list|<
name|FeaturesService
argument_list|>
name|featuresServiceRegistration
decl_stmt|;
specifier|private
name|ServiceRegistration
name|featuresServiceMBeanRegistration
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|bundleContext
operator|=
name|context
expr_stmt|;
name|regionsPersistenceTracker
operator|=
operator|new
name|SingleServiceTracker
argument_list|(
name|bundleContext
argument_list|,
literal|"org.apache.karaf.region.persist.RegionsPersistence"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|mvnUrlHandlerTracker
operator|=
operator|new
name|SingleServiceTracker
argument_list|<
name|URLStreamHandlerService
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|URLStreamHandlerService
operator|.
name|class
argument_list|,
literal|"(url.handler.protocol=mvn)"
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|configurationAdminTracker
operator|=
operator|new
name|SingleServiceTracker
argument_list|<
name|ConfigurationAdmin
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|ConfigurationAdmin
operator|.
name|class
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|regionsPersistenceTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|mvnUrlHandlerTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|configurationAdminTracker
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|configurationAdminTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|mvnUrlHandlerTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|regionsPersistenceTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|executor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
name|executor
operator|.
name|awaitTermination
argument_list|(
literal|30
argument_list|,
name|TimeUnit
operator|.
name|SECONDS
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doStart
parameter_list|()
block|{
name|ConfigurationAdmin
name|configurationAdmin
init|=
name|configurationAdminTracker
operator|.
name|getService
argument_list|()
decl_stmt|;
name|Object
name|regionsPersistence
init|=
name|regionsPersistenceTracker
operator|.
name|getService
argument_list|()
decl_stmt|;
name|URLStreamHandlerService
name|mvnUrlHandler
init|=
name|mvnUrlHandlerTracker
operator|.
name|getService
argument_list|()
decl_stmt|;
if|if
condition|(
name|configurationAdmin
operator|==
literal|null
operator|||
name|mvnUrlHandler
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Properties
name|configuration
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|File
name|configFile
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.etc"
argument_list|)
argument_list|,
literal|"org.apache.karaf.features.cfg"
argument_list|)
decl_stmt|;
if|if
condition|(
name|configFile
operator|.
name|isFile
argument_list|()
operator|&&
name|configFile
operator|.
name|canRead
argument_list|()
condition|)
block|{
try|try
block|{
name|configuration
operator|.
name|load
argument_list|(
operator|new
name|FileReader
argument_list|(
name|configFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error reading configuration file "
operator|+
name|configFile
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|FeatureFinder
name|featureFinder
init|=
operator|new
name|FeatureFinder
argument_list|()
decl_stmt|;
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVICE_PID
argument_list|,
literal|"org.apache.karaf.features.repos"
argument_list|)
expr_stmt|;
name|featureFinderRegistration
operator|=
name|bundleContext
operator|.
name|registerService
argument_list|(
name|ManagedService
operator|.
name|class
argument_list|,
name|featureFinder
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|BundleManager
name|bundleManager
decl_stmt|;
if|if
condition|(
name|regionsPersistence
operator|!=
literal|null
condition|)
block|{
specifier|final
name|Object
name|rg
init|=
name|regionsPersistence
decl_stmt|;
comment|// Use an inner class to isolate from the region persistence package
name|bundleManager
operator|=
operator|new
name|Callable
argument_list|<
name|BundleManager
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|BundleManager
name|call
parameter_list|()
block|{
return|return
operator|new
name|PersistentBundleManager
argument_list|(
name|bundleContext
argument_list|,
operator|(
name|RegionsPersistence
operator|)
name|rg
argument_list|)
return|;
block|}
block|}
operator|.
name|call
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|bundleManager
operator|=
operator|new
name|BundleManager
argument_list|(
name|bundleContext
argument_list|)
expr_stmt|;
block|}
name|FeatureConfigInstaller
name|configInstaller
init|=
operator|new
name|FeatureConfigInstaller
argument_list|(
name|configurationAdmin
argument_list|)
decl_stmt|;
name|String
name|featuresRepositories
init|=
name|getString
argument_list|(
name|configuration
argument_list|,
literal|"featuresRepositories"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|boolean
name|respectStartLvlDuringFeatureStartup
init|=
name|getBoolean
argument_list|(
name|configuration
argument_list|,
literal|"respectStartLvlDuringFeatureStartup"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|boolean
name|respectStartLvlDuringFeatureUninstall
init|=
name|getBoolean
argument_list|(
name|configuration
argument_list|,
literal|"respectStartLvlDuringFeatureUninstall"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|long
name|resolverTimeout
init|=
name|getLong
argument_list|(
name|configuration
argument_list|,
literal|"resolverTimeout"
argument_list|,
literal|5000
argument_list|)
decl_stmt|;
name|String
name|overrides
init|=
name|getString
argument_list|(
name|configuration
argument_list|,
literal|"overrides"
argument_list|,
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.etc"
argument_list|)
argument_list|,
literal|"overrides.properties"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|featuresService
operator|=
operator|new
name|FeaturesServiceImpl
argument_list|(
name|bundleManager
argument_list|,
name|configInstaller
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setUrls
argument_list|(
name|featuresRepositories
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setRespectStartLvlDuringFeatureStartup
argument_list|(
name|respectStartLvlDuringFeatureStartup
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setRespectStartLvlDuringFeatureUninstall
argument_list|(
name|respectStartLvlDuringFeatureUninstall
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setResolverTimeout
argument_list|(
name|resolverTimeout
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setOverrides
argument_list|(
name|overrides
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setFeatureFinder
argument_list|(
name|featureFinder
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|start
argument_list|()
expr_stmt|;
name|featuresServiceRegistration
operator|=
name|bundleContext
operator|.
name|registerService
argument_list|(
name|FeaturesService
operator|.
name|class
argument_list|,
name|featuresService
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|featuresListenerTracker
operator|=
operator|new
name|ServiceTracker
argument_list|<
name|FeaturesListener
argument_list|,
name|FeaturesListener
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|FeaturesListener
operator|.
name|class
argument_list|,
operator|new
name|ServiceTrackerCustomizer
argument_list|<
name|FeaturesListener
argument_list|,
name|FeaturesListener
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|FeaturesListener
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|FeaturesListener
argument_list|>
name|reference
parameter_list|)
block|{
name|FeaturesListener
name|service
init|=
name|bundleContext
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|featuresService
operator|.
name|registerListener
argument_list|(
name|service
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifiedService
parameter_list|(
name|ServiceReference
argument_list|<
name|FeaturesListener
argument_list|>
name|reference
parameter_list|,
name|FeaturesListener
name|service
parameter_list|)
block|{             }
annotation|@
name|Override
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|FeaturesListener
argument_list|>
name|reference
parameter_list|,
name|FeaturesListener
name|service
parameter_list|)
block|{
name|featuresService
operator|.
name|unregisterListener
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|bundleContext
operator|.
name|ungetService
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|featuresListenerTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|String
name|featuresBoot
init|=
name|getString
argument_list|(
name|configuration
argument_list|,
literal|"featuresBoot"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|boolean
name|featuresBootAsynchronous
init|=
name|getBoolean
argument_list|(
name|configuration
argument_list|,
literal|"featuresBootAsynchronous"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|BootFeaturesInstaller
name|bootFeaturesInstaller
init|=
operator|new
name|BootFeaturesInstaller
argument_list|(
name|bundleContext
argument_list|,
name|featuresService
argument_list|,
name|featuresBoot
argument_list|,
name|featuresBootAsynchronous
argument_list|)
decl_stmt|;
name|bootFeaturesInstaller
operator|.
name|start
argument_list|()
expr_stmt|;
try|try
block|{
name|FeaturesServiceMBeanImpl
name|featuresServiceMBean
init|=
operator|new
name|FeaturesServiceMBeanImpl
argument_list|()
decl_stmt|;
name|featuresServiceMBean
operator|.
name|setBundleContext
argument_list|(
name|bundleContext
argument_list|)
expr_stmt|;
name|featuresServiceMBean
operator|.
name|setFeaturesService
argument_list|(
name|featuresService
argument_list|)
expr_stmt|;
name|props
operator|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
expr_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"jmx.objectname"
argument_list|,
literal|"org.apache.karaf:type=feature,name="
operator|+
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.name"
argument_list|)
argument_list|)
expr_stmt|;
name|featuresServiceMBeanRegistration
operator|=
name|bundleContext
operator|.
name|registerService
argument_list|(
name|getInterfaceNames
argument_list|(
name|featuresServiceMBean
argument_list|)
argument_list|,
name|featuresServiceMBean
argument_list|,
name|props
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NotCompliantMBeanException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error creating FeaturesService mbean"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|doStop
parameter_list|()
block|{
if|if
condition|(
name|featuresListenerTracker
operator|!=
literal|null
condition|)
block|{
name|featuresListenerTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|featuresListenerTracker
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|featureFinderRegistration
operator|!=
literal|null
condition|)
block|{
name|featureFinderRegistration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|featureFinderRegistration
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|featuresServiceRegistration
operator|!=
literal|null
condition|)
block|{
name|featuresServiceRegistration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|featuresServiceRegistration
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|featuresServiceMBeanRegistration
operator|!=
literal|null
condition|)
block|{
name|featuresServiceMBeanRegistration
operator|.
name|unregister
argument_list|()
expr_stmt|;
name|featuresServiceMBeanRegistration
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|featuresService
operator|!=
literal|null
condition|)
block|{
name|featuresService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|featuresService
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceFound
parameter_list|()
block|{
name|executor
operator|.
name|submit
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|doStop
argument_list|()
expr_stmt|;
try|try
block|{
name|doStart
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error starting FeaturesService"
argument_list|,
name|t
argument_list|)
expr_stmt|;
name|doStop
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceLost
parameter_list|()
block|{
name|serviceFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceReplaced
parameter_list|()
block|{
name|serviceFound
argument_list|()
expr_stmt|;
block|}
specifier|private
name|String
index|[]
name|getInterfaceNames
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Class
name|cl
init|=
name|object
operator|.
name|getClass
argument_list|()
init|;
name|cl
operator|!=
name|Object
operator|.
name|class
condition|;
name|cl
operator|=
name|cl
operator|.
name|getSuperclass
argument_list|()
control|)
block|{
name|addSuperInterfaces
argument_list|(
name|names
argument_list|,
name|cl
argument_list|)
expr_stmt|;
block|}
return|return
name|names
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|names
operator|.
name|size
argument_list|()
index|]
argument_list|)
return|;
block|}
specifier|private
name|void
name|addSuperInterfaces
parameter_list|(
name|List
argument_list|<
name|String
argument_list|>
name|names
parameter_list|,
name|Class
name|clazz
parameter_list|)
block|{
for|for
control|(
name|Class
name|cl
range|:
name|clazz
operator|.
name|getInterfaces
argument_list|()
control|)
block|{
name|names
operator|.
name|add
argument_list|(
name|cl
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|addSuperInterfaces
argument_list|(
name|names
argument_list|,
name|cl
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getString
parameter_list|(
name|Properties
name|configuration
parameter_list|,
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|)
block|{
return|return
name|configuration
operator|.
name|getProperty
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|getBoolean
parameter_list|(
name|Properties
name|configuration
parameter_list|,
name|String
name|key
parameter_list|,
name|boolean
name|value
parameter_list|)
block|{
return|return
name|Boolean
operator|.
name|parseBoolean
argument_list|(
name|getString
argument_list|(
name|configuration
argument_list|,
name|key
argument_list|,
name|Boolean
operator|.
name|toString
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|long
name|getLong
parameter_list|(
name|Properties
name|configuration
parameter_list|,
name|String
name|key
parameter_list|,
name|long
name|value
parameter_list|)
block|{
return|return
name|Long
operator|.
name|parseLong
argument_list|(
name|getString
argument_list|(
name|configuration
argument_list|,
name|key
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|value
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit


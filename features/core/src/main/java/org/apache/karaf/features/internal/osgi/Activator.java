begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|NotCompliantMBeanException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|BootFeaturesInstaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|BundleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|FeatureConfigInstaller
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|FeatureFinder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|FeaturesServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|management
operator|.
name|internal
operator|.
name|FeaturesServiceMBeanImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|RegionsPersistence
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|BaseActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|SingleServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|url
operator|.
name|URLStreamHandlerService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTrackerCustomizer
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
extends|extends
name|BaseActivator
block|{
specifier|private
name|ServiceTracker
argument_list|<
name|FeaturesListener
argument_list|,
name|FeaturesListener
argument_list|>
name|featuresListenerTracker
decl_stmt|;
specifier|private
name|FeaturesServiceImpl
name|featuresService
decl_stmt|;
specifier|private
name|SingleServiceTracker
argument_list|<
name|RegionsPersistence
argument_list|>
name|regionsTracker
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|doOpen
parameter_list|()
throws|throws
name|Exception
block|{
name|trackService
argument_list|(
name|URLStreamHandlerService
operator|.
name|class
argument_list|,
literal|"(url.handler.protocol=mvn)"
argument_list|)
expr_stmt|;
name|trackService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
expr_stmt|;
name|Properties
name|configuration
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|File
name|configFile
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.etc"
argument_list|)
argument_list|,
literal|"org.apache.karaf.features.cfg"
argument_list|)
decl_stmt|;
if|if
condition|(
name|configFile
operator|.
name|isFile
argument_list|()
operator|&&
name|configFile
operator|.
name|canRead
argument_list|()
condition|)
block|{
try|try
block|{
name|configuration
operator|.
name|load
argument_list|(
operator|new
name|FileReader
argument_list|(
name|configFile
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Error reading configuration file "
operator|+
name|configFile
operator|.
name|toString
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|updated
argument_list|(
operator|(
name|Dictionary
operator|)
name|configuration
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|NotCompliantMBeanException
block|{
name|ConfigurationAdmin
name|configurationAdmin
init|=
name|getTrackedService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
name|URLStreamHandlerService
name|mvnUrlHandler
init|=
name|getTrackedService
argument_list|(
name|URLStreamHandlerService
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|configurationAdmin
operator|==
literal|null
operator|||
name|mvnUrlHandler
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|FeatureFinder
name|featureFinder
init|=
operator|new
name|FeatureFinder
argument_list|()
decl_stmt|;
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVICE_PID
argument_list|,
literal|"org.apache.karaf.features.repos"
argument_list|)
expr_stmt|;
name|register
argument_list|(
name|ManagedService
operator|.
name|class
argument_list|,
name|featureFinder
argument_list|,
name|props
argument_list|)
expr_stmt|;
specifier|final
name|BundleManager
name|bundleManager
init|=
operator|new
name|BundleManager
argument_list|(
name|bundleContext
argument_list|)
decl_stmt|;
name|regionsTracker
operator|=
operator|new
name|SingleServiceTracker
argument_list|<
name|RegionsPersistence
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|RegionsPersistence
operator|.
name|class
argument_list|,
operator|new
name|SingleServiceTracker
operator|.
name|SingleServiceListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|serviceFound
parameter_list|()
block|{
name|bundleManager
operator|.
name|setRegionsPersistence
argument_list|(
name|regionsTracker
operator|.
name|getService
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceLost
parameter_list|()
block|{
name|serviceFound
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serviceReplaced
parameter_list|()
block|{
name|serviceFound
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|regionsTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|FeatureConfigInstaller
name|configInstaller
init|=
operator|new
name|FeatureConfigInstaller
argument_list|(
name|configurationAdmin
argument_list|)
decl_stmt|;
name|String
name|featuresRepositories
init|=
name|getString
argument_list|(
literal|"featuresRepositories"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|boolean
name|respectStartLvlDuringFeatureStartup
init|=
name|getBoolean
argument_list|(
literal|"respectStartLvlDuringFeatureStartup"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|boolean
name|respectStartLvlDuringFeatureUninstall
init|=
name|getBoolean
argument_list|(
literal|"respectStartLvlDuringFeatureUninstall"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|long
name|resolverTimeout
init|=
name|getLong
argument_list|(
literal|"resolverTimeout"
argument_list|,
literal|5000
argument_list|)
decl_stmt|;
name|String
name|overrides
init|=
name|getString
argument_list|(
literal|"overrides"
argument_list|,
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.etc"
argument_list|)
argument_list|,
literal|"overrides.properties"
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|featuresService
operator|=
operator|new
name|FeaturesServiceImpl
argument_list|(
name|bundleManager
argument_list|,
name|configInstaller
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setUrls
argument_list|(
name|featuresRepositories
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setRespectStartLvlDuringFeatureStartup
argument_list|(
name|respectStartLvlDuringFeatureStartup
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setRespectStartLvlDuringFeatureUninstall
argument_list|(
name|respectStartLvlDuringFeatureUninstall
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setResolverTimeout
argument_list|(
name|resolverTimeout
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setOverrides
argument_list|(
name|overrides
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|setFeatureFinder
argument_list|(
name|featureFinder
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|start
argument_list|()
expr_stmt|;
name|register
argument_list|(
name|FeaturesService
operator|.
name|class
argument_list|,
name|featuresService
argument_list|)
expr_stmt|;
name|featuresListenerTracker
operator|=
operator|new
name|ServiceTracker
argument_list|<
name|FeaturesListener
argument_list|,
name|FeaturesListener
argument_list|>
argument_list|(
name|bundleContext
argument_list|,
name|FeaturesListener
operator|.
name|class
argument_list|,
operator|new
name|ServiceTrackerCustomizer
argument_list|<
name|FeaturesListener
argument_list|,
name|FeaturesListener
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|FeaturesListener
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|FeaturesListener
argument_list|>
name|reference
parameter_list|)
block|{
name|FeaturesListener
name|service
init|=
name|bundleContext
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|featuresService
operator|.
name|registerListener
argument_list|(
name|service
argument_list|)
expr_stmt|;
return|return
name|service
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifiedService
parameter_list|(
name|ServiceReference
argument_list|<
name|FeaturesListener
argument_list|>
name|reference
parameter_list|,
name|FeaturesListener
name|service
parameter_list|)
block|{             }
annotation|@
name|Override
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|FeaturesListener
argument_list|>
name|reference
parameter_list|,
name|FeaturesListener
name|service
parameter_list|)
block|{
name|featuresService
operator|.
name|unregisterListener
argument_list|(
name|service
argument_list|)
expr_stmt|;
name|bundleContext
operator|.
name|ungetService
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|featuresListenerTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|String
name|featuresBoot
init|=
name|getString
argument_list|(
literal|"featuresBoot"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|boolean
name|featuresBootAsynchronous
init|=
name|getBoolean
argument_list|(
literal|"featuresBootAsynchronous"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|BootFeaturesInstaller
name|bootFeaturesInstaller
init|=
operator|new
name|BootFeaturesInstaller
argument_list|(
name|bundleContext
argument_list|,
name|featuresService
argument_list|,
name|featuresBoot
argument_list|,
name|featuresBootAsynchronous
argument_list|)
decl_stmt|;
name|bootFeaturesInstaller
operator|.
name|start
argument_list|()
expr_stmt|;
name|FeaturesServiceMBeanImpl
name|featuresServiceMBean
init|=
operator|new
name|FeaturesServiceMBeanImpl
argument_list|()
decl_stmt|;
name|featuresServiceMBean
operator|.
name|setBundleContext
argument_list|(
name|bundleContext
argument_list|)
expr_stmt|;
name|featuresServiceMBean
operator|.
name|setFeaturesService
argument_list|(
name|featuresService
argument_list|)
expr_stmt|;
name|registerMBean
argument_list|(
name|featuresServiceMBean
argument_list|,
literal|"type=feature"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doStop
parameter_list|()
block|{
if|if
condition|(
name|regionsTracker
operator|!=
literal|null
condition|)
block|{
name|regionsTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|regionsTracker
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|featuresListenerTracker
operator|!=
literal|null
condition|)
block|{
name|featuresListenerTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|featuresListenerTracker
operator|=
literal|null
expr_stmt|;
block|}
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
if|if
condition|(
name|featuresService
operator|!=
literal|null
condition|)
block|{
name|featuresService
operator|.
name|stop
argument_list|()
expr_stmt|;
name|featuresService
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


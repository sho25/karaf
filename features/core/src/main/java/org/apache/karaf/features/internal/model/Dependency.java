begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAccessorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlAttribute
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|annotation
operator|.
name|XmlValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *   * Dependency of feature.  *               *   *<p>Java class for dependency complex type.  *   *<p>The following schema fragment specifies the expected content contained within this class.  *   *<pre>  *&lt;complexType name="dependency">  *&lt;simpleContent>  *&lt;extension base="&lt;http://karaf.apache.org/xmlns/features/v1.0.0>featureName">  *&lt;attribute name="version" type="{http://www.w3.org/2001/XMLSchema}string" default="0.0.0" />  *&lt;/extension>  *&lt;/simpleContent>  *&lt;/complexType>  *</pre>  *   *   */
end_comment

begin_class
annotation|@
name|XmlAccessorType
argument_list|(
name|XmlAccessType
operator|.
name|FIELD
argument_list|)
annotation|@
name|XmlType
argument_list|(
name|name
operator|=
literal|"dependency"
argument_list|,
name|propOrder
operator|=
block|{
literal|"value"
block|}
argument_list|)
specifier|public
class|class
name|Dependency
implements|implements
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Feature
block|{
annotation|@
name|XmlValue
specifier|protected
name|String
name|value
decl_stmt|;
annotation|@
name|XmlAttribute
specifier|protected
name|String
name|version
decl_stmt|;
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/**      *       * Feature name should be non empty string.      *                   *       * @return      *     possible object is      *     {@link String }      *           */
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|String
name|getDetails
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/**      * Sets the value of the value property.      *       * @param value      *     allowed object is      *     {@link String }      *           */
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
block|}
comment|/**      * Gets the value of the version property.      *       * @return      *     possible object is      *     {@link String }      *           */
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
if|if
condition|(
name|version
operator|==
literal|null
condition|)
block|{
return|return
literal|"0.0.0"
return|;
block|}
else|else
block|{
return|return
name|version
return|;
block|}
block|}
comment|//Following are unimplemented methods of Feature interface.
specifier|public
name|String
name|getResolver
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Feature
argument_list|>
name|getDependencies
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|BundleInfo
argument_list|>
name|getBundles
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|>
name|getConfigurations
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|List
argument_list|<
name|ConfigFileInfo
argument_list|>
name|getConfigurationFiles
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/**      * Sets the value of the version property.      *       * @param value      *     allowed object is      *     {@link String }      *           */
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|value
expr_stmt|;
block|}
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|ret
init|=
name|getName
argument_list|()
operator|+
name|Feature
operator|.
name|SPLIT_FOR_NAME_AND_VERSION
operator|+
name|getVersion
argument_list|()
decl_stmt|;
return|return
name|ret
return|;
block|}
block|}
end_class

end_unit


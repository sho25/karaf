begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutorService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|Executors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ScheduledThreadPoolExecutor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|utils
operator|.
name|version
operator|.
name|VersionCleaner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|DeploymentEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|DeploymentListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Feature
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeatureEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeatureState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|Repository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|RepositoryEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|download
operator|.
name|DownloadManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|download
operator|.
name|DownloadManagers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|region
operator|.
name|DigraphHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|service
operator|.
name|BundleInstallSupport
operator|.
name|FrameworkInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|ThreadUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|json
operator|.
name|JsonReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|json
operator|.
name|JsonWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|collections
operator|.
name|CopyOnWriteArrayIdentityList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|equinox
operator|.
name|region
operator|.
name|RegionDigraph
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|url
operator|.
name|mvn
operator|.
name|MavenResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|url
operator|.
name|mvn
operator|.
name|MavenResolvers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|InvalidSyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|resource
operator|.
name|Wire
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|resolver
operator|.
name|Resolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|emptyMap
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
operator|.
name|toSet
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|service
operator|.
name|StateStorage
operator|.
name|toStringStringSetMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|util
operator|.
name|MapUtils
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
specifier|public
class|class
name|FeaturesServiceImpl
implements|implements
name|FeaturesService
implements|,
name|Deployer
operator|.
name|DeployCallback
block|{
specifier|private
specifier|static
specifier|final
name|String
name|RESOLVE_FILE
init|=
literal|"resolve"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FeaturesServiceImpl
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|VERSION_SEPARATOR
init|=
literal|"/"
decl_stmt|;
comment|/**      * Used to load and save the {@link State} of this service.      */
specifier|private
specifier|final
name|StateStorage
name|storage
decl_stmt|;
specifier|private
specifier|final
name|FeatureRepoFinder
name|featureFinder
decl_stmt|;
specifier|private
specifier|final
name|ConfigurationAdmin
name|configurationAdmin
decl_stmt|;
specifier|private
specifier|final
name|Resolver
name|resolver
decl_stmt|;
specifier|private
specifier|final
name|BundleInstallSupport
name|installSupport
decl_stmt|;
specifier|private
specifier|final
name|FeaturesServiceConfig
name|cfg
decl_stmt|;
specifier|private
specifier|final
name|RepositoryCache
name|repositories
decl_stmt|;
specifier|private
specifier|final
name|ThreadLocal
argument_list|<
name|String
argument_list|>
name|outputFile
init|=
operator|new
name|ThreadLocal
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * Optional global repository      */
specifier|private
specifier|final
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|repository
operator|.
name|Repository
name|globalRepository
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|FeaturesListener
argument_list|>
name|listeners
init|=
operator|new
name|CopyOnWriteArrayIdentityList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|DeploymentListener
argument_list|>
name|deploymentListeners
init|=
operator|new
name|CopyOnWriteArrayIdentityList
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
name|DeploymentEvent
name|lastDeploymentEvent
init|=
name|DeploymentEvent
operator|.
name|DEPLOYMENT_FINISHED
decl_stmt|;
comment|// Synchronized on lock
specifier|private
specifier|final
name|Object
name|lock
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|State
name|state
init|=
operator|new
name|State
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|ExecutorService
name|executor
decl_stmt|;
comment|//the outer map's key is feature name, the inner map's key is feature version
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|featureCache
decl_stmt|;
specifier|public
name|FeaturesServiceImpl
parameter_list|(
name|StateStorage
name|storage
parameter_list|,
name|FeatureRepoFinder
name|featureFinder
parameter_list|,
name|ConfigurationAdmin
name|configurationAdmin
parameter_list|,
name|Resolver
name|resolver
parameter_list|,
name|BundleInstallSupport
name|installSupport
parameter_list|,
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|repository
operator|.
name|Repository
name|globalRepository
parameter_list|,
name|FeaturesServiceConfig
name|cfg
parameter_list|)
block|{
name|this
operator|.
name|storage
operator|=
name|storage
expr_stmt|;
name|this
operator|.
name|featureFinder
operator|=
name|featureFinder
expr_stmt|;
name|this
operator|.
name|configurationAdmin
operator|=
name|configurationAdmin
expr_stmt|;
name|this
operator|.
name|resolver
operator|=
name|resolver
expr_stmt|;
name|this
operator|.
name|installSupport
operator|=
name|installSupport
expr_stmt|;
name|this
operator|.
name|globalRepository
operator|=
name|globalRepository
expr_stmt|;
name|Blacklist
name|blacklist
init|=
operator|new
name|Blacklist
argument_list|(
name|cfg
operator|.
name|blacklisted
argument_list|)
decl_stmt|;
name|this
operator|.
name|repositories
operator|=
operator|new
name|RepositoryCache
argument_list|(
name|blacklist
argument_list|)
expr_stmt|;
name|this
operator|.
name|cfg
operator|=
name|cfg
expr_stmt|;
name|this
operator|.
name|executor
operator|=
name|Executors
operator|.
name|newSingleThreadExecutor
argument_list|(
name|ThreadUtils
operator|.
name|namedThreadFactory
argument_list|(
literal|"features"
argument_list|)
argument_list|)
expr_stmt|;
name|loadState
argument_list|()
expr_stmt|;
name|checkResolve
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|this
operator|.
name|executor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|,
literal|"rawtypes"
block|}
argument_list|)
specifier|private
name|void
name|checkResolve
parameter_list|()
block|{
name|File
name|resolveFile
init|=
name|installSupport
operator|.
name|getDataFile
argument_list|(
name|RESOLVE_FILE
argument_list|)
decl_stmt|;
if|if
condition|(
name|resolveFile
operator|==
literal|null
operator|||
operator|!
name|resolveFile
operator|.
name|exists
argument_list|()
condition|)
block|{
return|return;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|request
decl_stmt|;
try|try
init|(
name|FileInputStream
name|fis
init|=
operator|new
name|FileInputStream
argument_list|(
name|resolveFile
argument_list|)
init|)
block|{
name|request
operator|=
operator|(
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
operator|)
name|JsonReader
operator|.
name|read
argument_list|(
name|fis
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error reading resolution request"
argument_list|,
name|e
argument_list|)
expr_stmt|;
return|return;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requestedFeatures
init|=
name|toStringStringSetMap
argument_list|(
operator|(
name|Map
operator|)
name|request
operator|.
name|get
argument_list|(
literal|"features"
argument_list|)
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|opts
init|=
operator|(
name|Collection
argument_list|<
name|String
argument_list|>
operator|)
name|request
operator|.
name|get
argument_list|(
literal|"options"
argument_list|)
decl_stmt|;
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|Option
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|opt
range|:
name|opts
control|)
block|{
name|options
operator|.
name|add
argument_list|(
name|Option
operator|.
name|valueOf
argument_list|(
name|opt
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// Resolve
try|try
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|FeatureState
argument_list|>
argument_list|>
name|stateChanges
init|=
name|Collections
operator|.
name|emptyMap
argument_list|()
decl_stmt|;
name|doProvisionInThread
argument_list|(
name|requestedFeatures
argument_list|,
name|stateChanges
argument_list|,
name|copyState
argument_list|()
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error updating state"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|writeResolve
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requestedFeatures
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|IOException
block|{
name|File
name|resolveFile
init|=
name|installSupport
operator|.
name|getDataFile
argument_list|(
name|RESOLVE_FILE
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|request
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|opts
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Option
name|opt
range|:
name|options
control|)
block|{
name|opts
operator|.
name|add
argument_list|(
name|opt
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|request
operator|.
name|put
argument_list|(
literal|"features"
argument_list|,
name|requestedFeatures
argument_list|)
expr_stmt|;
name|request
operator|.
name|put
argument_list|(
literal|"options"
argument_list|,
name|opts
argument_list|)
expr_stmt|;
try|try
init|(
name|FileOutputStream
name|fos
init|=
operator|new
name|FileOutputStream
argument_list|(
name|resolveFile
argument_list|)
init|)
block|{
name|JsonWriter
operator|.
name|write
argument_list|(
name|fos
argument_list|,
name|request
argument_list|)
expr_stmt|;
block|}
block|}
comment|//
comment|// State support
comment|//
specifier|protected
name|void
name|loadState
parameter_list|()
block|{
try|try
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|storage
operator|.
name|load
argument_list|(
name|state
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error loading FeaturesService state"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|saveState
parameter_list|()
block|{
try|try
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
comment|// Make sure we don't store bundle checksums if
comment|// it has been disabled through configadmin
comment|// so that we don't keep out-of-date checksums.
if|if
condition|(
operator|!
name|UPDATE_SNAPSHOTS_CRC
operator|.
name|equalsIgnoreCase
argument_list|(
name|cfg
operator|.
name|updateSnapshots
argument_list|)
condition|)
block|{
name|state
operator|.
name|bundleChecksums
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
name|storage
operator|.
name|save
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|installSupport
operator|.
name|saveDigraph
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Error saving FeaturesService state"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|boolean
name|isBootDone
parameter_list|()
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|state
operator|.
name|bootDone
operator|.
name|get
argument_list|()
return|;
block|}
block|}
name|void
name|bootDone
parameter_list|()
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|state
operator|.
name|bootDone
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|saveState
argument_list|()
expr_stmt|;
block|}
block|}
comment|//
comment|// Listeners support
comment|//
annotation|@
name|Override
specifier|public
name|void
name|registerListener
parameter_list|(
name|FeaturesListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
try|try
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|repositoriesList
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|installedFeatures
init|=
operator|new
name|TreeMap
argument_list|<>
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|repositoriesList
operator|.
name|addAll
argument_list|(
name|state
operator|.
name|repositories
argument_list|)
expr_stmt|;
name|installedFeatures
operator|.
name|putAll
argument_list|(
name|copy
argument_list|(
name|state
operator|.
name|installedFeatures
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|uri
range|:
name|repositoriesList
control|)
block|{
name|Repository
name|repository
init|=
name|repositories
operator|.
name|create
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|uri
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|listener
operator|.
name|repositoryEvent
argument_list|(
operator|new
name|RepositoryEvent
argument_list|(
name|repository
argument_list|,
name|RepositoryEvent
operator|.
name|EventType
operator|.
name|RepositoryAdded
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|entry
range|:
name|installedFeatures
operator|.
name|entrySet
argument_list|()
control|)
block|{
for|for
control|(
name|String
name|id
range|:
name|entry
operator|.
name|getValue
argument_list|()
control|)
block|{
name|Feature
name|feature
init|=
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|internal
operator|.
name|model
operator|.
name|Feature
operator|.
name|valueOf
argument_list|(
name|id
argument_list|)
decl_stmt|;
name|listener
operator|.
name|featureEvent
argument_list|(
operator|new
name|FeatureEvent
argument_list|(
name|FeatureEvent
operator|.
name|EventType
operator|.
name|FeatureInstalled
argument_list|,
name|feature
argument_list|,
name|entry
operator|.
name|getKey
argument_list|()
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error notifying listener about the current state"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|unregisterListener
parameter_list|(
name|FeaturesListener
name|listener
parameter_list|)
block|{
name|listeners
operator|.
name|remove
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|registerListener
parameter_list|(
name|DeploymentListener
name|listener
parameter_list|)
block|{
name|deploymentListeners
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|listener
operator|.
name|deploymentEvent
argument_list|(
name|lastDeploymentEvent
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|unregisterListener
parameter_list|(
name|DeploymentListener
name|listener
parameter_list|)
block|{
name|deploymentListeners
operator|.
name|remove
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
comment|/*      * Should never be called while holding a lock as we're calling outside our bundle.      */
annotation|@
name|Override
specifier|public
name|void
name|callListeners
parameter_list|(
name|FeatureEvent
name|event
parameter_list|)
block|{
for|for
control|(
name|FeaturesListener
name|listener
range|:
name|listeners
control|)
block|{
name|listener
operator|.
name|featureEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
comment|/*      * Should never be called while holding a lock as we're calling outside our bundle.      */
annotation|@
name|Override
specifier|public
name|void
name|callListeners
parameter_list|(
name|DeploymentEvent
name|event
parameter_list|)
block|{
name|lastDeploymentEvent
operator|=
name|event
expr_stmt|;
for|for
control|(
name|DeploymentListener
name|listener
range|:
name|deploymentListeners
control|)
block|{
try|try
block|{
name|listener
operator|.
name|deploymentEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"DeploymentListener {} failed to process event {}"
argument_list|,
name|listener
argument_list|,
name|event
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/*      * Should never be called while holding a lock as we're calling outside our bundle.      */
specifier|protected
name|void
name|callListeners
parameter_list|(
name|RepositoryEvent
name|event
parameter_list|)
block|{
for|for
control|(
name|FeaturesListener
name|listener
range|:
name|listeners
control|)
block|{
name|listener
operator|.
name|repositoryEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
block|}
block|}
comment|//
comment|// Feature Finder support
comment|//
annotation|@
name|Override
specifier|public
name|URI
name|getRepositoryUriFor
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
block|{
return|return
name|featureFinder
operator|.
name|getUriFor
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getRepositoryNames
parameter_list|()
block|{
return|return
name|featureFinder
operator|.
name|getNames
argument_list|()
return|;
block|}
comment|//
comment|// Repositories support
comment|//
annotation|@
name|Override
specifier|public
name|void
name|validateRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|addRepository
argument_list|(
name|uri
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addRepository
parameter_list|(
name|URI
name|uri
parameter_list|,
name|boolean
name|install
parameter_list|)
throws|throws
name|Exception
block|{
name|Repository
name|repository
init|=
name|repositories
operator|.
name|create
argument_list|(
name|uri
argument_list|,
literal|true
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|repositories
operator|.
name|addRepository
argument_list|(
name|repository
argument_list|)
expr_stmt|;
name|featureCache
operator|=
literal|null
expr_stmt|;
comment|// Add repo
if|if
condition|(
operator|!
name|state
operator|.
name|repositories
operator|.
name|add
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return;
block|}
name|saveState
argument_list|()
expr_stmt|;
block|}
name|callListeners
argument_list|(
operator|new
name|RepositoryEvent
argument_list|(
name|repository
argument_list|,
name|RepositoryEvent
operator|.
name|EventType
operator|.
name|RepositoryAdded
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
comment|// install the features in the repo
if|if
condition|(
name|install
condition|)
block|{
name|HashSet
argument_list|<
name|String
argument_list|>
name|features
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Feature
name|feature
range|:
name|repository
operator|.
name|getFeatures
argument_list|()
control|)
block|{
name|features
operator|.
name|add
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|installFeatures
argument_list|(
name|features
argument_list|,
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|removeRepository
argument_list|(
name|uri
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeRepository
parameter_list|(
name|URI
name|uri
parameter_list|,
name|boolean
name|uninstall
parameter_list|)
throws|throws
name|Exception
block|{
comment|// This will also ensure the cache is loaded
name|Repository
name|repo
init|=
name|getRepository
argument_list|(
name|uri
argument_list|)
decl_stmt|;
if|if
condition|(
name|repo
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Set
argument_list|<
name|Repository
argument_list|>
name|repos
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|features
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|repos
operator|=
name|repositories
operator|.
name|getRepositoryClosure
argument_list|(
name|repo
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Repository
argument_list|>
name|required
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|repositories
operator|.
name|listMatchingRepositories
argument_list|(
name|state
operator|.
name|repositories
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|required
operator|.
name|remove
argument_list|(
name|repo
argument_list|)
expr_stmt|;
for|for
control|(
name|Repository
name|rep
range|:
name|required
control|)
block|{
name|repos
operator|.
name|removeAll
argument_list|(
name|repositories
operator|.
name|getRepositoryClosure
argument_list|(
name|rep
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|features
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|Repository
name|tranRepo
range|:
name|repos
control|)
block|{
name|features
operator|.
name|addAll
argument_list|(
name|getRequiredFeatureIds
argument_list|(
name|tranRepo
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|features
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
if|if
condition|(
name|uninstall
condition|)
block|{
name|uninstallFeatures
argument_list|(
name|features
argument_list|,
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|Option
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"The following features are required from the repository: "
operator|+
name|String
operator|.
name|join
argument_list|(
literal|", "
argument_list|,
name|features
argument_list|)
argument_list|)
throw|;
block|}
block|}
synchronized|synchronized
init|(
name|lock
init|)
block|{
comment|// Remove repo
if|if
condition|(
operator|!
name|state
operator|.
name|repositories
operator|.
name|remove
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
return|return;
block|}
comment|// Clean cache
name|featureCache
operator|=
literal|null
expr_stmt|;
name|repositories
operator|.
name|removeRepository
argument_list|(
name|uri
argument_list|)
expr_stmt|;
name|saveState
argument_list|()
expr_stmt|;
block|}
name|callListeners
argument_list|(
operator|new
name|RepositoryEvent
argument_list|(
name|repo
argument_list|,
name|RepositoryEvent
operator|.
name|EventType
operator|.
name|RepositoryRemoved
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|getRequiredFeatureIds
parameter_list|(
name|Repository
name|repo
parameter_list|)
throws|throws
name|Exception
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|Stream
operator|.
name|of
argument_list|(
name|repo
operator|.
name|getFeatures
argument_list|()
argument_list|)
operator|.
name|filter
argument_list|(
name|this
operator|::
name|isRequired
argument_list|)
operator|.
name|map
argument_list|(
name|Feature
operator|::
name|getId
argument_list|)
operator|.
name|collect
argument_list|(
name|toSet
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|restoreRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|refreshRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|refreshRepositories
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|uri
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|refreshRepositories
parameter_list|(
name|Set
argument_list|<
name|URI
argument_list|>
name|uris
parameter_list|)
throws|throws
name|Exception
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
for|for
control|(
name|URI
name|uri
range|:
name|uris
control|)
block|{
name|repositories
operator|.
name|removeRepository
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
name|featureCache
operator|=
literal|null
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Repository
index|[]
name|listRepositories
parameter_list|()
throws|throws
name|Exception
block|{
name|ensureCacheLoaded
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|repositories
operator|.
name|listRepositories
argument_list|()
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Repository
index|[]
name|listRequiredRepositories
parameter_list|()
throws|throws
name|Exception
block|{
name|ensureCacheLoaded
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|repositories
operator|.
name|listMatchingRepositories
argument_list|(
name|state
operator|.
name|repositories
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Repository
name|getRepository
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|ensureCacheLoaded
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|repositories
operator|.
name|getRepositoryByName
argument_list|(
name|name
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Repository
name|getRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|ensureCacheLoaded
argument_list|()
expr_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|repositories
operator|.
name|getRepository
argument_list|(
name|uri
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|String
name|getRepositoryName
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
name|Repository
name|repo
init|=
name|getRepository
argument_list|(
name|uri
argument_list|)
decl_stmt|;
return|return
operator|(
name|repo
operator|!=
literal|null
operator|)
condition|?
name|repo
operator|.
name|getName
argument_list|()
else|:
literal|null
return|;
block|}
comment|//
comment|// Features support
comment|//
annotation|@
name|Override
specifier|public
name|Feature
name|getFeature
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|Feature
index|[]
name|features
init|=
name|getFeatures
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|features
operator|.
name|length
operator|<
literal|1
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
return|return
name|features
index|[
literal|0
index|]
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Feature
name|getFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|Exception
block|{
name|Feature
index|[]
name|features
init|=
name|getFeatures
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
decl_stmt|;
if|if
condition|(
name|features
operator|.
name|length
operator|<
literal|1
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
return|return
name|features
index|[
literal|0
index|]
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Feature
index|[]
name|getFeatures
parameter_list|(
name|String
name|nameOrId
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|getFeatures
argument_list|(
name|FeatureReq
operator|.
name|parseNameAndRange
argument_list|(
name|nameOrId
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Feature
index|[]
name|getFeatures
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|getFeatures
argument_list|(
operator|new
name|FeatureReq
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|Feature
index|[]
name|getFeatures
parameter_list|(
name|FeatureReq
name|featureReq
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|allFeatures
init|=
name|getFeatureCache
argument_list|()
decl_stmt|;
return|return
name|featureReq
operator|.
name|getMatchingFeatures
argument_list|(
name|allFeatures
argument_list|)
operator|.
name|toArray
argument_list|(
name|Feature
index|[]
operator|::
operator|new
argument_list|)
return|;
block|}
specifier|private
name|void
name|ensureCacheLoaded
parameter_list|()
throws|throws
name|Exception
block|{
name|getFeatureCache
argument_list|()
expr_stmt|;
block|}
comment|/**      * Should not be called while holding a lock.      * @return map from feature name to map from feature version to Feature      */
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|getFeatureCache
parameter_list|()
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|uris
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
if|if
condition|(
name|featureCache
operator|!=
literal|null
condition|)
block|{
return|return
name|featureCache
return|;
block|}
name|uris
operator|=
operator|new
name|TreeSet
argument_list|<>
argument_list|(
name|state
operator|.
name|repositories
argument_list|)
expr_stmt|;
block|}
comment|//the outer map's key is feature name, the inner map's key is feature version
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// Two phase load:
comment|// * first load dependent repositories
name|Set
argument_list|<
name|String
argument_list|>
name|loaded
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|toLoad
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|uris
argument_list|)
decl_stmt|;
while|while
condition|(
operator|!
name|toLoad
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
name|uri
init|=
name|toLoad
operator|.
name|remove
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Repository
name|repo
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|repo
operator|=
name|repositories
operator|.
name|getRepository
argument_list|(
name|uri
argument_list|)
expr_stmt|;
block|}
try|try
block|{
if|if
condition|(
name|repo
operator|==
literal|null
condition|)
block|{
name|repo
operator|=
name|repositories
operator|.
name|create
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|uri
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|repositories
operator|.
name|addRepository
argument_list|(
name|repo
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|loaded
operator|.
name|add
argument_list|(
name|uri
argument_list|)
condition|)
block|{
for|for
control|(
name|URI
name|u
range|:
name|repo
operator|.
name|getRepositories
argument_list|()
control|)
block|{
name|toLoad
operator|.
name|add
argument_list|(
name|u
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Can't load features repository {}"
argument_list|,
name|uri
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
name|List
argument_list|<
name|Repository
argument_list|>
name|repos
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|repos
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
name|repositories
operator|.
name|listRepositories
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// * then load all features
for|for
control|(
name|Repository
name|repo
range|:
name|repos
control|)
block|{
for|for
control|(
name|Feature
name|f
range|:
name|repo
operator|.
name|getFeatures
argument_list|()
control|)
block|{
if|if
condition|(
name|map
operator|.
name|get
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
operator|==
literal|null
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
name|versionMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|versionMap
operator|.
name|put
argument_list|(
name|f
operator|.
name|getVersion
argument_list|()
argument_list|,
name|f
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|,
name|versionMap
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|map
operator|.
name|get
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|put
argument_list|(
name|f
operator|.
name|getVersion
argument_list|()
argument_list|,
name|f
argument_list|)
expr_stmt|;
block|}
block|}
block|}
synchronized|synchronized
init|(
name|lock
init|)
block|{
if|if
condition|(
name|uris
operator|.
name|equals
argument_list|(
name|state
operator|.
name|repositories
argument_list|)
condition|)
block|{
name|featureCache
operator|=
name|map
expr_stmt|;
block|}
block|}
return|return
name|map
return|;
block|}
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
name|getFeaturesById
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|getFeatureCache
argument_list|()
operator|.
name|values
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|flatMap
argument_list|(
name|m
lambda|->
name|m
operator|.
name|values
argument_list|()
operator|.
name|stream
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toMap
argument_list|(
name|Feature
operator|::
name|getId
argument_list|,
name|Function
operator|.
name|identity
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
comment|//
comment|// Installed features
comment|//
annotation|@
name|Override
specifier|public
name|Feature
index|[]
name|listFeatures
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|allFeatures
init|=
name|getFeatureCache
argument_list|()
decl_stmt|;
return|return
name|flattenFeatures
argument_list|(
name|allFeatures
argument_list|,
name|f
lambda|->
literal|true
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Feature
index|[]
name|listInstalledFeatures
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|allFeatures
init|=
name|getFeatureCache
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|flattenFeatures
argument_list|(
name|allFeatures
argument_list|,
name|this
operator|::
name|isInstalled
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Feature
index|[]
name|listRequiredFeatures
parameter_list|()
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|allFeatures
init|=
name|getFeatureCache
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|flattenFeatures
argument_list|(
name|allFeatures
argument_list|,
name|this
operator|::
name|isRequired
argument_list|)
return|;
block|}
block|}
specifier|private
name|Feature
index|[]
name|flattenFeatures
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|features
parameter_list|,
name|Predicate
argument_list|<
name|Feature
argument_list|>
name|pred
parameter_list|)
block|{
return|return
name|features
operator|.
name|values
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|Map
operator|::
name|values
argument_list|)
operator|.
name|flatMap
argument_list|(
name|Collection
operator|::
name|stream
argument_list|)
operator|.
name|filter
argument_list|(
name|pred
argument_list|)
operator|.
name|toArray
argument_list|(
name|Feature
index|[]
operator|::
operator|new
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInstalled
parameter_list|(
name|Feature
name|f
parameter_list|)
block|{
name|String
name|id
init|=
name|normalize
argument_list|(
name|f
operator|.
name|getId
argument_list|()
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|installed
init|=
name|state
operator|.
name|installedFeatures
operator|.
name|get
argument_list|(
name|ROOT_REGION
argument_list|)
decl_stmt|;
return|return
name|installed
operator|!=
literal|null
operator|&&
name|installed
operator|.
name|contains
argument_list|(
name|id
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|FeatureState
name|getState
parameter_list|(
name|String
name|featureId
parameter_list|)
block|{
name|String
name|id
init|=
name|normalize
argument_list|(
name|featureId
argument_list|)
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|installed
init|=
name|state
operator|.
name|installedFeatures
operator|.
name|get
argument_list|(
name|ROOT_REGION
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|installed
operator|.
name|contains
argument_list|(
name|id
argument_list|)
condition|)
block|{
return|return
name|FeatureState
operator|.
name|Uninstalled
return|;
block|}
else|else
block|{
name|String
name|stateSt
init|=
name|state
operator|.
name|stateFeatures
operator|.
name|get
argument_list|(
name|ROOT_REGION
argument_list|)
operator|.
name|get
argument_list|(
name|id
argument_list|)
decl_stmt|;
return|return
name|FeatureState
operator|.
name|valueOf
argument_list|(
name|stateSt
argument_list|)
return|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isRequired
parameter_list|(
name|Feature
name|f
parameter_list|)
block|{
name|String
name|id
init|=
operator|new
name|FeatureReq
argument_list|(
name|f
argument_list|)
operator|.
name|toRequirement
argument_list|()
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|features
init|=
name|state
operator|.
name|requirements
operator|.
name|get
argument_list|(
name|ROOT_REGION
argument_list|)
decl_stmt|;
return|return
name|features
operator|!=
literal|null
operator|&&
name|features
operator|.
name|contains
argument_list|(
name|id
argument_list|)
return|;
block|}
block|}
comment|//
comment|// Installation and uninstallation of features
comment|//
annotation|@
name|Override
specifier|public
name|void
name|installFeature
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|installFeature
argument_list|(
name|name
argument_list|,
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|Option
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|Exception
block|{
name|installFeature
argument_list|(
name|getId
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
argument_list|,
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|Option
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|installFeatures
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|name
argument_list|)
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|installFeature
argument_list|(
name|getId
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installFeature
parameter_list|(
name|Feature
name|feature
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|installFeature
argument_list|(
name|feature
operator|.
name|getId
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installFeatures
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|features
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|installFeatures
argument_list|(
name|features
argument_list|,
name|ROOT_REGION
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstallFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
throws|throws
name|Exception
block|{
name|uninstallFeature
argument_list|(
name|getId
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstallFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|uninstallFeature
argument_list|(
name|getId
argument_list|(
name|name
argument_list|,
name|version
argument_list|)
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstallFeature
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|uninstallFeature
argument_list|(
name|name
argument_list|,
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|Option
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstallFeature
parameter_list|(
name|String
name|name
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|uninstallFeatures
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|name
argument_list|)
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstallFeatures
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|features
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|uninstallFeatures
argument_list|(
name|features
argument_list|,
name|ROOT_REGION
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getId
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|version
parameter_list|)
block|{
return|return
name|version
operator|!=
literal|null
condition|?
name|name
operator|+
name|VERSION_SEPARATOR
operator|+
name|version
else|:
name|name
return|;
block|}
comment|//
comment|//
comment|//
comment|//   RESOLUTION
comment|//
comment|//
comment|//
annotation|@
name|Override
specifier|public
name|void
name|setResolutionOutputFile
parameter_list|(
name|String
name|outputFile
parameter_list|)
block|{
name|this
operator|.
name|outputFile
operator|.
name|set
argument_list|(
name|outputFile
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installFeatures
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|featuresIn
parameter_list|,
name|String
name|region
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|toInstall
init|=
name|map
argument_list|(
name|featuresIn
argument_list|,
name|FeatureReq
operator|::
name|parseNameAndRange
argument_list|)
decl_stmt|;
name|State
name|state
init|=
name|copyState
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requires
init|=
name|copy
argument_list|(
name|state
operator|.
name|requirements
argument_list|)
decl_stmt|;
if|if
condition|(
name|region
operator|==
literal|null
operator|||
name|region
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|region
operator|=
name|ROOT_REGION
expr_stmt|;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|requirements
init|=
name|requires
operator|.
name|computeIfAbsent
argument_list|(
name|region
argument_list|,
name|k
lambda|->
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|existingFeatures
init|=
name|map
argument_list|(
name|requirements
argument_list|,
name|FeatureReq
operator|::
name|parseRequirement
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|toAdd
init|=
name|computeFeaturesToAdd
argument_list|(
name|options
argument_list|,
name|toInstall
argument_list|)
decl_stmt|;
name|toAdd
operator|.
name|forEach
argument_list|(
name|f
lambda|->
name|requirements
operator|.
name|add
argument_list|(
name|f
operator|.
name|toRequirement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|print
argument_list|(
literal|"Adding features: "
operator|+
name|join
argument_list|(
name|toAdd
argument_list|)
argument_list|,
name|options
operator|.
name|contains
argument_list|(
name|Option
operator|.
name|Verbose
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|options
operator|.
name|contains
argument_list|(
name|Option
operator|.
name|Upgrade
argument_list|)
condition|)
block|{
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|toRemove
init|=
name|computeFeaturesToRemoveOnUpdate
argument_list|(
name|toAdd
argument_list|,
name|existingFeatures
argument_list|)
decl_stmt|;
name|toRemove
operator|.
name|forEach
argument_list|(
name|f
lambda|->
name|requirements
operator|.
name|remove
argument_list|(
name|f
operator|.
name|toRequirement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|toRemove
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|print
argument_list|(
literal|"Removing features: "
operator|+
name|join
argument_list|(
name|toRemove
argument_list|)
argument_list|,
name|options
operator|.
name|contains
argument_list|(
name|Option
operator|.
name|Verbose
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|doProvisionInThread
argument_list|(
name|requires
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|state
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|computeFeaturesToAdd
parameter_list|(
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|,
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|toInstall
parameter_list|)
throws|throws
name|Exception
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
argument_list|>
name|allFeatures
init|=
name|getFeatureCache
argument_list|()
decl_stmt|;
name|Feature
index|[]
name|installedFeatures
init|=
name|listInstalledFeatures
argument_list|()
decl_stmt|;
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|toAdd
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|FeatureReq
name|featureReq
range|:
name|toInstall
control|)
block|{
name|Collection
argument_list|<
name|Feature
argument_list|>
name|matching
init|=
name|featureReq
operator|.
name|getMatchingFeatures
argument_list|(
name|allFeatures
argument_list|)
operator|.
name|collect
argument_list|(
name|toSet
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Feature
name|f
range|:
name|matching
control|)
block|{
name|toAdd
operator|.
name|add
argument_list|(
operator|new
name|FeatureReq
argument_list|(
name|f
argument_list|)
argument_list|)
expr_stmt|;
name|Arrays
operator|.
name|stream
argument_list|(
name|installedFeatures
argument_list|)
operator|.
name|filter
argument_list|(
name|fi
lambda|->
name|isSameFeature
argument_list|(
name|f
argument_list|,
name|fi
argument_list|)
argument_list|)
operator|.
name|forEach
argument_list|(
name|this
operator|::
name|logInstalledOrUpdated
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|matching
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|!
name|options
operator|.
name|contains
argument_list|(
name|Option
operator|.
name|NoFailOnFeatureNotFound
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"No matching features for "
operator|+
name|featureReq
argument_list|)
throw|;
block|}
block|}
return|return
name|toAdd
return|;
block|}
specifier|private
name|void
name|logInstalledOrUpdated
parameter_list|(
name|Feature
name|f
parameter_list|)
block|{
name|String
name|msg
init|=
name|f
operator|.
name|getVersion
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|"SNAPSHOT"
argument_list|)
condition|?
literal|"has been upgraded"
else|:
literal|"is already installed"
decl_stmt|;
name|LOGGER
operator|.
name|info
argument_list|(
literal|"The specified feature: '{}' version '{}' {}"
argument_list|,
name|f
operator|.
name|getName
argument_list|()
argument_list|,
name|f
operator|.
name|getVersion
argument_list|()
argument_list|,
name|msg
argument_list|)
expr_stmt|;
block|}
specifier|private
name|boolean
name|isSameFeature
parameter_list|(
name|Feature
name|a
parameter_list|,
name|Feature
name|b
parameter_list|)
block|{
return|return
name|b
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|b
operator|.
name|getVersion
argument_list|()
operator|.
name|equals
argument_list|(
name|a
operator|.
name|getVersion
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|computeFeaturesToRemoveOnUpdate
parameter_list|(
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|featuresToAdd
parameter_list|,
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|existingFeatures
parameter_list|)
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|namedToAdd
init|=
name|map
argument_list|(
name|featuresToAdd
argument_list|,
name|FeatureReq
operator|::
name|getName
argument_list|)
decl_stmt|;
return|return
name|filter
argument_list|(
name|existingFeatures
argument_list|,
name|f
lambda|->
name|namedToAdd
operator|.
name|contains
argument_list|(
name|f
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
operator|!
name|featuresToAdd
operator|.
name|contains
argument_list|(
name|f
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstallFeatures
parameter_list|(
name|Set
argument_list|<
name|String
argument_list|>
name|featuresIn
parameter_list|,
name|String
name|region
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|featureReqs
init|=
name|map
argument_list|(
name|featuresIn
argument_list|,
name|FeatureReq
operator|::
name|parseNameAndRange
argument_list|)
decl_stmt|;
name|State
name|state
init|=
name|copyState
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|required
init|=
name|copy
argument_list|(
name|state
operator|.
name|requirements
argument_list|)
decl_stmt|;
if|if
condition|(
name|region
operator|==
literal|null
operator|||
name|region
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|region
operator|=
name|ROOT_REGION
expr_stmt|;
block|}
name|Set
argument_list|<
name|String
argument_list|>
name|requirements
init|=
name|required
operator|.
name|computeIfAbsent
argument_list|(
name|region
argument_list|,
name|k
lambda|->
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|existingFeatures
init|=
name|map
argument_list|(
name|requirements
argument_list|,
name|FeatureReq
operator|::
name|parseRequirement
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|FeatureReq
argument_list|>
name|featuresToRemove
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|FeatureReq
name|featureReq
range|:
name|featureReqs
control|)
block|{
name|Collection
argument_list|<
name|FeatureReq
argument_list|>
name|toRemove
init|=
name|featureReq
operator|.
name|getMatchingRequirements
argument_list|(
name|existingFeatures
argument_list|)
decl_stmt|;
if|if
condition|(
name|toRemove
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Feature named '"
operator|+
name|featureReq
operator|+
literal|"' is not installed"
argument_list|)
throw|;
block|}
name|featuresToRemove
operator|.
name|addAll
argument_list|(
name|toRemove
argument_list|)
expr_stmt|;
block|}
name|print
argument_list|(
literal|"Removing features: "
operator|+
name|join
argument_list|(
name|featuresToRemove
argument_list|)
argument_list|,
name|options
operator|.
name|contains
argument_list|(
name|Option
operator|.
name|Verbose
argument_list|)
argument_list|)
expr_stmt|;
name|featuresToRemove
operator|.
name|forEach
argument_list|(
name|f
lambda|->
name|requirements
operator|.
name|remove
argument_list|(
name|f
operator|.
name|toRequirement
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|requirements
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|required
operator|.
name|remove
argument_list|(
name|region
argument_list|)
expr_stmt|;
block|}
name|doProvisionInThread
argument_list|(
name|required
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|state
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateFeaturesState
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|FeatureState
argument_list|>
argument_list|>
name|stateChanges
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|State
name|state
init|=
name|copyState
argument_list|()
decl_stmt|;
name|doProvisionInThread
argument_list|(
name|copy
argument_list|(
name|state
operator|.
name|requirements
argument_list|)
argument_list|,
name|stateChanges
argument_list|,
name|state
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addRequirements
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requirements
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|State
name|state
init|=
name|copyState
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|required
init|=
name|copy
argument_list|(
name|state
operator|.
name|requirements
argument_list|)
decl_stmt|;
name|add
argument_list|(
name|required
argument_list|,
name|requirements
argument_list|)
expr_stmt|;
name|doProvisionInThread
argument_list|(
name|required
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|state
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeRequirements
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requirements
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|State
name|state
init|=
name|copyState
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|required
init|=
name|copy
argument_list|(
name|state
operator|.
name|requirements
argument_list|)
decl_stmt|;
name|remove
argument_list|(
name|required
argument_list|,
name|requirements
argument_list|)
expr_stmt|;
name|doProvisionInThread
argument_list|(
name|required
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|state
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateReposAndRequirements
parameter_list|(
name|Set
argument_list|<
name|URI
argument_list|>
name|repos
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requirements
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
name|State
name|stateCopy
decl_stmt|;
synchronized|synchronized
init|(
name|lock
init|)
block|{
comment|// Remove repo
name|Set
argument_list|<
name|String
argument_list|>
name|reps
init|=
name|map
argument_list|(
name|repos
argument_list|,
name|URI
operator|::
name|toString
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|toRemove
init|=
name|diff
argument_list|(
name|state
operator|.
name|repositories
argument_list|,
name|reps
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|toAdd
init|=
name|diff
argument_list|(
name|reps
argument_list|,
name|state
operator|.
name|repositories
argument_list|)
decl_stmt|;
name|state
operator|.
name|repositories
operator|.
name|removeAll
argument_list|(
name|toRemove
argument_list|)
expr_stmt|;
name|state
operator|.
name|repositories
operator|.
name|addAll
argument_list|(
name|toAdd
argument_list|)
expr_stmt|;
name|featureCache
operator|=
literal|null
expr_stmt|;
for|for
control|(
name|String
name|uri
range|:
name|toRemove
control|)
block|{
name|repositories
operator|.
name|removeRepository
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|uri
argument_list|)
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|uri
range|:
name|toAdd
control|)
block|{
name|repositories
operator|.
name|addRepository
argument_list|(
name|createRepository
argument_list|(
name|URI
operator|.
name|create
argument_list|(
name|uri
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|saveState
argument_list|()
expr_stmt|;
name|stateCopy
operator|=
name|state
operator|.
name|copy
argument_list|()
expr_stmt|;
block|}
name|doProvisionInThread
argument_list|(
name|requirements
argument_list|,
name|emptyMap
argument_list|()
argument_list|,
name|stateCopy
argument_list|,
name|getFeaturesById
argument_list|()
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Repository
name|createRepository
parameter_list|(
name|URI
name|uri
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|repositories
operator|.
name|create
argument_list|(
name|uri
argument_list|,
literal|true
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|listRequirements
parameter_list|()
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|copy
argument_list|(
name|this
operator|.
name|state
operator|.
name|requirements
argument_list|)
return|;
block|}
block|}
specifier|private
name|State
name|copyState
parameter_list|()
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
return|return
name|this
operator|.
name|state
operator|.
name|copy
argument_list|()
return|;
block|}
block|}
specifier|private
name|String
name|normalize
parameter_list|(
name|String
name|feature
parameter_list|)
block|{
if|if
condition|(
operator|!
name|feature
operator|.
name|contains
argument_list|(
name|VERSION_SEPARATOR
argument_list|)
condition|)
block|{
name|feature
operator|+=
literal|"/0.0.0"
expr_stmt|;
block|}
name|int
name|idx
init|=
name|feature
operator|.
name|indexOf
argument_list|(
name|VERSION_SEPARATOR
argument_list|)
decl_stmt|;
name|String
name|name
init|=
name|feature
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|idx
argument_list|)
decl_stmt|;
name|String
name|version
init|=
name|feature
operator|.
name|substring
argument_list|(
name|idx
operator|+
literal|1
argument_list|)
decl_stmt|;
return|return
name|name
operator|+
name|VERSION_SEPARATOR
operator|+
name|VersionCleaner
operator|.
name|clean
argument_list|(
name|version
argument_list|)
return|;
block|}
comment|/**      * Actual deployment needs to be done in a separate thread.      * The reason is that if the console is refreshed, the current thread which is running      * the command may be interrupted while waiting for the refresh to be done, leading      * to bundles not being started after the refresh.      *      * @param requirements the provided requirements to match.      * @param stateChanges the current features state.      * @param state the current provisioning state.      * @param options the provisioning options.      * @throws Exception in case of provisioning failure.      */
specifier|private
name|void
name|doProvisionInThread
parameter_list|(
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requirements
parameter_list|,
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|FeatureState
argument_list|>
argument_list|>
name|stateChanges
parameter_list|,
specifier|final
name|State
name|state
parameter_list|,
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
name|featureById
parameter_list|,
specifier|final
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|)
throws|throws
name|Exception
block|{
try|try
block|{
specifier|final
name|String
name|outputFile
init|=
name|this
operator|.
name|outputFile
operator|.
name|get
argument_list|()
decl_stmt|;
name|this
operator|.
name|outputFile
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|executor
operator|.
name|submit
argument_list|(
parameter_list|()
lambda|->
block|{
name|doProvision
argument_list|(
name|requirements
argument_list|,
name|stateChanges
argument_list|,
name|state
argument_list|,
name|featureById
argument_list|,
name|options
argument_list|,
name|outputFile
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExecutionException
name|e
parameter_list|)
block|{
name|Throwable
name|t
init|=
name|e
operator|.
name|getCause
argument_list|()
decl_stmt|;
if|if
condition|(
name|t
operator|instanceof
name|RuntimeException
condition|)
block|{
throw|throw
operator|(
name|RuntimeException
operator|)
name|t
throw|;
block|}
elseif|else
if|if
condition|(
name|t
operator|instanceof
name|Error
condition|)
block|{
throw|throw
operator|(
name|Error
operator|)
name|t
throw|;
block|}
elseif|else
if|if
condition|(
name|t
operator|instanceof
name|Exception
condition|)
block|{
throw|throw
operator|(
name|Exception
operator|)
name|t
throw|;
block|}
else|else
block|{
throw|throw
name|e
throw|;
block|}
block|}
block|}
specifier|private
name|Deployer
operator|.
name|DeploymentState
name|getDeploymentState
parameter_list|(
name|State
name|state
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
name|featuresById
parameter_list|)
throws|throws
name|Exception
block|{
name|Deployer
operator|.
name|DeploymentState
name|dstate
init|=
operator|new
name|Deployer
operator|.
name|DeploymentState
argument_list|()
decl_stmt|;
name|dstate
operator|.
name|state
operator|=
name|state
expr_stmt|;
name|FrameworkInfo
name|info
init|=
name|installSupport
operator|.
name|getInfo
argument_list|()
decl_stmt|;
name|dstate
operator|.
name|serviceBundle
operator|=
name|info
operator|.
name|ourBundle
expr_stmt|;
name|dstate
operator|.
name|initialBundleStartLevel
operator|=
name|info
operator|.
name|initialBundleStartLevel
expr_stmt|;
name|dstate
operator|.
name|currentStartLevel
operator|=
name|info
operator|.
name|currentStartLevel
expr_stmt|;
name|dstate
operator|.
name|bundles
operator|=
name|info
operator|.
name|bundles
expr_stmt|;
comment|// Features
name|dstate
operator|.
name|features
operator|=
name|featuresById
expr_stmt|;
name|RegionDigraph
name|regionDigraph
init|=
name|installSupport
operator|.
name|getDiGraphCopy
argument_list|()
decl_stmt|;
name|dstate
operator|.
name|bundlesPerRegion
operator|=
name|DigraphHelper
operator|.
name|getBundlesPerRegion
argument_list|(
name|regionDigraph
argument_list|)
expr_stmt|;
name|dstate
operator|.
name|filtersPerRegion
operator|=
name|DigraphHelper
operator|.
name|getPolicies
argument_list|(
name|regionDigraph
argument_list|)
expr_stmt|;
return|return
name|dstate
return|;
block|}
specifier|private
name|Deployer
operator|.
name|DeploymentRequest
name|getDeploymentRequest
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requirements
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|FeatureState
argument_list|>
argument_list|>
name|stateChanges
parameter_list|,
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|,
name|String
name|outputFile
parameter_list|)
block|{
name|Deployer
operator|.
name|DeploymentRequest
name|request
init|=
operator|new
name|Deployer
operator|.
name|DeploymentRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|bundleUpdateRange
operator|=
name|cfg
operator|.
name|bundleUpdateRange
expr_stmt|;
name|request
operator|.
name|featureResolutionRange
operator|=
name|cfg
operator|.
name|featureResolutionRange
expr_stmt|;
name|request
operator|.
name|serviceRequirements
operator|=
name|cfg
operator|.
name|serviceRequirements
expr_stmt|;
name|request
operator|.
name|updateSnaphots
operator|=
name|cfg
operator|.
name|updateSnapshots
expr_stmt|;
name|request
operator|.
name|globalRepository
operator|=
name|globalRepository
expr_stmt|;
name|request
operator|.
name|overrides
operator|=
name|Overrides
operator|.
name|loadOverrides
argument_list|(
name|cfg
operator|.
name|overrides
argument_list|)
expr_stmt|;
name|request
operator|.
name|requirements
operator|=
name|requirements
expr_stmt|;
name|request
operator|.
name|stateChanges
operator|=
name|stateChanges
expr_stmt|;
name|request
operator|.
name|options
operator|=
name|options
expr_stmt|;
name|request
operator|.
name|outputFile
operator|=
name|outputFile
expr_stmt|;
return|return
name|request
return|;
block|}
specifier|private
name|void
name|doProvision
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|requirements
parameter_list|,
comment|// all requirements
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|FeatureState
argument_list|>
argument_list|>
name|stateChanges
parameter_list|,
comment|// features state changes
name|State
name|state
parameter_list|,
comment|// current state
name|Map
argument_list|<
name|String
argument_list|,
name|Feature
argument_list|>
name|featuresById
parameter_list|,
comment|// features by id
name|EnumSet
argument_list|<
name|Option
argument_list|>
name|options
parameter_list|,
comment|// installation options
name|String
name|outputFile
comment|// file to store the resolution or null
parameter_list|)
throws|throws
name|Exception
block|{
name|Dictionary
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
name|getMavenConfig
argument_list|()
decl_stmt|;
name|MavenResolver
name|resolver
init|=
name|MavenResolvers
operator|.
name|createMavenResolver
argument_list|(
name|props
argument_list|,
literal|"org.ops4j.pax.url.mvn"
argument_list|)
decl_stmt|;
name|ScheduledThreadPoolExecutor
name|executor
init|=
operator|new
name|ScheduledThreadPoolExecutor
argument_list|(
name|cfg
operator|.
name|downloadThreads
argument_list|)
decl_stmt|;
name|executor
operator|.
name|setMaximumPoolSize
argument_list|(
name|cfg
operator|.
name|downloadThreads
argument_list|)
expr_stmt|;
name|DownloadManager
name|manager
init|=
name|DownloadManagers
operator|.
name|createDownloadManager
argument_list|(
name|resolver
argument_list|,
name|executor
argument_list|,
name|cfg
operator|.
name|scheduleDelay
argument_list|,
name|cfg
operator|.
name|scheduleMaxRun
argument_list|)
decl_stmt|;
try|try
block|{
name|Set
argument_list|<
name|String
argument_list|>
name|prereqs
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
while|while
condition|(
literal|true
condition|)
block|{
try|try
block|{
name|Deployer
operator|.
name|DeploymentState
name|dstate
init|=
name|getDeploymentState
argument_list|(
name|state
argument_list|,
name|featuresById
argument_list|)
decl_stmt|;
name|Deployer
operator|.
name|DeploymentRequest
name|request
init|=
name|getDeploymentRequest
argument_list|(
name|requirements
argument_list|,
name|stateChanges
argument_list|,
name|options
argument_list|,
name|outputFile
argument_list|)
decl_stmt|;
operator|new
name|Deployer
argument_list|(
name|manager
argument_list|,
name|this
operator|.
name|resolver
argument_list|,
name|this
argument_list|)
operator|.
name|deploy
argument_list|(
name|dstate
argument_list|,
name|request
argument_list|)
expr_stmt|;
break|break;
block|}
catch|catch
parameter_list|(
name|Deployer
operator|.
name|PartialDeploymentException
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
name|prereqs
operator|.
name|containsAll
argument_list|(
name|e
operator|.
name|getMissing
argument_list|()
argument_list|)
condition|)
block|{
name|prereqs
operator|.
name|addAll
argument_list|(
name|e
operator|.
name|getMissing
argument_list|()
argument_list|)
expr_stmt|;
name|state
operator|=
name|copyState
argument_list|()
expr_stmt|;
block|}
else|else
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Deployment aborted due to loop in missing prerequisites: "
operator|+
name|e
operator|.
name|getMissing
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
block|}
finally|finally
block|{
name|executor
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|Dictionary
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getMavenConfig
parameter_list|()
throws|throws
name|IOException
block|{
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
operator|new
name|Hashtable
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|configurationAdmin
operator|!=
literal|null
condition|)
block|{
name|Configuration
name|config
init|=
name|configurationAdmin
operator|.
name|getConfiguration
argument_list|(
literal|"org.ops4j.pax.url.mvn"
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|config
operator|!=
literal|null
condition|)
block|{
name|Dictionary
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|cfg
init|=
name|config
operator|.
name|getProperties
argument_list|()
decl_stmt|;
if|if
condition|(
name|cfg
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Enumeration
argument_list|<
name|String
argument_list|>
name|e
init|=
name|cfg
operator|.
name|keys
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|Object
name|val
init|=
name|cfg
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|key
operator|!=
literal|null
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|val
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
return|return
name|props
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|print
parameter_list|(
name|String
name|message
parameter_list|,
name|boolean
name|verbose
parameter_list|)
block|{
name|LOGGER
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
if|if
condition|(
name|verbose
condition|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|saveState
parameter_list|(
name|State
name|state
parameter_list|)
block|{
synchronized|synchronized
init|(
name|lock
init|)
block|{
name|state
operator|.
name|repositories
operator|.
name|clear
argument_list|()
expr_stmt|;
name|state
operator|.
name|repositories
operator|.
name|addAll
argument_list|(
name|this
operator|.
name|state
operator|.
name|repositories
argument_list|)
expr_stmt|;
name|state
operator|.
name|bootDone
operator|.
name|set
argument_list|(
name|this
operator|.
name|state
operator|.
name|bootDone
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|state
operator|.
name|replace
argument_list|(
name|state
argument_list|)
expr_stmt|;
name|saveState
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|persistResolveRequest
parameter_list|(
name|Deployer
operator|.
name|DeploymentRequest
name|request
parameter_list|)
throws|throws
name|IOException
block|{
name|writeResolve
argument_list|(
name|request
operator|.
name|requirements
argument_list|,
name|request
operator|.
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|refreshPackages
parameter_list|(
name|Collection
argument_list|<
name|Bundle
argument_list|>
name|bundles
parameter_list|)
throws|throws
name|InterruptedException
block|{
name|installSupport
operator|.
name|refreshPackages
argument_list|(
name|bundles
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Bundle
name|installBundle
parameter_list|(
name|String
name|region
parameter_list|,
name|String
name|uri
parameter_list|,
name|InputStream
name|is
parameter_list|)
throws|throws
name|BundleException
block|{
return|return
name|installSupport
operator|.
name|installBundle
argument_list|(
name|region
argument_list|,
name|uri
argument_list|,
name|is
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateBundle
parameter_list|(
name|Bundle
name|bundle
parameter_list|,
name|String
name|uri
parameter_list|,
name|InputStream
name|is
parameter_list|)
throws|throws
name|BundleException
block|{
name|installSupport
operator|.
name|updateBundle
argument_list|(
name|bundle
argument_list|,
name|uri
argument_list|,
name|is
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|uninstall
parameter_list|(
name|Bundle
name|bundle
parameter_list|)
throws|throws
name|BundleException
block|{
name|installSupport
operator|.
name|uninstall
argument_list|(
name|bundle
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|startBundle
parameter_list|(
name|Bundle
name|bundle
parameter_list|)
throws|throws
name|BundleException
block|{
name|installSupport
operator|.
name|startBundle
argument_list|(
name|bundle
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stopBundle
parameter_list|(
name|Bundle
name|bundle
parameter_list|,
name|int
name|options
parameter_list|)
throws|throws
name|BundleException
block|{
name|installSupport
operator|.
name|stopBundle
argument_list|(
name|bundle
argument_list|,
name|options
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setBundleStartLevel
parameter_list|(
name|Bundle
name|bundle
parameter_list|,
name|int
name|startLevel
parameter_list|)
block|{
name|installSupport
operator|.
name|setBundleStartLevel
argument_list|(
name|bundle
argument_list|,
name|startLevel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|resolveBundles
parameter_list|(
name|Set
argument_list|<
name|Bundle
argument_list|>
name|bundles
parameter_list|,
name|Map
argument_list|<
name|Resource
argument_list|,
name|List
argument_list|<
name|Wire
argument_list|>
argument_list|>
name|wiring
parameter_list|,
name|Map
argument_list|<
name|Resource
argument_list|,
name|Bundle
argument_list|>
name|resToBnd
parameter_list|)
block|{
name|installSupport
operator|.
name|resolveBundles
argument_list|(
name|bundles
argument_list|,
name|wiring
argument_list|,
name|resToBnd
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|replaceDigraph
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|>
argument_list|>
name|policies
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Long
argument_list|>
argument_list|>
name|bundles
parameter_list|)
throws|throws
name|BundleException
throws|,
name|InvalidSyntaxException
block|{
name|installSupport
operator|.
name|replaceDigraph
argument_list|(
name|policies
argument_list|,
name|bundles
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installConfigs
parameter_list|(
name|Feature
name|feature
parameter_list|)
throws|throws
name|IOException
throws|,
name|InvalidSyntaxException
block|{
name|installSupport
operator|.
name|installConfigs
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installLibraries
parameter_list|(
name|Feature
name|feature
parameter_list|)
throws|throws
name|IOException
block|{
name|installSupport
operator|.
name|installLibraries
argument_list|(
name|feature
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|join
parameter_list|(
name|Collection
argument_list|<
name|FeatureReq
argument_list|>
name|reqs
parameter_list|)
block|{
return|return
name|reqs
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|FeatureReq
operator|::
name|toString
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|joining
argument_list|(
literal|","
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit


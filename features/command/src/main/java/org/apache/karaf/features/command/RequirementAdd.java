begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|command
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|features
operator|.
name|FeaturesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"feature"
argument_list|,
name|name
operator|=
literal|"requirement-add"
argument_list|,
name|description
operator|=
literal|"Add provisioning requirements."
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|RequirementAdd
implements|implements
name|Action
block|{
annotation|@
name|Reference
specifier|private
name|FeaturesService
name|featuresService
decl_stmt|;
annotation|@
name|Argument
argument_list|(
name|required
operator|=
literal|true
argument_list|,
name|multiValued
operator|=
literal|true
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|requirements
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-r"
argument_list|,
name|aliases
operator|=
literal|"--no-auto-refresh"
argument_list|,
name|description
operator|=
literal|"Do not automatically refresh bundles"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|noRefresh
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-s"
argument_list|,
name|aliases
operator|=
literal|"--no-auto-start"
argument_list|,
name|description
operator|=
literal|"Do not start the bundles"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|noStart
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-m"
argument_list|,
name|aliases
operator|=
literal|"--no-auto-manage"
argument_list|,
name|description
operator|=
literal|"Do not automatically manage bundles"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
name|boolean
name|noManage
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-v"
argument_list|,
name|aliases
operator|=
literal|"--verbose"
argument_list|,
name|description
operator|=
literal|"Explain what is being done"
argument_list|)
name|boolean
name|verbose
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-t"
argument_list|,
name|aliases
operator|=
literal|"--simulate"
argument_list|,
name|description
operator|=
literal|"Perform a simulation only"
argument_list|)
name|boolean
name|simulate
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-g"
argument_list|,
name|aliases
operator|=
literal|"--region"
argument_list|,
name|description
operator|=
literal|"Region to install to"
argument_list|)
name|String
name|region
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Object
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|EnumSet
argument_list|<
name|FeaturesService
operator|.
name|Option
argument_list|>
name|options
init|=
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|simulate
condition|)
block|{
name|options
operator|.
name|add
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|Simulate
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|noStart
condition|)
block|{
name|options
operator|.
name|add
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|NoAutoStartBundles
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|noRefresh
condition|)
block|{
name|options
operator|.
name|add
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|NoAutoRefreshBundles
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|noManage
condition|)
block|{
name|options
operator|.
name|add
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|NoAutoManageBundles
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|verbose
condition|)
block|{
name|options
operator|.
name|add
argument_list|(
name|FeaturesService
operator|.
name|Option
operator|.
name|Verbose
argument_list|)
expr_stmt|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|reqs
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|reqs
operator|.
name|put
argument_list|(
name|region
operator|==
literal|null
condition|?
name|FeaturesService
operator|.
name|ROOT_REGION
else|:
name|region
argument_list|,
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|requirements
argument_list|)
argument_list|)
expr_stmt|;
name|featuresService
operator|.
name|addRequirements
argument_list|(
name|reqs
argument_list|,
name|options
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


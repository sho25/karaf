begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|EasyMock
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|classextension
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|MBeanRegistererTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testRegistration
parameter_list|()
throws|throws
name|Exception
block|{
name|IMocksControl
name|control
init|=
name|createNiceControl
argument_list|()
decl_stmt|;
name|MBeanServer
name|mbeanServer
init|=
name|control
operator|.
name|createMock
argument_list|(
name|MBeanServer
operator|.
name|class
argument_list|)
decl_stmt|;
name|String
name|rawName
init|=
literal|"org.apache.karaf:type=instance,name=${karaf.name}"
decl_stmt|;
name|AdminServiceMBean
name|mbean
init|=
name|control
operator|.
name|createMock
argument_list|(
name|AdminServiceMBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectName
name|name
init|=
operator|new
name|ObjectName
argument_list|(
literal|"org.apache.karaf:type=instance,name=foobar"
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|mbeanServer
operator|.
name|registerMBean
argument_list|(
name|isA
argument_list|(
name|AdminServiceMBean
operator|.
name|class
argument_list|)
argument_list|,
name|eq
argument_list|(
name|name
argument_list|)
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|mbeanServer
operator|.
name|unregisterMBean
argument_list|(
name|eq
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|expectLastCall
argument_list|()
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|String
name|old
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.name"
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.name"
argument_list|,
literal|"foobar"
argument_list|)
expr_stmt|;
name|MBeanRegistrer
name|registerer
init|=
operator|new
name|MBeanRegistrer
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Object
argument_list|,
name|String
argument_list|>
name|mbeans
init|=
operator|new
name|HashMap
argument_list|<
name|Object
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|mbeans
operator|.
name|put
argument_list|(
name|mbean
argument_list|,
name|rawName
argument_list|)
expr_stmt|;
name|registerer
operator|.
name|setMbeans
argument_list|(
name|mbeans
argument_list|)
expr_stmt|;
name|registerer
operator|.
name|registerMBeanServer
argument_list|(
name|mbeanServer
argument_list|)
expr_stmt|;
name|registerer
operator|.
name|unregisterMBeanServer
argument_list|(
name|mbeanServer
argument_list|)
expr_stmt|;
name|restoreProperties
argument_list|(
name|old
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|restoreProperties
parameter_list|(
name|String
name|old
parameter_list|)
block|{
if|if
condition|(
name|old
operator|!=
literal|null
condition|)
block|{
name|System
operator|.
name|setProperty
argument_list|(
literal|"karaf.name"
argument_list|,
name|old
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
literal|"karaf.name"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
specifier|static
interface|interface
name|AdminServiceMBean
block|{
name|int
name|createInstance
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
function_decl|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|ObjectName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|config
operator|.
name|KeystoreManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
operator|.
name|ConnectorServerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
operator|.
name|JaasAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
operator|.
name|KarafMBeanServerGuard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
operator|.
name|MBeanServerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|management
operator|.
name|RmiRegistryFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|BaseActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|Managed
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|ProvideService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|RequireService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|Services
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedService
import|;
end_import

begin_class
annotation|@
name|Services
argument_list|(
name|requires
operator|=
block|{
annotation|@
name|RequireService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
block|,
annotation|@
name|RequireService
argument_list|(
name|KeystoreManager
operator|.
name|class
argument_list|)
block|}
argument_list|,
name|provides
operator|=
annotation|@
name|ProvideService
argument_list|(
name|MBeanServer
operator|.
name|class
argument_list|)
argument_list|)
annotation|@
name|Managed
argument_list|(
literal|"org.apache.karaf.management"
argument_list|)
specifier|public
class|class
name|Activator
extends|extends
name|BaseActivator
implements|implements
name|ManagedService
block|{
specifier|private
name|ConnectorServerFactory
name|connectorServerFactory
decl_stmt|;
specifier|private
name|RmiRegistryFactory
name|rmiRegistryFactory
decl_stmt|;
specifier|private
name|MBeanServerFactory
name|mbeanServerFactory
decl_stmt|;
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
comment|// Verify dependencies
name|ConfigurationAdmin
name|configurationAdmin
init|=
name|getTrackedService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
name|KeystoreManager
name|keystoreManager
init|=
name|getTrackedService
argument_list|(
name|KeystoreManager
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|configurationAdmin
operator|==
literal|null
operator|||
name|keystoreManager
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|String
name|rmiRegistryHost
init|=
name|getString
argument_list|(
literal|"rmiRegistryHost"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|int
name|rmiRegistryPort
init|=
name|getInt
argument_list|(
literal|"rmiRegistryPort"
argument_list|,
literal|1099
argument_list|)
decl_stmt|;
name|String
name|rmiServerHost
init|=
name|getString
argument_list|(
literal|"rmiServerHost"
argument_list|,
literal|"0.0.0.0"
argument_list|)
decl_stmt|;
name|int
name|rmiServerPort
init|=
name|getInt
argument_list|(
literal|"rmiServerPort"
argument_list|,
literal|44444
argument_list|)
decl_stmt|;
name|String
name|jmxRealm
init|=
name|getString
argument_list|(
literal|"jmxRealm"
argument_list|,
literal|"karaf"
argument_list|)
decl_stmt|;
name|String
name|serviceUrl
init|=
name|getString
argument_list|(
literal|"serviceUrl"
argument_list|,
literal|"service:jmx:rmi://"
operator|+
name|rmiServerHost
operator|+
literal|":"
operator|+
name|rmiServerPort
operator|+
literal|"/jndi/rmi://"
operator|+
name|rmiRegistryHost
operator|+
literal|":"
operator|+
name|rmiRegistryPort
operator|+
literal|"/karaf-"
operator|+
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.name"
argument_list|)
argument_list|)
decl_stmt|;
name|boolean
name|daemon
init|=
name|getBoolean
argument_list|(
literal|"daemon"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|boolean
name|threaded
init|=
name|getBoolean
argument_list|(
literal|"threaded"
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|ObjectName
name|objectName
init|=
operator|new
name|ObjectName
argument_list|(
name|getString
argument_list|(
literal|"objectName"
argument_list|,
literal|"connector:name=rmi"
argument_list|)
argument_list|)
decl_stmt|;
name|long
name|keyStoreAvailabilityTimeout
init|=
name|getLong
argument_list|(
literal|"keyStoreAvailabilityTimeout"
argument_list|,
literal|5000
argument_list|)
decl_stmt|;
name|String
name|authenticatorType
init|=
name|getString
argument_list|(
literal|"authenticatorType"
argument_list|,
literal|"password"
argument_list|)
decl_stmt|;
name|boolean
name|secured
init|=
name|getBoolean
argument_list|(
literal|"secured"
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|String
name|secureAlgorithm
init|=
name|getString
argument_list|(
literal|"secureAlgorithm"
argument_list|,
literal|"default"
argument_list|)
decl_stmt|;
name|String
name|secureProtocol
init|=
name|getString
argument_list|(
literal|"secureProtocol"
argument_list|,
literal|"TLS"
argument_list|)
decl_stmt|;
name|String
name|keyStore
init|=
name|getString
argument_list|(
literal|"keyStore"
argument_list|,
literal|"karaf.ks"
argument_list|)
decl_stmt|;
name|String
name|keyAlias
init|=
name|getString
argument_list|(
literal|"keyAlias"
argument_list|,
literal|"karaf"
argument_list|)
decl_stmt|;
name|String
name|trustStore
init|=
name|getString
argument_list|(
literal|"trustStore"
argument_list|,
literal|"karaf.ts"
argument_list|)
decl_stmt|;
name|KarafMBeanServerGuard
name|guard
init|=
operator|new
name|KarafMBeanServerGuard
argument_list|()
decl_stmt|;
name|guard
operator|.
name|setConfigAdmin
argument_list|(
name|configurationAdmin
argument_list|)
expr_stmt|;
name|guard
operator|.
name|init
argument_list|()
expr_stmt|;
name|rmiRegistryFactory
operator|=
operator|new
name|RmiRegistryFactory
argument_list|()
expr_stmt|;
name|rmiRegistryFactory
operator|.
name|setCreate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rmiRegistryFactory
operator|.
name|setLocate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rmiRegistryFactory
operator|.
name|setHost
argument_list|(
name|rmiRegistryHost
argument_list|)
expr_stmt|;
name|rmiRegistryFactory
operator|.
name|setPort
argument_list|(
name|rmiRegistryPort
argument_list|)
expr_stmt|;
name|rmiRegistryFactory
operator|.
name|setBundleContext
argument_list|(
name|bundleContext
argument_list|)
expr_stmt|;
name|rmiRegistryFactory
operator|.
name|init
argument_list|()
expr_stmt|;
name|mbeanServerFactory
operator|=
operator|new
name|MBeanServerFactory
argument_list|()
expr_stmt|;
name|mbeanServerFactory
operator|.
name|setLocateExistingServerIfPossible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|mbeanServerFactory
operator|.
name|init
argument_list|()
expr_stmt|;
name|MBeanServer
name|mbeanServer
init|=
name|mbeanServerFactory
operator|.
name|getServer
argument_list|()
decl_stmt|;
name|JaasAuthenticator
name|jaasAuthenticator
init|=
operator|new
name|JaasAuthenticator
argument_list|()
decl_stmt|;
name|jaasAuthenticator
operator|.
name|setRealm
argument_list|(
name|jmxRealm
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|=
operator|new
name|ConnectorServerFactory
argument_list|()
expr_stmt|;
name|connectorServerFactory
operator|.
name|setServer
argument_list|(
name|mbeanServer
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setServiceUrl
argument_list|(
name|serviceUrl
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setRmiServerHost
argument_list|(
name|rmiServerHost
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setDaemon
argument_list|(
name|daemon
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setThreaded
argument_list|(
name|threaded
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setObjectName
argument_list|(
name|objectName
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|environment
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|environment
operator|.
name|put
argument_list|(
literal|"jmx.remote.authenticator"
argument_list|,
name|jaasAuthenticator
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setEnvironment
argument_list|(
name|environment
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setKeyStoreAvailabilityTimeout
argument_list|(
name|keyStoreAvailabilityTimeout
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setAuthenticatorType
argument_list|(
name|authenticatorType
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setSecured
argument_list|(
name|secured
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setAlgorithm
argument_list|(
name|secureAlgorithm
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setSecureProtocol
argument_list|(
name|secureProtocol
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setKeyStore
argument_list|(
name|keyStore
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setKeyAlias
argument_list|(
name|keyAlias
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setTrustStore
argument_list|(
name|trustStore
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|setKeystoreManager
argument_list|(
name|keystoreManager
argument_list|)
expr_stmt|;
name|connectorServerFactory
operator|.
name|init
argument_list|()
expr_stmt|;
name|JMXSecurityMBeanImpl
name|securityMBean
init|=
operator|new
name|JMXSecurityMBeanImpl
argument_list|()
decl_stmt|;
name|securityMBean
operator|.
name|setMBeanServer
argument_list|(
name|mbeanServer
argument_list|)
expr_stmt|;
name|registerMBean
argument_list|(
name|securityMBean
argument_list|,
literal|"type=security,area=jmx"
argument_list|)
expr_stmt|;
name|register
argument_list|(
name|MBeanServer
operator|.
name|class
argument_list|,
name|mbeanServer
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doStop
parameter_list|()
block|{
name|super
operator|.
name|doStop
argument_list|()
expr_stmt|;
if|if
condition|(
name|connectorServerFactory
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|connectorServerFactory
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Error destroying ConnectorServerFactory"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|connectorServerFactory
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|mbeanServerFactory
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|mbeanServerFactory
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Error destroying MBeanServerFactory"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|mbeanServerFactory
operator|=
literal|null
expr_stmt|;
block|}
if|if
condition|(
name|rmiRegistryFactory
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|rmiRegistryFactory
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Error destroying RMIRegistryFactory"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
name|rmiRegistryFactory
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


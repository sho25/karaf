begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|management
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|management
operator|.
name|ManagementFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_class
specifier|public
class|class
name|MBeanServerFactory
block|{
specifier|private
name|boolean
name|locateExistingServerIfPossible
init|=
literal|false
decl_stmt|;
specifier|private
name|String
name|agentId
decl_stmt|;
specifier|private
name|String
name|defaultDomain
decl_stmt|;
specifier|private
name|boolean
name|registerWithFactory
init|=
literal|true
decl_stmt|;
specifier|private
name|MBeanServer
name|server
decl_stmt|;
specifier|private
name|boolean
name|newlyRegistered
init|=
literal|false
decl_stmt|;
specifier|public
name|boolean
name|isLocateExistingServerIfPossible
parameter_list|()
block|{
return|return
name|locateExistingServerIfPossible
return|;
block|}
specifier|public
name|void
name|setLocateExistingServerIfPossible
parameter_list|(
name|boolean
name|locateExistingServerIfPossible
parameter_list|)
block|{
name|this
operator|.
name|locateExistingServerIfPossible
operator|=
name|locateExistingServerIfPossible
expr_stmt|;
block|}
specifier|public
name|String
name|getAgentId
parameter_list|()
block|{
return|return
name|agentId
return|;
block|}
specifier|public
name|void
name|setAgentId
parameter_list|(
name|String
name|agentId
parameter_list|)
block|{
name|this
operator|.
name|agentId
operator|=
name|agentId
expr_stmt|;
block|}
specifier|public
name|String
name|getDefaultDomain
parameter_list|()
block|{
return|return
name|defaultDomain
return|;
block|}
specifier|public
name|void
name|setDefaultDomain
parameter_list|(
name|String
name|defaultDomain
parameter_list|)
block|{
name|this
operator|.
name|defaultDomain
operator|=
name|defaultDomain
expr_stmt|;
block|}
specifier|public
name|boolean
name|isRegisterWithFactory
parameter_list|()
block|{
return|return
name|registerWithFactory
return|;
block|}
specifier|public
name|void
name|setRegisterWithFactory
parameter_list|(
name|boolean
name|registerWithFactory
parameter_list|)
block|{
name|this
operator|.
name|registerWithFactory
operator|=
name|registerWithFactory
expr_stmt|;
block|}
specifier|public
name|boolean
name|isNewlyRegistered
parameter_list|()
block|{
return|return
name|newlyRegistered
return|;
block|}
specifier|public
name|void
name|setNewlyRegistered
parameter_list|(
name|boolean
name|newlyRegistered
parameter_list|)
block|{
name|this
operator|.
name|newlyRegistered
operator|=
name|newlyRegistered
expr_stmt|;
block|}
specifier|public
name|MBeanServer
name|getServer
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|server
operator|==
literal|null
condition|)
block|{
name|init
argument_list|()
expr_stmt|;
block|}
return|return
name|server
return|;
block|}
specifier|public
name|void
name|init
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|locateExistingServerIfPossible
operator|||
name|this
operator|.
name|agentId
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|List
name|servers
init|=
name|javax
operator|.
name|management
operator|.
name|MBeanServerFactory
operator|.
name|findMBeanServer
argument_list|(
name|agentId
argument_list|)
decl_stmt|;
name|MBeanServer
name|server
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|servers
operator|!=
literal|null
operator|&&
name|servers
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|this
operator|.
name|server
operator|=
operator|(
name|MBeanServer
operator|)
name|servers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|server
operator|==
literal|null
operator|&&
name|agentId
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|server
operator|=
name|ManagementFactory
operator|.
name|getPlatformMBeanServer
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|this
operator|.
name|server
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Unable to locate MBeanServer"
argument_list|)
throw|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|agentId
operator|!=
literal|null
condition|)
block|{
throw|throw
name|ex
throw|;
block|}
block|}
block|}
if|if
condition|(
name|this
operator|.
name|server
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|this
operator|.
name|registerWithFactory
condition|)
block|{
name|this
operator|.
name|server
operator|=
name|javax
operator|.
name|management
operator|.
name|MBeanServerFactory
operator|.
name|createMBeanServer
argument_list|(
name|this
operator|.
name|defaultDomain
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|server
operator|=
name|javax
operator|.
name|management
operator|.
name|MBeanServerFactory
operator|.
name|newMBeanServer
argument_list|(
name|this
operator|.
name|defaultDomain
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|newlyRegistered
operator|=
name|this
operator|.
name|registerWithFactory
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|destroy
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|this
operator|.
name|newlyRegistered
condition|)
block|{
name|javax
operator|.
name|management
operator|.
name|MBeanServerFactory
operator|.
name|releaseMBeanServer
argument_list|(
name|this
operator|.
name|server
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


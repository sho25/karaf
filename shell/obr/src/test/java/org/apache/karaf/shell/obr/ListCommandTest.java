begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|obr
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|bundlerepository
operator|.
name|RepositoryAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|bundlerepository
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|bundlerepository
operator|.
name|impl
operator|.
name|ResourceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|IMocksControl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|ListCommandTest
block|{
comment|/** 	 * Show how the list of obr resources looks like  	 * @throws Exception 	 */
annotation|@
name|Test
specifier|public
name|void
name|testList
parameter_list|()
throws|throws
name|Exception
block|{
name|IMocksControl
name|control
init|=
name|EasyMock
operator|.
name|createControl
argument_list|()
decl_stmt|;
name|RepositoryAdmin
name|repoAdmin
init|=
name|control
operator|.
name|createMock
argument_list|(
name|RepositoryAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
name|ListCommand
name|command
init|=
operator|new
name|ListCommand
argument_list|()
decl_stmt|;
name|Resource
index|[]
name|resources
init|=
operator|new
name|Resource
index|[]
block|{
name|createResource
argument_list|(
literal|"My bundle"
argument_list|,
literal|"my.bundle"
argument_list|,
literal|"1.0.0"
argument_list|)
block|,
name|createResource
argument_list|(
literal|"My other Bundle"
argument_list|,
literal|"org.apache.mybundle"
argument_list|,
literal|"2.0.1"
argument_list|)
block|}
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|repoAdmin
operator|.
name|discoverResources
argument_list|(
literal|"(|(presentationname=*)(symbolicname=*))"
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|resources
argument_list|)
expr_stmt|;
name|control
operator|.
name|replay
argument_list|()
expr_stmt|;
name|command
operator|.
name|doExecute
argument_list|(
name|repoAdmin
argument_list|)
expr_stmt|;
name|control
operator|.
name|verify
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Resource
name|createResource
parameter_list|(
name|String
name|presentationName
parameter_list|,
name|String
name|symbolicName
parameter_list|,
name|String
name|version
parameter_list|)
block|{
name|ResourceImpl
name|r1
init|=
operator|new
name|ResourceImpl
argument_list|()
decl_stmt|;
name|r1
operator|.
name|put
argument_list|(
name|Resource
operator|.
name|PRESENTATION_NAME
argument_list|,
name|presentationName
argument_list|)
expr_stmt|;
name|r1
operator|.
name|put
argument_list|(
name|Resource
operator|.
name|SYMBOLIC_NAME
argument_list|,
name|symbolicName
argument_list|)
expr_stmt|;
name|r1
operator|.
name|put
argument_list|(
name|Resource
operator|.
name|VERSION
argument_list|,
name|version
argument_list|)
expr_stmt|;
return|return
name|r1
return|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|dev
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|junit
operator|.
name|framework
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|utils
operator|.
name|version
operator|.
name|VersionRange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Test cases for {@link org.apache.karaf.shell.dev.util.Import}  */
end_comment

begin_class
specifier|public
class|class
name|ImportTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|createWithPackageName
parameter_list|()
block|{
name|Import
name|i
init|=
operator|new
name|Import
argument_list|(
literal|"org.wip.foo"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.wip.foo"
argument_list|,
name|i
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createWithPackageNameAndVersion
parameter_list|()
block|{
name|Import
name|i
init|=
operator|new
name|Import
argument_list|(
literal|"org.wip.bar;version=\"2.0.0\""
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.wip.bar"
argument_list|,
name|i
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|VersionRange
operator|.
name|parseVersionRange
argument_list|(
literal|"2.0.0"
argument_list|)
argument_list|,
name|i
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createListOfImports
parameter_list|()
block|{
name|List
argument_list|<
name|Import
argument_list|>
name|imports
init|=
name|Import
operator|.
name|parse
argument_list|(
literal|"org.wip.bar;version=\"2.0.0\",org.wip.foo"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|imports
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|imports
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.wip.bar"
argument_list|,
name|imports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.wip.foo"
argument_list|,
name|imports
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createListOfImportsWithVersionRanges
parameter_list|()
block|{
name|List
argument_list|<
name|Import
argument_list|>
name|imports
init|=
name|Import
operator|.
name|parse
argument_list|(
literal|"javax.activation;version=\"[0.0,2)\",javax.annotation;version=\"[0.0,2)\""
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|imports
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|imports
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javax.activation"
argument_list|,
name|imports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"javax.annotation"
argument_list|,
name|imports
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|createListOfImportsWithExports
parameter_list|()
block|{
name|List
argument_list|<
name|Import
argument_list|>
name|imports
init|=
name|Import
operator|.
name|parse
argument_list|(
literal|"org.wip.bar;version=\"2.0.0\",org.wip.foo"
argument_list|,
literal|"org.wip.bar;version=\"2.0.0\""
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|imports
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|imports
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.wip.foo"
argument_list|,
name|imports
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPackage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


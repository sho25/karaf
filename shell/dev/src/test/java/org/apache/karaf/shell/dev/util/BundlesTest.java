begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|dev
operator|.
name|util
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_comment
comment|/**  * Test cases for {@link org.apache.karaf.shell.dev.util.Bundles}  */
end_comment

begin_class
specifier|public
class|class
name|BundlesTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"UNINSTALLED"
argument_list|,
name|Bundles
operator|.
name|toString
argument_list|(
name|Bundle
operator|.
name|UNINSTALLED
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INSTALLED"
argument_list|,
name|Bundles
operator|.
name|toString
argument_list|(
name|Bundle
operator|.
name|INSTALLED
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RESOLVED"
argument_list|,
name|Bundles
operator|.
name|toString
argument_list|(
name|Bundle
operator|.
name|RESOLVED
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"STARTING"
argument_list|,
name|Bundles
operator|.
name|toString
argument_list|(
name|Bundle
operator|.
name|STARTING
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"STOPPING"
argument_list|,
name|Bundles
operator|.
name|toString
argument_list|(
name|Bundle
operator|.
name|STOPPING
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ACTIVE"
argument_list|,
name|Bundles
operator|.
name|toString
argument_list|(
name|Bundle
operator|.
name|ACTIVE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


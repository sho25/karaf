begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|ssh
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|KeyPair
import|;
end_import

begin_class
specifier|public
class|class
name|OpenSSHGeneratorKeyFileProviderTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|readSshKey
parameter_list|()
throws|throws
name|Exception
block|{
name|OpenSSHGeneratorFileKeyProvider
name|prov
init|=
operator|new
name|OpenSSHGeneratorFileKeyProvider
argument_list|(
literal|"src/test/resources/org/apache/karaf/shell/ssh/test.pem"
argument_list|)
decl_stmt|;
name|prov
operator|.
name|setOverwriteAllowed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|KeyPair
name|keys
init|=
name|prov
operator|.
name|loadKeys
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
comment|// how would we tell if they read 'correctly'? Well, the base class will throw if the key isn't reasonable.
block|}
block|}
end_class

end_unit


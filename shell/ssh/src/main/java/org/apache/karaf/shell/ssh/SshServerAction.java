begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|ssh
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|SshServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"ssh"
argument_list|,
name|name
operator|=
literal|"sshd"
argument_list|,
name|description
operator|=
literal|"Creates a SSH server"
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|SshServerAction
implements|implements
name|Action
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-p"
argument_list|,
name|aliases
operator|=
block|{
literal|"--port"
block|}
argument_list|,
name|description
operator|=
literal|"The port to setup the SSH server"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
specifier|private
name|int
name|port
init|=
literal|8101
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-b"
argument_list|,
name|aliases
operator|=
block|{
literal|"--background"
block|}
argument_list|,
name|description
operator|=
literal|"The service will run in the background"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
specifier|private
name|boolean
name|background
init|=
literal|true
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-i"
argument_list|,
name|aliases
operator|=
block|{
literal|"--idle-timeout"
block|}
argument_list|,
name|description
operator|=
literal|"The session idle timeout in milliseconds"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
specifier|private
name|long
name|idleTimeout
init|=
literal|1800000
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-w"
argument_list|,
name|aliases
operator|=
block|{
literal|"--welcome-banner"
block|}
argument_list|,
name|description
operator|=
literal|"The welcome banner to display when logging in"
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|)
specifier|private
name|String
name|welcomeBanner
decl_stmt|;
annotation|@
name|Reference
specifier|private
name|SshServer
name|server
decl_stmt|;
specifier|public
name|void
name|setServer
parameter_list|(
name|SshServer
name|server
parameter_list|)
block|{
name|this
operator|.
name|server
operator|=
name|server
expr_stmt|;
block|}
specifier|public
name|Object
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Created server: {}"
argument_list|,
name|server
argument_list|)
expr_stmt|;
comment|// port number
name|server
operator|.
name|setPort
argument_list|(
name|port
argument_list|)
expr_stmt|;
comment|// idle timeout
name|server
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
name|SshServer
operator|.
name|IDLE_TIMEOUT
argument_list|,
name|Long
operator|.
name|toString
argument_list|(
name|idleTimeout
argument_list|)
argument_list|)
expr_stmt|;
comment|// welcome banner
if|if
condition|(
name|welcomeBanner
operator|!=
literal|null
condition|)
block|{
name|server
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
name|SshServer
operator|.
name|WELCOME_BANNER
argument_list|,
name|welcomeBanner
argument_list|)
expr_stmt|;
block|}
comment|// starting the SSHd server
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"SSH server listening on port "
operator|+
name|port
operator|+
literal|" (idle timeout "
operator|+
name|idleTimeout
operator|+
literal|"ms)"
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|background
condition|)
block|{
synchronized|synchronized
init|(
name|this
init|)
block|{
name|log
operator|.
name|debug
argument_list|(
literal|"Waiting for server to shutdown"
argument_list|)
expr_stmt|;
name|wait
argument_list|()
expr_stmt|;
block|}
name|server
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


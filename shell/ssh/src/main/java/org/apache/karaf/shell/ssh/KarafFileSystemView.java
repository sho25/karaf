begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|ssh
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|server
operator|.
name|FileSystemView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|server
operator|.
name|SshFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|sshd
operator|.
name|server
operator|.
name|filesystem
operator|.
name|NativeSshFile
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * Karaf file system view reduced to the KARAF_BASE location  */
end_comment

begin_class
specifier|public
class|class
name|KarafFileSystemView
implements|implements
name|FileSystemView
block|{
specifier|private
name|String
name|location
decl_stmt|;
specifier|public
name|KarafFileSystemView
parameter_list|()
block|{
name|location
operator|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.base"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|SshFile
name|getFile
parameter_list|(
name|String
name|file
parameter_list|)
block|{
return|return
name|getFile
argument_list|(
name|location
argument_list|,
name|file
argument_list|)
return|;
block|}
specifier|public
name|SshFile
name|getFile
parameter_list|(
name|SshFile
name|baseDir
parameter_list|,
name|String
name|file
parameter_list|)
block|{
return|return
name|getFile
argument_list|(
name|baseDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|file
argument_list|)
return|;
block|}
specifier|protected
name|SshFile
name|getFile
parameter_list|(
name|String
name|dir
parameter_list|,
name|String
name|file
parameter_list|)
block|{
comment|// get actual file object
name|String
name|physicalName
init|=
name|NativeSshFile
operator|.
name|getPhysicalName
argument_list|(
literal|"/"
argument_list|,
name|dir
argument_list|,
name|file
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|physicalName
operator|.
name|startsWith
argument_list|(
name|location
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The path is not relative to KARAF_BASE. For security reason, it's not allowed."
argument_list|)
throw|;
block|}
name|File
name|fileObj
init|=
operator|new
name|File
argument_list|(
name|physicalName
argument_list|)
decl_stmt|;
comment|// strip the root directory and return
name|String
name|karafFileName
init|=
name|physicalName
operator|.
name|substring
argument_list|(
literal|"/"
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
decl_stmt|;
return|return
operator|new
name|KarafSshFile
argument_list|(
name|karafFileName
argument_list|,
name|fileObj
argument_list|)
return|;
block|}
block|}
end_class

end_unit


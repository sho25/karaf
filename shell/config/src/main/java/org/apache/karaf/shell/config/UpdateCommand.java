begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|config
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|utils
operator|.
name|properties
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"config"
argument_list|,
name|name
operator|=
literal|"update"
argument_list|,
name|description
operator|=
literal|"Saves and propagates changes from the configuration being edited."
argument_list|)
specifier|public
class|class
name|UpdateCommand
extends|extends
name|ConfigCommandSupport
block|{
specifier|private
specifier|final
name|String
name|FELIX_FILEINSTALL_FILENAME
init|=
literal|"felix.fileinstall.filename"
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-b"
argument_list|,
name|aliases
operator|=
block|{
literal|"--bypass-storage"
block|}
argument_list|,
name|multiValued
operator|=
literal|false
argument_list|,
name|required
operator|=
literal|false
argument_list|,
name|description
operator|=
literal|"Do not store the configuration in a properties file, but feed it directly to ConfigAdmin"
argument_list|)
specifier|private
name|boolean
name|bypassStorage
decl_stmt|;
specifier|private
name|File
name|storage
decl_stmt|;
specifier|public
name|File
name|getStorage
parameter_list|()
block|{
return|return
name|storage
return|;
block|}
specifier|public
name|void
name|setStorage
parameter_list|(
name|File
name|storage
parameter_list|)
block|{
name|this
operator|.
name|storage
operator|=
name|storage
expr_stmt|;
block|}
specifier|protected
name|void
name|doExecute
parameter_list|(
name|ConfigurationAdmin
name|admin
parameter_list|)
throws|throws
name|Exception
block|{
name|Dictionary
name|props
init|=
name|getEditedProps
argument_list|()
decl_stmt|;
if|if
condition|(
name|props
operator|==
literal|null
condition|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"No configuration is being edited--run the edit command first"
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|pid
init|=
operator|(
name|String
operator|)
name|this
operator|.
name|session
operator|.
name|get
argument_list|(
name|PROPERTY_CONFIG_PID
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|bypassStorage
operator|&&
name|storage
operator|!=
literal|null
condition|)
block|{
name|File
name|storageFile
init|=
operator|new
name|File
argument_list|(
name|storage
argument_list|,
name|pid
operator|+
literal|".cfg"
argument_list|)
decl_stmt|;
name|Configuration
name|cfg
init|=
name|admin
operator|.
name|getConfiguration
argument_list|(
name|pid
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|cfg
operator|!=
literal|null
operator|&&
name|cfg
operator|.
name|getProperties
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|Object
name|val
init|=
name|cfg
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|FELIX_FILEINSTALL_FILENAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|val
operator|instanceof
name|String
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|String
operator|)
name|val
operator|)
operator|.
name|startsWith
argument_list|(
literal|"file:"
argument_list|)
condition|)
block|{
name|val
operator|=
operator|(
operator|(
name|String
operator|)
name|val
operator|)
operator|.
name|substring
argument_list|(
literal|"file:"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|storageFile
operator|=
operator|new
name|File
argument_list|(
operator|(
name|String
operator|)
name|val
argument_list|)
expr_stmt|;
block|}
block|}
name|Properties
name|p
init|=
operator|new
name|Properties
argument_list|(
name|storageFile
argument_list|)
decl_stmt|;
for|for
control|(
name|Enumeration
name|keys
init|=
name|props
operator|.
name|keys
argument_list|()
init|;
name|keys
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|Object
name|key
init|=
name|keys
operator|.
name|nextElement
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Constants
operator|.
name|SERVICE_PID
operator|.
name|equals
argument_list|(
name|key
argument_list|)
operator|&&
operator|!
name|ConfigurationAdmin
operator|.
name|SERVICE_FACTORYPID
operator|.
name|equals
argument_list|(
name|key
argument_list|)
operator|&&
operator|!
name|FELIX_FILEINSTALL_FILENAME
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|p
operator|.
name|put
argument_list|(
operator|(
name|String
operator|)
name|key
argument_list|,
operator|(
name|String
operator|)
name|props
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// remove "removed" properties from the file
name|ArrayList
argument_list|<
name|String
argument_list|>
name|propertiesToRemove
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|key
range|:
name|p
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
name|props
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|==
literal|null
operator|&&
operator|!
name|Constants
operator|.
name|SERVICE_PID
operator|.
name|equals
argument_list|(
name|key
argument_list|)
operator|&&
operator|!
name|ConfigurationAdmin
operator|.
name|SERVICE_FACTORYPID
operator|.
name|equals
argument_list|(
name|key
argument_list|)
operator|&&
operator|!
name|FELIX_FILEINSTALL_FILENAME
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|propertiesToRemove
operator|.
name|add
argument_list|(
name|key
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|key
range|:
name|propertiesToRemove
control|)
block|{
name|p
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
comment|// save the cfg file
name|storage
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|p
operator|.
name|save
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|Configuration
name|cfg
init|=
name|admin
operator|.
name|getConfiguration
argument_list|(
name|pid
argument_list|,
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|cfg
operator|.
name|getProperties
argument_list|()
operator|==
literal|null
condition|)
block|{
name|String
index|[]
name|pids
init|=
name|parsePid
argument_list|(
name|pid
argument_list|)
decl_stmt|;
if|if
condition|(
name|pids
index|[
literal|1
index|]
operator|!=
literal|null
condition|)
block|{
name|cfg
operator|=
name|admin
operator|.
name|createFactoryConfiguration
argument_list|(
name|pids
index|[
literal|0
index|]
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|cfg
operator|.
name|getBundleLocation
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|cfg
operator|.
name|setBundleLocation
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|cfg
operator|.
name|update
argument_list|(
name|props
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|session
operator|.
name|put
argument_list|(
name|PROPERTY_CONFIG_PID
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|this
operator|.
name|session
operator|.
name|put
argument_list|(
name|PROPERTY_CONFIG_PROPS
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
index|[]
name|parsePid
parameter_list|(
name|String
name|pid
parameter_list|)
block|{
name|int
name|n
init|=
name|pid
operator|.
name|indexOf
argument_list|(
literal|'-'
argument_list|)
decl_stmt|;
if|if
condition|(
name|n
operator|>
literal|0
condition|)
block|{
name|String
name|factoryPid
init|=
name|pid
operator|.
name|substring
argument_list|(
name|n
operator|+
literal|1
argument_list|)
decl_stmt|;
name|pid
operator|=
name|pid
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|n
argument_list|)
expr_stmt|;
return|return
operator|new
name|String
index|[]
block|{
name|pid
block|,
name|factoryPid
block|}
return|;
block|}
else|else
block|{
return|return
operator|new
name|String
index|[]
block|{
name|pid
block|,
literal|null
block|}
return|;
block|}
block|}
block|}
end_class

end_unit


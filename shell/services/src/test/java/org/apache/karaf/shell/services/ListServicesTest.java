begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|services
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|createMock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|expect
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|easymock
operator|.
name|EasyMock
operator|.
name|replay
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_class
specifier|public
class|class
name|ListServicesTest
block|{
specifier|public
name|ListServicesTest
parameter_list|()
block|{              }
name|ServiceReference
argument_list|<
name|?
argument_list|>
name|createServiceRef
parameter_list|(
name|String
modifier|...
name|objectClass
parameter_list|)
block|{
name|ServiceReference
argument_list|<
name|?
argument_list|>
name|serviceRef
init|=
name|createMock
argument_list|(
name|ServiceReference
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|serviceRef
operator|.
name|getProperty
argument_list|(
literal|"objectClass"
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|objectClass
argument_list|)
operator|.
name|atLeastOnce
argument_list|()
expr_stmt|;
name|expect
argument_list|(
name|serviceRef
operator|.
name|getPropertyKeys
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"objectClass"
block|}
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|serviceRef
argument_list|)
expr_stmt|;
return|return
name|serviceRef
return|;
block|}
name|Bundle
name|createBundle
parameter_list|(
name|long
name|id
parameter_list|,
name|String
name|name
parameter_list|,
name|ServiceReference
argument_list|<
name|?
argument_list|>
index|[]
name|providedServices
parameter_list|,
name|ServiceReference
argument_list|<
name|?
argument_list|>
index|[]
name|usedServices
parameter_list|)
block|{
name|Bundle
name|bundle
init|=
name|createMock
argument_list|(
name|Bundle
operator|.
name|class
argument_list|)
decl_stmt|;
name|expect
argument_list|(
name|bundle
operator|.
name|getRegisteredServices
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|providedServices
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|bundle
operator|.
name|getServicesInUse
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|usedServices
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|bundle
operator|.
name|getBundleId
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|Dictionary
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|headers
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|headers
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|BUNDLE_NAME
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|bundle
operator|.
name|getHeaders
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|headers
argument_list|)
operator|.
name|atLeastOnce
argument_list|()
expr_stmt|;
name|replay
argument_list|(
name|bundle
argument_list|)
expr_stmt|;
return|return
name|bundle
return|;
block|}
specifier|private
name|Bundle
index|[]
name|createBundles
parameter_list|()
block|{
name|Bundle
name|bundle1
init|=
name|createBundle
argument_list|(
literal|1
argument_list|,
literal|"ABundle"
argument_list|,
operator|new
name|ServiceReference
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|createServiceRef
argument_list|(
literal|"org.example.MyService"
argument_list|)
block|}
operator|,
operator|new
name|ServiceReference
argument_list|<
name|?
argument_list|>
index|[]
block|{}
block|)
function|;
name|Bundle
name|bundle2
init|=
name|createBundle
argument_list|(
literal|2
argument_list|,
literal|"AnotherBundle"
argument_list|,
operator|new
name|ServiceReference
argument_list|<
name|?
argument_list|>
index|[]
block|{}
operator|,
operator|new
name|ServiceReference
argument_list|<
name|?
argument_list|>
index|[]
block|{
name|createServiceRef
argument_list|(
literal|"org.example.MyService"
argument_list|)
block|}
block|)
class|;
end_class

begin_return
return|return
operator|new
name|Bundle
index|[]
block|{
name|bundle1
block|,
name|bundle2
block|}
return|;
end_return

begin_function
unit|}          private
name|BundleContext
name|createBundleContext
parameter_list|()
block|{
name|BundleContext
name|bundleContext
init|=
name|createMock
argument_list|(
name|BundleContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|Bundle
index|[]
name|bundles
init|=
name|createBundles
argument_list|()
decl_stmt|;
name|expect
argument_list|(
name|bundleContext
operator|.
name|getBundle
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|bundleContext
operator|.
name|getBundles
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|bundles
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|bundleContext
operator|.
name|getBundle
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|bundles
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|expect
argument_list|(
name|bundleContext
operator|.
name|getBundle
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|andReturn
argument_list|(
name|bundles
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|replay
argument_list|(
name|bundleContext
argument_list|)
expr_stmt|;
return|return
name|bundleContext
return|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|listAllShort
parameter_list|()
throws|throws
name|Exception
block|{
name|ListServices
name|listServices
init|=
operator|new
name|ListServices
argument_list|()
decl_stmt|;
name|listServices
operator|.
name|setBundleContext
argument_list|(
name|createBundleContext
argument_list|()
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|doExecute
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|listAllLong
parameter_list|()
throws|throws
name|Exception
block|{
name|ListServices
name|listServices
init|=
operator|new
name|ListServices
argument_list|()
decl_stmt|;
name|listServices
operator|.
name|ids
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"1"
block|,
literal|"2"
block|}
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|setBundleContext
argument_list|(
name|createBundleContext
argument_list|()
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|doExecute
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Test
specifier|public
name|void
name|listAllLongServiceUse
parameter_list|()
throws|throws
name|Exception
block|{
name|ListServices
name|listServices
init|=
operator|new
name|ListServices
argument_list|()
decl_stmt|;
name|listServices
operator|.
name|ids
operator|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"1"
block|,
literal|"2"
block|}
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|inUse
operator|=
literal|true
expr_stmt|;
name|listServices
operator|.
name|setBundleContext
argument_list|(
name|createBundleContext
argument_list|()
argument_list|)
expr_stmt|;
name|listServices
operator|.
name|doExecute
argument_list|()
expr_stmt|;
block|}
end_function

unit|}
end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|basic
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|basic
operator|.
name|SimpleCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|SubShellAction
import|;
end_import

begin_class
specifier|public
class|class
name|SimpleSubShell
extends|extends
name|SimpleCommand
block|{
specifier|private
specifier|final
name|String
name|subshell
decl_stmt|;
specifier|public
name|SimpleSubShell
parameter_list|(
name|String
name|subshell
parameter_list|)
block|{
name|super
argument_list|(
name|SubShellAction
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|subshell
operator|=
name|subshell
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Action
name|createNewAction
parameter_list|()
block|{
name|SubShellAction
name|action
init|=
operator|(
name|SubShellAction
operator|)
name|super
operator|.
name|createNewAction
argument_list|()
decl_stmt|;
name|action
operator|.
name|setSubShell
argument_list|(
name|subshell
argument_list|)
expr_stmt|;
return|return
name|action
return|;
block|}
block|}
end_class

end_unit


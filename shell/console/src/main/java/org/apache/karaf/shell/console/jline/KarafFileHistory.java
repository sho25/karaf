begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|jline
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|jline
operator|.
name|console
operator|.
name|history
operator|.
name|FileHistory
import|;
end_import

begin_comment
comment|/**  * Override the FileHistory impl to trap failures due to the  * user does not having write access to the history file.  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|KarafFileHistory
extends|extends
name|FileHistory
block|{
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|KarafFileHistory
operator|.
name|class
argument_list|)
decl_stmt|;
name|boolean
name|failed
init|=
literal|false
decl_stmt|;
specifier|public
name|KarafFileHistory
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|IOException
block|{
name|super
argument_list|(
name|file
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|flush
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|failed
condition|)
block|{
try|try
block|{
name|super
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|failed
operator|=
literal|true
expr_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Could not write history file: "
operator|+
name|getFile
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|purge
parameter_list|()
throws|throws
name|IOException
block|{
if|if
condition|(
operator|!
name|failed
condition|)
block|{
try|try
block|{
name|super
operator|.
name|purge
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|failed
operator|=
literal|true
expr_stmt|;
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Could not delete history file: "
operator|+
name|getFile
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit


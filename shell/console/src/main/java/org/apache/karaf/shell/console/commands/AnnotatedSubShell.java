begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *     http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|commands
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|SubShell
import|;
end_import

begin_class
specifier|public
class|class
name|AnnotatedSubShell
implements|implements
name|SubShell
block|{
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|getAnnotation
argument_list|()
operator|.
name|name
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|getAnnotation
argument_list|()
operator|.
name|description
argument_list|()
return|;
block|}
specifier|public
name|String
name|getDetailedDescription
parameter_list|()
block|{
return|return
name|getAnnotation
argument_list|()
operator|.
name|detailedDescription
argument_list|()
return|;
block|}
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|SubShell
name|getAnnotation
parameter_list|()
block|{
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|SubShell
name|ann
init|=
name|getClass
argument_list|()
operator|.
name|getAnnotation
argument_list|(
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|SubShell
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|ann
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"The class should be annotated with the org.apache.felix.gogo.commands.SubShell annotation"
argument_list|)
throw|;
block|}
return|return
name|ann
return|;
block|}
block|}
end_class

end_unit


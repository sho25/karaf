begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|impl
operator|.
name|jline
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|PrivilegedAction
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|security
operator|.
name|auth
operator|.
name|Subject
import|;
end_import

begin_import
import|import
name|jline
operator|.
name|Terminal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|service
operator|.
name|command
operator|.
name|CommandProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|service
operator|.
name|command
operator|.
name|CommandSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|service
operator|.
name|command
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jaas
operator|.
name|boot
operator|.
name|principal
operator|.
name|UserPrincipal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|Console
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|console
operator|.
name|ConsoleFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_class
specifier|public
class|class
name|ConsoleFactoryService
implements|implements
name|ConsoleFactory
block|{
specifier|private
specifier|final
name|BundleContext
name|bundleContext
decl_stmt|;
specifier|public
name|ConsoleFactoryService
parameter_list|(
name|BundleContext
name|bc
parameter_list|)
block|{
name|bundleContext
operator|=
name|bc
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Console
name|createLocal
parameter_list|(
name|CommandProcessor
name|processor
parameter_list|,
specifier|final
name|Terminal
name|terminal
parameter_list|,
name|String
name|encoding
parameter_list|,
name|Runnable
name|closeCallback
parameter_list|)
block|{
return|return
name|create
argument_list|(
name|processor
argument_list|,
name|StreamWrapUtil
operator|.
name|reWrapIn
argument_list|(
name|terminal
argument_list|,
name|System
operator|.
name|in
argument_list|)
argument_list|,
name|StreamWrapUtil
operator|.
name|reWrap
argument_list|(
name|System
operator|.
name|out
argument_list|)
argument_list|,
name|StreamWrapUtil
operator|.
name|reWrap
argument_list|(
name|System
operator|.
name|err
argument_list|)
argument_list|,
name|terminal
argument_list|,
name|encoding
argument_list|,
name|closeCallback
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Console
name|create
parameter_list|(
name|CommandProcessor
name|processor
parameter_list|,
name|InputStream
name|in
parameter_list|,
name|PrintStream
name|out
parameter_list|,
name|PrintStream
name|err
parameter_list|,
specifier|final
name|Terminal
name|terminal
parameter_list|,
name|String
name|encoding
parameter_list|,
name|Runnable
name|closeCallback
parameter_list|)
block|{
name|ConsoleImpl
name|console
init|=
operator|new
name|ConsoleImpl
argument_list|(
name|processor
argument_list|,
name|in
argument_list|,
name|out
argument_list|,
name|err
argument_list|,
name|terminal
argument_list|,
name|encoding
argument_list|,
name|closeCallback
argument_list|,
name|bundleContext
argument_list|)
decl_stmt|;
name|CommandSession
name|session
init|=
name|console
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|session
operator|.
name|put
argument_list|(
literal|"APPLICATION"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.name"
argument_list|,
literal|"root"
argument_list|)
argument_list|)
expr_stmt|;
name|session
operator|.
name|put
argument_list|(
literal|"#LINES"
argument_list|,
operator|new
name|Function
argument_list|()
block|{
specifier|public
name|Object
name|execute
parameter_list|(
name|CommandSession
name|session
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|arguments
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Integer
operator|.
name|toString
argument_list|(
name|terminal
operator|.
name|getHeight
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|session
operator|.
name|put
argument_list|(
literal|"#COLUMNS"
argument_list|,
operator|new
name|Function
argument_list|()
block|{
specifier|public
name|Object
name|execute
parameter_list|(
name|CommandSession
name|session
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|arguments
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|Integer
operator|.
name|toString
argument_list|(
name|terminal
operator|.
name|getWidth
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|session
operator|.
name|put
argument_list|(
literal|".jline.terminal"
argument_list|,
name|terminal
argument_list|)
expr_stmt|;
name|addSystemProperties
argument_list|(
name|session
argument_list|)
expr_stmt|;
return|return
name|console
return|;
block|}
specifier|private
name|void
name|addSystemProperties
parameter_list|(
name|CommandSession
name|session
parameter_list|)
block|{
name|Properties
name|sysProps
init|=
name|System
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|Iterator
argument_list|<
name|Object
argument_list|>
name|it
init|=
name|sysProps
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|session
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|startConsoleAs
parameter_list|(
specifier|final
name|Console
name|console
parameter_list|,
specifier|final
name|Subject
name|subject
parameter_list|,
name|String
name|consoleType
parameter_list|)
block|{
specifier|final
name|String
name|userName
init|=
name|getUserName
argument_list|(
name|subject
argument_list|)
decl_stmt|;
operator|new
name|Thread
argument_list|(
name|console
argument_list|,
literal|"Karaf Console "
operator|+
name|consoleType
operator|+
literal|" user "
operator|+
name|userName
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
name|subject
operator|!=
literal|null
condition|)
block|{
name|CommandSession
name|session
init|=
name|console
operator|.
name|getSession
argument_list|()
decl_stmt|;
name|session
operator|.
name|put
argument_list|(
literal|"USER"
argument_list|,
name|userName
argument_list|)
expr_stmt|;
name|Subject
operator|.
name|doAs
argument_list|(
name|subject
argument_list|,
operator|new
name|PrivilegedAction
argument_list|<
name|Object
argument_list|>
argument_list|()
block|{
specifier|public
name|Object
name|run
parameter_list|()
block|{
name|doRun
argument_list|()
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|doRun
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|doRun
parameter_list|()
block|{
name|super
operator|.
name|run
argument_list|()
expr_stmt|;
block|}
block|}
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|String
name|getUserName
parameter_list|(
specifier|final
name|Subject
name|subject
parameter_list|)
block|{
if|if
condition|(
name|subject
operator|!=
literal|null
operator|&&
name|subject
operator|.
name|getPrincipals
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|hasNext
argument_list|()
condition|)
block|{
return|return
name|subject
operator|.
name|getPrincipals
argument_list|(
name|UserPrincipal
operator|.
name|class
argument_list|)
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
operator|.
name|getName
argument_list|()
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|basic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|basic
operator|.
name|DefaultActionPreparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|basic
operator|.
name|ActionPreparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|gogo
operator|.
name|commands
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|command
operator|.
name|CommandSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|command
operator|.
name|Function
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractCommand
implements|implements
name|Function
block|{
specifier|public
name|Object
name|execute
parameter_list|(
name|CommandSession
name|session
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|arguments
parameter_list|)
throws|throws
name|Exception
block|{
name|Action
name|action
init|=
name|createNewAction
argument_list|()
decl_stmt|;
try|try
block|{
if|if
condition|(
name|getPreparator
argument_list|()
operator|.
name|prepare
argument_list|(
name|action
argument_list|,
name|session
argument_list|,
name|arguments
argument_list|)
condition|)
block|{
return|return
name|action
operator|.
name|execute
argument_list|(
name|session
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
block|}
block|}
finally|finally
block|{
name|releaseAction
argument_list|(
name|action
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
specifier|abstract
name|Action
name|createNewAction
parameter_list|()
throws|throws
name|Exception
function_decl|;
comment|/**      * Release the used Action.      * This method has to be overridden for pool based Actions.      * @param action Action that was executed      * @throws Exception if something went wrong during the Action release      */
specifier|protected
name|void
name|releaseAction
parameter_list|(
name|Action
name|action
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Do nothing by default (stateful)
block|}
specifier|protected
name|ActionPreparator
name|getPreparator
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|DefaultActionPreparator
argument_list|()
return|;
block|}
block|}
end_class

end_unit


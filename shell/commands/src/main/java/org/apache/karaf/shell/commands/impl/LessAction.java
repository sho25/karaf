begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Reference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|action
operator|.
name|lifecycle
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|console
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jline
operator|.
name|builtins
operator|.
name|Less
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jline
operator|.
name|builtins
operator|.
name|Source
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jline
operator|.
name|builtins
operator|.
name|Source
operator|.
name|StdInSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jline
operator|.
name|builtins
operator|.
name|Source
operator|.
name|URLSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jline
operator|.
name|terminal
operator|.
name|Terminal
import|;
end_import

begin_class
annotation|@
name|Command
argument_list|(
name|scope
operator|=
literal|"shell"
argument_list|,
name|name
operator|=
literal|"less"
argument_list|,
name|description
operator|=
literal|"File pager."
argument_list|)
annotation|@
name|Service
specifier|public
class|class
name|LessAction
implements|implements
name|Action
block|{
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-e"
argument_list|,
name|aliases
operator|=
literal|"--quit-at-eof"
argument_list|)
name|boolean
name|quitAtSecondEof
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-E"
argument_list|,
name|aliases
operator|=
literal|"--QUIT-AT-EOF"
argument_list|)
name|boolean
name|quitAtFirstEof
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-N"
argument_list|,
name|aliases
operator|=
literal|"--LINE-NUMBERS"
argument_list|)
name|boolean
name|printLineNumbers
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-q"
argument_list|,
name|aliases
operator|=
block|{
literal|"--quiet"
block|,
literal|"--silent"
block|}
argument_list|)
name|boolean
name|quiet
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-Q"
argument_list|,
name|aliases
operator|=
block|{
literal|"--QUIET"
block|,
literal|"--SILENT"
block|}
argument_list|)
name|boolean
name|veryQuiet
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-S"
argument_list|,
name|aliases
operator|=
literal|"--chop-long-lines"
argument_list|)
name|boolean
name|chopLongLines
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-i"
argument_list|,
name|aliases
operator|=
literal|"--ignore-case"
argument_list|)
name|boolean
name|ignoreCaseCond
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-I"
argument_list|,
name|aliases
operator|=
literal|"--IGNORE-CASE"
argument_list|)
name|boolean
name|ignoreCaseAlways
decl_stmt|;
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-x"
argument_list|,
name|aliases
operator|=
literal|"--tabs"
argument_list|)
name|int
name|tabs
init|=
literal|4
decl_stmt|;
annotation|@
name|Argument
argument_list|(
name|multiValued
operator|=
literal|true
argument_list|)
name|List
argument_list|<
name|String
argument_list|>
name|files
decl_stmt|;
annotation|@
name|Reference
name|Session
name|session
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Object
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|Terminal
name|terminal
init|=
operator|(
name|Terminal
operator|)
name|session
operator|.
name|get
argument_list|(
literal|".jline.terminal"
argument_list|)
decl_stmt|;
name|Less
name|less
init|=
operator|new
name|Less
argument_list|(
name|terminal
argument_list|)
decl_stmt|;
name|less
operator|.
name|quitAtFirstEof
operator|=
name|quitAtFirstEof
expr_stmt|;
name|less
operator|.
name|quitAtSecondEof
operator|=
name|quitAtSecondEof
expr_stmt|;
name|less
operator|.
name|quiet
operator|=
name|quiet
expr_stmt|;
name|less
operator|.
name|veryQuiet
operator|=
name|veryQuiet
expr_stmt|;
name|less
operator|.
name|chopLongLines
operator|=
name|chopLongLines
expr_stmt|;
name|less
operator|.
name|ignoreCaseAlways
operator|=
name|ignoreCaseAlways
expr_stmt|;
name|less
operator|.
name|ignoreCaseCond
operator|=
name|ignoreCaseCond
expr_stmt|;
name|less
operator|.
name|tabs
operator|=
name|tabs
expr_stmt|;
name|less
operator|.
name|printLineNumbers
operator|=
name|printLineNumbers
expr_stmt|;
name|List
argument_list|<
name|Source
argument_list|>
name|sources
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|files
operator|==
literal|null
operator|||
name|files
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|files
operator|=
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"-"
argument_list|)
expr_stmt|;
block|}
name|Path
name|pwd
init|=
name|Paths
operator|.
name|get
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"karaf.home"
argument_list|,
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.dir"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|arg
range|:
name|files
control|)
block|{
if|if
condition|(
literal|"-"
operator|.
name|equals
argument_list|(
name|arg
argument_list|)
condition|)
block|{
name|sources
operator|.
name|add
argument_list|(
operator|new
name|StdInSource
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|sources
operator|.
name|add
argument_list|(
operator|new
name|URLSource
argument_list|(
name|pwd
operator|.
name|toUri
argument_list|()
operator|.
name|resolve
argument_list|(
name|arg
argument_list|)
operator|.
name|toURL
argument_list|()
argument_list|,
name|arg
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|less
operator|.
name|run
argument_list|(
name|sources
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


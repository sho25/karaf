begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|commands
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|WcTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|SMALL_FILE
init|=
literal|"WcActionTestSmall.txt"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|LARGE_FILE
init|=
literal|"WcActionTestLarge.txt"
decl_stmt|;
specifier|public
name|void
name|testEmptyStringCounts
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|string
init|=
literal|""
decl_stmt|;
name|WcAction
operator|.
name|WordCounts
name|expected
init|=
operator|new
name|WcAction
operator|.
name|WordCounts
argument_list|()
decl_stmt|;
name|WcAction
operator|.
name|WordCounts
name|actual
init|=
name|getWordCounts
argument_list|(
name|string
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHelloWorldWordCounts
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|string
init|=
literal|"Hello World"
decl_stmt|;
name|WcAction
operator|.
name|WordCounts
name|expected
init|=
operator|new
name|WcAction
operator|.
name|WordCounts
argument_list|()
decl_stmt|;
name|expected
operator|.
name|wordCount
operator|=
literal|2
expr_stmt|;
name|expected
operator|.
name|lineCount
operator|=
literal|0
expr_stmt|;
name|expected
operator|.
name|charCount
operator|=
literal|11
expr_stmt|;
name|expected
operator|.
name|byteCount
operator|=
literal|11
expr_stmt|;
name|WcAction
operator|.
name|WordCounts
name|actual
init|=
name|getWordCounts
argument_list|(
name|string
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLargeStringCounts
parameter_list|()
throws|throws
name|Exception
block|{
name|InputStream
name|stream
init|=
name|WcTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|LARGE_FILE
argument_list|)
decl_stmt|;
name|WcAction
operator|.
name|WordCounts
name|expected
init|=
operator|new
name|WcAction
operator|.
name|WordCounts
argument_list|()
decl_stmt|;
name|expected
operator|.
name|wordCount
operator|=
literal|487
expr_stmt|;
name|expected
operator|.
name|lineCount
operator|=
literal|34
expr_stmt|;
name|expected
operator|.
name|charCount
operator|=
literal|3307
expr_stmt|;
name|expected
operator|.
name|byteCount
operator|=
literal|3307
expr_stmt|;
name|WcAction
operator|.
name|WordCounts
name|actual
init|=
name|getWordCounts
argument_list|(
name|stream
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|actual
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOneFile
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|WcTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|LARGE_FILE
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|WcAction
name|wcAction
init|=
operator|new
name|WcAction
argument_list|()
decl_stmt|;
name|wcAction
operator|.
name|setDefaultOptions
argument_list|()
expr_stmt|;
name|String
name|report
init|=
name|wcAction
operator|.
name|getFilesWordCountReport
argument_list|(
name|files
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A single file report should not contain a total count row"
argument_list|,
literal|"\t34\t487\t3307\tWcActionTestLarge.txt\n"
argument_list|,
name|report
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testThreeFiles
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|smallFile
init|=
operator|new
name|File
argument_list|(
name|WcTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|SMALL_FILE
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|File
name|largeFile
init|=
operator|new
name|File
argument_list|(
name|WcTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|LARGE_FILE
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|smallFile
argument_list|,
name|largeFile
argument_list|,
name|smallFile
argument_list|)
decl_stmt|;
name|WcAction
name|wcAction
init|=
operator|new
name|WcAction
argument_list|()
decl_stmt|;
name|wcAction
operator|.
name|setDefaultOptions
argument_list|()
expr_stmt|;
name|String
name|report
init|=
name|wcAction
operator|.
name|getFilesWordCountReport
argument_list|(
name|files
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A single file report should not contain a total"
argument_list|,
literal|"\t11\t12\t34\tWcActionTestSmall.txt\n"
operator|+
literal|"\t34\t487\t3307\tWcActionTestLarge.txt\n"
operator|+
literal|"\t11\t12\t34\tWcActionTestSmall.txt\n"
operator|+
literal|"\t56\t511\t3375\ttotal"
argument_list|,
name|report
argument_list|)
expr_stmt|;
block|}
specifier|public
name|WcAction
operator|.
name|WordCounts
name|getWordCounts
parameter_list|(
name|String
name|string
parameter_list|)
throws|throws
name|Exception
block|{
name|InputStream
name|inputStream
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|string
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|getWordCounts
argument_list|(
name|inputStream
argument_list|)
return|;
block|}
specifier|public
name|WcAction
operator|.
name|WordCounts
name|getWordCounts
parameter_list|(
name|InputStream
name|stream
parameter_list|)
throws|throws
name|Exception
block|{
name|WcAction
name|wcAction
init|=
operator|new
name|WcAction
argument_list|()
decl_stmt|;
name|WcAction
operator|.
name|WordCounts
name|wordCounts
init|=
name|wcAction
operator|.
name|getWordCounts
argument_list|(
name|stream
argument_list|)
decl_stmt|;
return|return
name|wordCounts
return|;
block|}
specifier|public
name|void
name|assertEquals
parameter_list|(
name|WcAction
operator|.
name|WordCounts
name|expected
parameter_list|,
name|WcAction
operator|.
name|WordCounts
name|actual
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"The expected wordCount should be equal"
argument_list|,
name|expected
operator|.
name|wordCount
argument_list|,
name|actual
operator|.
name|wordCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The expected lineCount should be equal"
argument_list|,
name|expected
operator|.
name|lineCount
argument_list|,
name|actual
operator|.
name|lineCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The expected charCount should be equal"
argument_list|,
name|expected
operator|.
name|charCount
argument_list|,
name|actual
operator|.
name|charCount
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"The expected bytecount should be equal"
argument_list|,
name|expected
operator|.
name|byteCount
argument_list|,
name|actual
operator|.
name|byteCount
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


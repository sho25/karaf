begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|api
operator|.
name|console
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
specifier|public
class|class
name|Candidate
implements|implements
name|Comparable
argument_list|<
name|Candidate
argument_list|>
block|{
specifier|private
specifier|final
name|String
name|value
decl_stmt|;
specifier|private
specifier|final
name|String
name|displ
decl_stmt|;
specifier|private
specifier|final
name|String
name|group
decl_stmt|;
specifier|private
specifier|final
name|String
name|descr
decl_stmt|;
specifier|private
specifier|final
name|String
name|suffix
decl_stmt|;
specifier|private
specifier|final
name|String
name|key
decl_stmt|;
specifier|private
specifier|final
name|boolean
name|complete
decl_stmt|;
specifier|public
name|Candidate
parameter_list|(
name|String
name|value
parameter_list|)
block|{
name|this
argument_list|(
name|value
argument_list|,
name|value
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Candidate
parameter_list|(
name|String
name|value
parameter_list|,
name|boolean
name|complete
parameter_list|)
block|{
name|this
argument_list|(
name|value
argument_list|,
name|value
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|complete
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Candidate
parameter_list|(
name|String
name|value
parameter_list|,
name|String
name|displ
parameter_list|,
name|String
name|group
parameter_list|,
name|String
name|descr
parameter_list|,
name|String
name|suffix
parameter_list|,
name|String
name|key
parameter_list|,
name|boolean
name|complete
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|this
operator|.
name|value
operator|=
name|value
expr_stmt|;
name|this
operator|.
name|displ
operator|=
name|displ
expr_stmt|;
name|this
operator|.
name|group
operator|=
name|group
expr_stmt|;
name|this
operator|.
name|descr
operator|=
name|descr
expr_stmt|;
name|this
operator|.
name|suffix
operator|=
name|suffix
expr_stmt|;
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|complete
operator|=
name|complete
expr_stmt|;
block|}
specifier|public
name|String
name|value
parameter_list|()
block|{
return|return
name|value
return|;
block|}
specifier|public
name|String
name|displ
parameter_list|()
block|{
return|return
name|displ
return|;
block|}
specifier|public
name|String
name|group
parameter_list|()
block|{
return|return
name|group
return|;
block|}
specifier|public
name|String
name|descr
parameter_list|()
block|{
return|return
name|descr
return|;
block|}
specifier|public
name|String
name|suffix
parameter_list|()
block|{
return|return
name|suffix
return|;
block|}
specifier|public
name|String
name|key
parameter_list|()
block|{
return|return
name|key
return|;
block|}
specifier|public
name|boolean
name|complete
parameter_list|()
block|{
return|return
name|complete
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|Candidate
name|o
parameter_list|)
block|{
return|return
name|value
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|value
argument_list|)
return|;
block|}
block|}
end_class

end_unit


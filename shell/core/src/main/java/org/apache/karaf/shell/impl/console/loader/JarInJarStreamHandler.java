begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *   http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|impl
operator|.
name|console
operator|.
name|loader
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLStreamHandler
import|;
end_import

begin_class
specifier|public
class|class
name|JarInJarStreamHandler
extends|extends
name|URLStreamHandler
block|{
specifier|private
name|ClassLoader
name|classLoader
decl_stmt|;
specifier|public
name|JarInJarStreamHandler
parameter_list|(
name|ClassLoader
name|classLoader
parameter_list|)
block|{
name|this
operator|.
name|classLoader
operator|=
name|classLoader
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|URLConnection
name|openConnection
parameter_list|(
name|URL
name|u
parameter_list|)
throws|throws
name|IOException
block|{
return|return
operator|new
name|JarInJarURLConnection
argument_list|(
name|u
argument_list|,
name|classLoader
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|parseURL
parameter_list|(
name|URL
name|url
parameter_list|,
name|String
name|spec
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|limit
parameter_list|)
block|{
name|String
name|file
decl_stmt|;
if|if
condition|(
name|spec
operator|.
name|startsWith
argument_list|(
name|JarInJarConstants
operator|.
name|INTERNAL_URL_PROTOCOL_WITH_COLON
argument_list|)
condition|)
name|file
operator|=
name|spec
operator|.
name|substring
argument_list|(
literal|5
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|url
operator|.
name|getFile
argument_list|()
operator|.
name|equals
argument_list|(
name|JarInJarConstants
operator|.
name|CURRENT_DIR
argument_list|)
condition|)
name|file
operator|=
name|spec
expr_stmt|;
elseif|else
if|if
condition|(
name|url
operator|.
name|getFile
argument_list|()
operator|.
name|endsWith
argument_list|(
name|JarInJarConstants
operator|.
name|PATH_SEPARATOR
argument_list|)
condition|)
name|file
operator|=
name|url
operator|.
name|getFile
argument_list|()
operator|+
name|spec
expr_stmt|;
else|else
name|file
operator|=
name|spec
expr_stmt|;
name|setURL
argument_list|(
name|url
argument_list|,
name|JarInJarConstants
operator|.
name|INTERNAL_URL_PROTOCOL
argument_list|,
literal|""
argument_list|,
operator|-
literal|1
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|file
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
expr_stmt|;
comment|//$NON-NLS-1$
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *      http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing, software  *  distributed under the License is distributed on an "AS IS" BASIS,  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *  See the License for the specific language governing permissions and  *  limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|support
operator|.
name|table
package|;
end_package

begin_class
class|class
name|StringUtil
block|{
comment|/**      * Returns length of the string.      *       * @param string String.      * @return Length.      */
specifier|public
specifier|static
name|int
name|length
parameter_list|(
name|String
name|string
parameter_list|)
block|{
return|return
name|string
operator|==
literal|null
condition|?
literal|0
else|:
name|string
operator|.
name|length
argument_list|()
return|;
block|}
comment|/**      * Utility method to repeat string.      *       * @param string String to repeat.      * @param times Number of times.      * @return Repeat string.      */
specifier|public
specifier|static
name|String
name|repeat
parameter_list|(
name|String
name|string
parameter_list|,
name|int
name|times
parameter_list|)
block|{
if|if
condition|(
name|times
operator|<=
literal|0
condition|)
block|{
return|return
literal|""
return|;
block|}
elseif|else
if|if
condition|(
name|times
operator|%
literal|2
operator|==
literal|0
condition|)
block|{
return|return
name|repeat
argument_list|(
name|string
operator|+
name|string
argument_list|,
name|times
operator|/
literal|2
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|string
operator|+
name|repeat
argument_list|(
name|string
operator|+
name|string
argument_list|,
name|times
operator|/
literal|2
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit


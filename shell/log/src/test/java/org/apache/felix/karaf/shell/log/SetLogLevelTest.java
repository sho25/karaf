begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|shell
operator|.
name|log
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|easymock
operator|.
name|EasyMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|Configuration
import|;
end_import

begin_comment
comment|/**  * Test cases for {@link SetLogLevel}  */
end_comment

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
class|class
name|SetLogLevelTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ROOT_LOGGER
init|=
literal|"log4j.rootLogger"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PACKAGE_LOGGER
init|=
literal|"log4j.logger.org.apache.karaf.test"
decl_stmt|;
specifier|private
name|SetLogLevel
name|command
decl_stmt|;
specifier|private
name|Hashtable
name|properties
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|properties
operator|.
name|clear
argument_list|()
expr_stmt|;
specifier|final
name|Configuration
name|configuration
init|=
name|EasyMock
operator|.
name|createMock
argument_list|(
name|Configuration
operator|.
name|class
argument_list|)
decl_stmt|;
name|EasyMock
operator|.
name|expect
argument_list|(
name|configuration
operator|.
name|getProperties
argument_list|()
argument_list|)
operator|.
name|andReturn
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|update
argument_list|(
name|properties
argument_list|)
expr_stmt|;
name|EasyMock
operator|.
name|replay
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|command
operator|=
operator|new
name|SetLogLevel
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|Configuration
name|getConfiguration
parameter_list|()
throws|throws
name|IOException
block|{
return|return
name|configuration
return|;
block|}
block|}
expr_stmt|;
block|}
specifier|public
name|void
name|testSetLogLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|runCommand
argument_list|(
literal|"log:set INFO org.apache.karaf.test"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INFO"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|PACKAGE_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetRootLogLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|runCommand
argument_list|(
literal|"log:set INFO"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INFO"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|ROOT_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChangeLogLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|properties
operator|.
name|put
argument_list|(
name|PACKAGE_LOGGER
argument_list|,
literal|"DEBUG"
argument_list|)
expr_stmt|;
name|runCommand
argument_list|(
literal|"log:set INFO org.apache.karaf.test"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INFO"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|PACKAGE_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChangeRootLogLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|properties
operator|.
name|put
argument_list|(
name|ROOT_LOGGER
argument_list|,
literal|"DEBUG"
argument_list|)
expr_stmt|;
name|runCommand
argument_list|(
literal|"log:set INFO"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INFO"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|ROOT_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChangeLogLevelWithAppender
parameter_list|()
throws|throws
name|Exception
block|{
name|properties
operator|.
name|put
argument_list|(
name|PACKAGE_LOGGER
argument_list|,
literal|"DEBUG, APPENDER1"
argument_list|)
expr_stmt|;
name|runCommand
argument_list|(
literal|"log:set INFO org.apache.karaf.test"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INFO, APPENDER1"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|PACKAGE_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChangeRootLogLevelWithAppender
parameter_list|()
throws|throws
name|Exception
block|{
name|properties
operator|.
name|put
argument_list|(
name|ROOT_LOGGER
argument_list|,
literal|"DEBUG, APPENDER1"
argument_list|)
expr_stmt|;
name|runCommand
argument_list|(
literal|"log:set INFO"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"INFO, APPENDER1"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|ROOT_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUnsetLogLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|properties
operator|.
name|put
argument_list|(
name|PACKAGE_LOGGER
argument_list|,
literal|"DEBUG"
argument_list|)
expr_stmt|;
name|runCommand
argument_list|(
literal|"log:set DEFAULT org.apache.karaf.test"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Configuration for logger org.apache.karaf.test has been removed"
argument_list|,
name|properties
operator|.
name|containsKey
argument_list|(
name|PACKAGE_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUnsetRootLogLevel
parameter_list|()
throws|throws
name|Exception
block|{
name|properties
operator|.
name|put
argument_list|(
name|ROOT_LOGGER
argument_list|,
literal|"INFO"
argument_list|)
expr_stmt|;
name|runCommand
argument_list|(
literal|"log:set DEFAULT"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Configuration for root logger should not be removed"
argument_list|,
literal|"INFO"
argument_list|,
name|properties
operator|.
name|get
argument_list|(
name|ROOT_LOGGER
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Simulate running the log:set command      */
specifier|private
name|void
name|runCommand
parameter_list|(
name|String
name|commandline
parameter_list|)
throws|throws
name|Exception
block|{
name|String
index|[]
name|parts
init|=
name|commandline
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
name|command
operator|.
name|level
operator|=
name|parts
index|[
literal|1
index|]
expr_stmt|;
if|if
condition|(
name|parts
operator|.
name|length
operator|==
literal|3
condition|)
block|{
name|command
operator|.
name|logger
operator|=
literal|"org.apache.karaf.test"
expr_stmt|;
block|}
name|command
operator|.
name|doExecute
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|shell
operator|.
name|log
operator|.
name|layout
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DateFormatSymbols
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|FieldPosition
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParsePosition
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TimeZone
import|;
end_import

begin_comment
comment|/**  * Copied from log4j  */
end_comment

begin_comment
comment|/**    Formats a {@link Date} in the format "dd MMM yyyy HH:mm:ss,SSS" for example,    "06 Nov 1994 15:49:37,459".     @since 0.7.5 */
end_comment

begin_class
specifier|public
class|class
name|DateTimeDateFormat
extends|extends
name|AbsoluteTimeDateFormat
block|{
name|String
index|[]
name|shortMonths
decl_stmt|;
specifier|public
name|DateTimeDateFormat
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|shortMonths
operator|=
operator|new
name|DateFormatSymbols
argument_list|()
operator|.
name|getShortMonths
argument_list|()
expr_stmt|;
block|}
specifier|public
name|DateTimeDateFormat
parameter_list|(
name|TimeZone
name|timeZone
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|setCalendar
argument_list|(
name|Calendar
operator|.
name|getInstance
argument_list|(
name|timeZone
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      Appends to<code>sbuf</code> the date in the format "dd MMM yyyy      HH:mm:ss,SSS" for example, "06 Nov 1994 08:49:37,459".       @param sbuf the string buffer to write to   */
specifier|public
name|StringBuffer
name|format
parameter_list|(
name|Date
name|date
parameter_list|,
name|StringBuffer
name|sbuf
parameter_list|,
name|FieldPosition
name|fieldPosition
parameter_list|)
block|{
name|calendar
operator|.
name|setTime
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|int
name|day
init|=
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|DAY_OF_MONTH
argument_list|)
decl_stmt|;
if|if
condition|(
name|day
operator|<
literal|10
condition|)
name|sbuf
operator|.
name|append
argument_list|(
literal|'0'
argument_list|)
expr_stmt|;
name|sbuf
operator|.
name|append
argument_list|(
name|day
argument_list|)
expr_stmt|;
name|sbuf
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|sbuf
operator|.
name|append
argument_list|(
name|shortMonths
index|[
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|MONTH
argument_list|)
index|]
argument_list|)
expr_stmt|;
name|sbuf
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|int
name|year
init|=
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|YEAR
argument_list|)
decl_stmt|;
name|sbuf
operator|.
name|append
argument_list|(
name|year
argument_list|)
expr_stmt|;
name|sbuf
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|format
argument_list|(
name|date
argument_list|,
name|sbuf
argument_list|,
name|fieldPosition
argument_list|)
return|;
block|}
comment|/**      This method does not do anything but return<code>null</code>.    */
specifier|public
name|Date
name|parse
parameter_list|(
name|java
operator|.
name|lang
operator|.
name|String
name|s
parameter_list|,
name|ParsePosition
name|pos
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|kernel
operator|.
name|gshell
operator|.
name|admin
operator|.
name|internal
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|kernel
operator|.
name|gshell
operator|.
name|admin
operator|.
name|AdminService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|kernel
operator|.
name|gshell
operator|.
name|admin
operator|.
name|AdminServiceMBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|kernel
operator|.
name|gshell
operator|.
name|admin
operator|.
name|Instance
import|;
end_import

begin_class
specifier|public
class|class
name|AdminServiceMBeanImpl
implements|implements
name|AdminServiceMBean
block|{
specifier|private
name|AdminService
name|adminService
decl_stmt|;
specifier|public
name|AdminService
name|getAdminService
parameter_list|()
block|{
return|return
name|adminService
return|;
block|}
specifier|public
name|void
name|setAdminService
parameter_list|(
name|AdminService
name|adminService
parameter_list|)
block|{
name|this
operator|.
name|adminService
operator|=
name|adminService
expr_stmt|;
block|}
specifier|public
name|void
name|createInstance
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|location
parameter_list|)
throws|throws
name|Exception
block|{
name|adminService
operator|.
name|createInstance
argument_list|(
name|name
argument_list|,
name|port
argument_list|,
name|location
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
index|[]
name|getInstances
parameter_list|()
block|{
name|Instance
index|[]
name|instances
init|=
name|adminService
operator|.
name|getInstances
argument_list|()
decl_stmt|;
name|String
index|[]
name|names
init|=
operator|new
name|String
index|[
name|instances
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|instances
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|names
index|[
name|i
index|]
operator|=
name|instances
index|[
name|i
index|]
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
return|return
name|names
return|;
block|}
specifier|public
name|int
name|getPort
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|getExistingInstance
argument_list|(
name|name
argument_list|)
operator|.
name|getPort
argument_list|()
return|;
block|}
specifier|public
name|void
name|changePort
parameter_list|(
name|String
name|name
parameter_list|,
name|int
name|port
parameter_list|)
throws|throws
name|Exception
block|{
name|getExistingInstance
argument_list|(
name|name
argument_list|)
operator|.
name|changePort
argument_list|(
name|port
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getState
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|getExistingInstance
argument_list|(
name|name
argument_list|)
operator|.
name|getState
argument_list|()
return|;
block|}
specifier|public
name|void
name|start
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|javaOpts
parameter_list|)
throws|throws
name|Exception
block|{
name|getExistingInstance
argument_list|(
name|name
argument_list|)
operator|.
name|start
argument_list|(
name|javaOpts
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|getExistingInstance
argument_list|(
name|name
argument_list|)
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|destroy
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|Exception
block|{
name|getExistingInstance
argument_list|(
name|name
argument_list|)
operator|.
name|destroy
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Instance
name|getExistingInstance
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|Instance
name|i
init|=
name|adminService
operator|.
name|getInstance
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|i
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Instance '"
operator|+
name|name
operator|+
literal|"' does not exist"
argument_list|)
throw|;
block|}
return|return
name|i
return|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|gshell
operator|.
name|core
operator|.
name|config
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|NamespaceHandlerSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|AbstractBeanDefinitionParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|ParserContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|xml
operator|.
name|BeanDefinitionParserDelegate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|AbstractBeanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|BeanDefinitionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|GenericBeanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|support
operator|.
name|ManagedList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|BeanDefinitionHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|BeanDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|config
operator|.
name|RuntimeBeanReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|BeanDefinitionStoreException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|beans
operator|.
name|factory
operator|.
name|parsing
operator|.
name|BeanComponentDefinition
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|util
operator|.
name|xml
operator|.
name|DomUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|springframework
operator|.
name|osgi
operator|.
name|service
operator|.
name|exporter
operator|.
name|support
operator|.
name|OsgiServiceFactoryBean
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|wisdom
operator|.
name|registry
operator|.
name|CommandLocationImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|wisdom
operator|.
name|command
operator|.
name|ConfigurableCommandCompleter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|wisdom
operator|.
name|command
operator|.
name|LinkImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|wisdom
operator|.
name|command
operator|.
name|AliasImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|wisdom
operator|.
name|command
operator|.
name|StatefulCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|Link
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|Alias
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|gshell
operator|.
name|core
operator|.
name|OsgiCommandRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|gshell
operator|.
name|core
operator|.
name|BeanContainerAwareProcessor
import|;
end_import

begin_class
specifier|public
class|class
name|NamespaceHandler
extends|extends
name|NamespaceHandlerSupport
block|{
specifier|public
name|void
name|init
parameter_list|()
block|{
name|registerBeanDefinitionParser
argument_list|(
name|CommandParser
operator|.
name|COMMAND_BUNDLE
argument_list|,
operator|new
name|CommandParser
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
class|class
name|CommandParser
extends|extends
name|AbstractBeanDefinitionParser
block|{
specifier|public
specifier|static
specifier|final
name|String
name|ID
init|=
name|ID_ATTRIBUTE
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DESCRIPTION
init|=
literal|"description"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PLUGIN_TEMPLATE
init|=
literal|"pluginTemplate"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ACTION
init|=
literal|"action"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ACTION_ID
init|=
literal|"actionId"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMMAND_TEMPLATE_SUFFIX
init|=
literal|"CommandTemplate"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMMAND_BUNDLE
init|=
literal|"command-bundle"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NAME
init|=
literal|"name"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LOCATION
init|=
literal|"location"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMMANDS
init|=
literal|"commands"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMMAND
init|=
literal|"command"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DOCUMENTER
init|=
literal|"documenter"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMPLETER
init|=
literal|"completer"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|COMPLETERS
init|=
literal|"completers"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|BEAN
init|=
literal|"bean"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|REF
init|=
literal|"ref"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NULL
init|=
literal|"null"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MESSAGE_SOURCE
init|=
literal|"message-source"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|MESSAGES
init|=
literal|"messages"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROTOTYPE
init|=
literal|"prototype"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ALIAS
init|=
literal|"alias"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ALIASES
init|=
literal|"aliases"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LINK
init|=
literal|"link"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|LINKS
init|=
literal|"links"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TARGET
init|=
literal|"target"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|boolean
name|shouldGenerateId
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|shouldGenerateIdAsFallback
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|protected
name|AbstractBeanDefinition
name|parseInternal
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|ParserContext
name|context
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|context
operator|!=
literal|null
assert|;
operator|new
name|Builder
argument_list|(
name|context
argument_list|)
operator|.
name|parseCommandBundle
argument_list|(
name|element
argument_list|)
expr_stmt|;
comment|// We need to return a valid bean
name|BeanDefinitionBuilder
name|dummy
init|=
name|BeanDefinitionBuilder
operator|.
name|rootBeanDefinition
argument_list|(
name|String
operator|.
name|class
argument_list|)
decl_stmt|;
return|return
name|dummy
operator|.
name|getBeanDefinition
argument_list|()
return|;
block|}
comment|/**          * Helper to build plugin related bean definitions.          */
specifier|private
class|class
name|Builder
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|ParserContext
name|context
decl_stmt|;
specifier|public
name|Builder
parameter_list|(
specifier|final
name|ParserContext
name|context
parameter_list|)
block|{
assert|assert
name|context
operator|!=
literal|null
assert|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
block|}
specifier|private
name|String
name|resolveId
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|BeanDefinition
name|def
parameter_list|)
throws|throws
name|BeanDefinitionStoreException
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|def
operator|!=
literal|null
assert|;
if|if
condition|(
name|shouldGenerateId
argument_list|()
condition|)
block|{
return|return
name|context
operator|.
name|getReaderContext
argument_list|()
operator|.
name|generateBeanName
argument_list|(
name|def
argument_list|)
return|;
block|}
name|String
name|id
init|=
name|element
operator|.
name|getAttribute
argument_list|(
name|ID_ATTRIBUTE
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|StringUtils
operator|.
name|hasText
argument_list|(
name|id
argument_list|)
operator|&&
name|shouldGenerateIdAsFallback
argument_list|()
condition|)
block|{
name|id
operator|=
name|context
operator|.
name|getReaderContext
argument_list|()
operator|.
name|generateBeanName
argument_list|(
name|def
argument_list|)
expr_stmt|;
block|}
return|return
name|id
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|}
argument_list|)
specifier|private
name|List
argument_list|<
name|Element
argument_list|>
name|getChildElements
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|name
operator|!=
literal|null
assert|;
return|return
name|DomUtils
operator|.
name|getChildElementsByTagName
argument_list|(
name|element
argument_list|,
name|name
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|}
argument_list|)
specifier|private
name|List
argument_list|<
name|Element
argument_list|>
name|getChildElements
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|String
index|[]
name|names
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|names
operator|!=
literal|null
assert|;
return|return
name|DomUtils
operator|.
name|getChildElementsByTagName
argument_list|(
name|element
argument_list|,
name|names
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"unchecked"
block|}
argument_list|)
specifier|private
name|Element
name|getChildElement
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|String
name|name
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|name
operator|!=
literal|null
assert|;
name|List
argument_list|<
name|Element
argument_list|>
name|elements
init|=
name|DomUtils
operator|.
name|getChildElementsByTagName
argument_list|(
name|element
argument_list|,
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|elements
operator|!=
literal|null
operator|&&
operator|!
name|elements
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|elements
operator|.
name|get
argument_list|(
literal|0
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|BeanDefinitionParserDelegate
name|createBeanDefinitionParserDelegate
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|BeanDefinitionParserDelegate
name|parser
init|=
operator|new
name|BeanDefinitionParserDelegate
argument_list|(
name|context
operator|.
name|getReaderContext
argument_list|()
argument_list|)
decl_stmt|;
name|parser
operator|.
name|initDefaults
argument_list|(
name|element
operator|.
name|getOwnerDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|parser
return|;
block|}
specifier|private
name|BeanDefinitionHolder
name|parseBeanDefinitionElement
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|BeanDefinitionParserDelegate
name|parser
init|=
name|createBeanDefinitionParserDelegate
argument_list|(
name|element
argument_list|)
decl_stmt|;
return|return
name|parser
operator|.
name|parseBeanDefinitionElement
argument_list|(
name|element
argument_list|)
return|;
block|}
specifier|private
name|void
name|parseAndApplyDescription
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|BeanDefinition
name|def
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|def
operator|!=
literal|null
assert|;
name|Element
name|desc
init|=
name|getChildElement
argument_list|(
name|element
argument_list|,
name|DESCRIPTION
argument_list|)
decl_stmt|;
if|if
condition|(
name|desc
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|def
operator|instanceof
name|AbstractBeanDefinition
condition|)
block|{
operator|(
operator|(
name|AbstractBeanDefinition
operator|)
name|def
operator|)
operator|.
name|setDescription
argument_list|(
name|desc
operator|.
name|getTextContent
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|parseAndApplyDescription
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|,
specifier|final
name|BeanDefinitionBuilder
name|builder
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
assert|assert
name|builder
operator|!=
literal|null
assert|;
name|parseAndApplyDescription
argument_list|(
name|element
argument_list|,
name|builder
operator|.
name|getRawBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|BeanDefinitionHolder
name|register
parameter_list|(
specifier|final
name|BeanDefinitionHolder
name|holder
parameter_list|)
block|{
assert|assert
name|holder
operator|!=
literal|null
assert|;
name|registerBeanDefinition
argument_list|(
name|holder
argument_list|,
name|context
operator|.
name|getRegistry
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|holder
return|;
block|}
specifier|private
name|BeanDefinitionHolder
name|register
parameter_list|(
specifier|final
name|BeanDefinition
name|def
parameter_list|,
specifier|final
name|String
name|id
parameter_list|)
block|{
assert|assert
name|def
operator|!=
literal|null
assert|;
assert|assert
name|id
operator|!=
literal|null
assert|;
name|BeanDefinitionHolder
name|holder
init|=
operator|new
name|BeanDefinitionHolder
argument_list|(
name|def
argument_list|,
name|id
argument_list|)
decl_stmt|;
return|return
name|register
argument_list|(
name|holder
argument_list|)
return|;
block|}
comment|//
comment|//<gshell:command-bundle>
comment|//
specifier|private
name|void
name|parseCommandBundle
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|log
operator|.
name|trace
argument_list|(
literal|"Parse command bundle; element; {}"
argument_list|,
name|element
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|containsBeanDefinition
argument_list|(
literal|"$beanContainerAwareProcessor"
argument_list|)
condition|)
block|{
name|BeanDefinitionBuilder
name|builder
init|=
name|BeanDefinitionBuilder
operator|.
name|rootBeanDefinition
argument_list|(
name|BeanContainerAwareProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|context
operator|.
name|getRegistry
argument_list|()
operator|.
name|registerBeanDefinition
argument_list|(
literal|"$beanContainerAwareProcessor"
argument_list|,
name|builder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|parseCommands
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|parseLinks
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|parseAliases
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
comment|//
comment|//<gshell:command>
comment|//
specifier|private
name|void
name|parseCommands
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|log
operator|.
name|trace
argument_list|(
literal|"Parse commands; element; {}"
argument_list|,
name|element
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|children
init|=
name|getChildElements
argument_list|(
name|element
argument_list|,
name|COMMAND
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|child
range|:
name|children
control|)
block|{
name|parseCommand
argument_list|(
name|child
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|parseCommand
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|log
operator|.
name|trace
argument_list|(
literal|"Parse command; element; {}"
argument_list|,
name|element
argument_list|)
expr_stmt|;
name|BeanDefinitionBuilder
name|command
init|=
name|BeanDefinitionBuilder
operator|.
name|genericBeanDefinition
argument_list|(
name|StatefulCommand
operator|.
name|class
argument_list|)
decl_stmt|;
name|parseAndApplyDescription
argument_list|(
name|element
argument_list|,
name|command
argument_list|)
expr_stmt|;
name|Element
name|child
decl_stmt|;
comment|// Required children elements
name|String
name|name
init|=
name|element
operator|.
name|getAttribute
argument_list|(
name|NAME
argument_list|)
decl_stmt|;
name|BeanDefinition
name|def
init|=
operator|new
name|GenericBeanDefinition
argument_list|()
decl_stmt|;
name|def
operator|.
name|setBeanClassName
argument_list|(
name|CommandLocationImpl
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|def
operator|.
name|getConstructorArgumentValues
argument_list|()
operator|.
name|addGenericArgumentValue
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|LOCATION
argument_list|,
name|def
argument_list|)
expr_stmt|;
name|child
operator|=
name|getChildElement
argument_list|(
name|element
argument_list|,
name|ACTION
argument_list|)
expr_stmt|;
name|BeanDefinitionHolder
name|action
init|=
name|parseCommandAction
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|ACTION_ID
argument_list|,
name|action
operator|.
name|getBeanName
argument_list|()
argument_list|)
expr_stmt|;
comment|// Optional children elements
name|child
operator|=
name|getChildElement
argument_list|(
name|element
argument_list|,
name|DOCUMENTER
argument_list|)
expr_stmt|;
if|if
condition|(
name|child
operator|!=
literal|null
condition|)
block|{
name|BeanDefinitionHolder
name|holder
init|=
name|parseBeanDefinitionElement
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|DOCUMENTER
argument_list|,
name|holder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BeanDefinition
name|documenter
init|=
operator|new
name|GenericBeanDefinition
argument_list|()
decl_stmt|;
name|documenter
operator|.
name|setBeanClassName
argument_list|(
literal|"org.apache.geronimo.gshell.wisdom.command.MessageSourceCommandDocumenter"
argument_list|)
expr_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|DOCUMENTER
argument_list|,
name|documenter
argument_list|)
expr_stmt|;
block|}
name|child
operator|=
name|getChildElement
argument_list|(
name|element
argument_list|,
name|COMPLETER
argument_list|)
expr_stmt|;
if|if
condition|(
name|child
operator|!=
literal|null
condition|)
block|{
name|BeanDefinitionHolder
name|holder
init|=
name|parseBeanDefinitionElement
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|COMPLETER
argument_list|,
name|holder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|child
operator|=
name|getChildElement
argument_list|(
name|element
argument_list|,
name|COMPLETERS
argument_list|)
expr_stmt|;
if|if
condition|(
name|child
operator|!=
literal|null
condition|)
block|{
name|BeanDefinitionBuilder
name|completer
init|=
name|parseCommandCompleters
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|COMPLETER
argument_list|,
name|completer
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|child
operator|=
name|getChildElement
argument_list|(
name|element
argument_list|,
name|MESSAGE_SOURCE
argument_list|)
expr_stmt|;
if|if
condition|(
name|child
operator|!=
literal|null
condition|)
block|{
name|BeanDefinitionHolder
name|holder
init|=
name|parseBeanDefinitionElement
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|MESSAGES
argument_list|,
name|holder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BeanDefinition
name|msgSource
init|=
operator|new
name|GenericBeanDefinition
argument_list|()
decl_stmt|;
name|msgSource
operator|.
name|setBeanClassName
argument_list|(
literal|"org.apache.geronimo.gshell.wisdom.command.CommandMessageSource"
argument_list|)
expr_stmt|;
name|command
operator|.
name|addPropertyValue
argument_list|(
name|MESSAGES
argument_list|,
name|msgSource
argument_list|)
expr_stmt|;
block|}
comment|//String id = resolveId(element, command.getBeanDefinition());
comment|//BeanDefinitionHolder holder = register(command.getBeanDefinition(), id);
name|BeanDefinitionBuilder
name|bd
init|=
name|BeanDefinitionBuilder
operator|.
name|genericBeanDefinition
argument_list|(
name|OsgiServiceFactoryBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|bd
operator|.
name|addPropertyReference
argument_list|(
literal|"bundleContext"
argument_list|,
literal|"bundleContext"
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"target"
argument_list|,
name|command
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"interfaces"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Command
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|OsgiCommandRegistry
operator|.
name|NAME
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"serviceProperties"
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|BeanDefinition
name|defSvc
init|=
name|bd
operator|.
name|getBeanDefinition
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|context
operator|.
name|getReaderContext
argument_list|()
operator|.
name|generateBeanName
argument_list|(
name|defSvc
argument_list|)
decl_stmt|;
name|BeanDefinitionHolder
name|holder
init|=
operator|new
name|BeanDefinitionHolder
argument_list|(
name|defSvc
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|registerBeanDefinition
argument_list|(
name|holder
argument_list|,
name|context
operator|.
name|getRegistry
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldFireEvents
argument_list|()
condition|)
block|{
name|BeanComponentDefinition
name|componentDefinition
init|=
operator|new
name|BeanComponentDefinition
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|postProcessComponentDefinition
argument_list|(
name|componentDefinition
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerComponent
argument_list|(
name|componentDefinition
argument_list|)
expr_stmt|;
block|}
block|}
comment|//
comment|//<gshell:completers>
comment|//
specifier|private
name|BeanDefinitionBuilder
name|parseCommandCompleters
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|BeanDefinitionBuilder
name|completer
init|=
name|BeanDefinitionBuilder
operator|.
name|rootBeanDefinition
argument_list|(
name|ConfigurableCommandCompleter
operator|.
name|class
argument_list|)
decl_stmt|;
name|ManagedList
name|completers
init|=
operator|new
name|ManagedList
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|children
init|=
name|getChildElements
argument_list|(
name|element
argument_list|,
operator|new
name|String
index|[]
block|{
name|BEAN
block|,
name|REF
block|,
name|NULL
block|}
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|child
range|:
name|children
control|)
block|{
if|if
condition|(
name|DomUtils
operator|.
name|nodeNameEquals
argument_list|(
name|child
argument_list|,
name|BEAN
argument_list|)
condition|)
block|{
name|BeanDefinitionHolder
name|holder
init|=
name|parseBeanDefinitionElement
argument_list|(
name|child
argument_list|)
decl_stmt|;
comment|// noinspection unchecked
name|completers
operator|.
name|add
argument_list|(
name|holder
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|DomUtils
operator|.
name|nodeNameEquals
argument_list|(
name|child
argument_list|,
name|REF
argument_list|)
condition|)
block|{
name|BeanDefinitionParserDelegate
name|parser
init|=
name|createBeanDefinitionParserDelegate
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|RuntimeBeanReference
name|ref
init|=
operator|(
name|RuntimeBeanReference
operator|)
name|parser
operator|.
name|parsePropertySubElement
argument_list|(
name|child
argument_list|,
name|completer
operator|.
name|getRawBeanDefinition
argument_list|()
argument_list|)
decl_stmt|;
comment|// noinspection unchecked
name|completers
operator|.
name|add
argument_list|(
name|ref
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|DomUtils
operator|.
name|nodeNameEquals
argument_list|(
name|child
argument_list|,
name|NULL
argument_list|)
condition|)
block|{
comment|// noinspection unchecked
name|completers
operator|.
name|add
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
name|completer
operator|.
name|addConstructorArgValue
argument_list|(
name|completers
argument_list|)
expr_stmt|;
return|return
name|completer
return|;
block|}
comment|//
comment|//<gshell:action>
comment|//
specifier|private
name|BeanDefinitionHolder
name|parseCommandAction
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|log
operator|.
name|trace
argument_list|(
literal|"Parse command action; element; {}"
argument_list|,
name|element
argument_list|)
expr_stmt|;
comment|// Construct the action
name|BeanDefinition
name|action
init|=
name|parseBeanDefinitionElement
argument_list|(
name|element
argument_list|)
operator|.
name|getBeanDefinition
argument_list|()
decl_stmt|;
comment|// All actions are configured as prototypes
name|action
operator|.
name|setScope
argument_list|(
name|PROTOTYPE
argument_list|)
expr_stmt|;
comment|// Generate id and register the bean
name|String
name|id
init|=
name|resolveId
argument_list|(
name|element
argument_list|,
name|action
argument_list|)
decl_stmt|;
return|return
name|register
argument_list|(
name|action
argument_list|,
name|id
argument_list|)
return|;
block|}
comment|//
comment|//<gshell:link>
comment|//
specifier|private
name|void
name|parseLinks
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|log
operator|.
name|trace
argument_list|(
literal|"Parse links; element; {}"
argument_list|,
name|element
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|children
init|=
name|getChildElements
argument_list|(
name|element
argument_list|,
name|LINK
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|child
range|:
name|children
control|)
block|{
name|String
name|name
init|=
name|child
operator|.
name|getAttribute
argument_list|(
name|NAME
argument_list|)
decl_stmt|;
name|String
name|target
init|=
name|child
operator|.
name|getAttribute
argument_list|(
name|TARGET
argument_list|)
decl_stmt|;
name|BeanDefinitionBuilder
name|link
init|=
name|BeanDefinitionBuilder
operator|.
name|genericBeanDefinition
argument_list|(
name|LinkImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|link
operator|.
name|addConstructorArgValue
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|link
operator|.
name|addConstructorArgValue
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|BeanDefinitionBuilder
name|bd
init|=
name|BeanDefinitionBuilder
operator|.
name|genericBeanDefinition
argument_list|(
name|OsgiServiceFactoryBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|bd
operator|.
name|addPropertyReference
argument_list|(
literal|"bundleContext"
argument_list|,
literal|"bundleContext"
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"target"
argument_list|,
name|link
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"interfaces"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Link
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|BeanDefinition
name|defSvc
init|=
name|bd
operator|.
name|getBeanDefinition
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|context
operator|.
name|getReaderContext
argument_list|()
operator|.
name|generateBeanName
argument_list|(
name|defSvc
argument_list|)
decl_stmt|;
name|BeanDefinitionHolder
name|holder
init|=
operator|new
name|BeanDefinitionHolder
argument_list|(
name|defSvc
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|registerBeanDefinition
argument_list|(
name|holder
argument_list|,
name|context
operator|.
name|getRegistry
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldFireEvents
argument_list|()
condition|)
block|{
name|BeanComponentDefinition
name|componentDefinition
init|=
operator|new
name|BeanComponentDefinition
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|postProcessComponentDefinition
argument_list|(
name|componentDefinition
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerComponent
argument_list|(
name|componentDefinition
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|//
comment|//<gshell:alias>
comment|//
specifier|private
name|void
name|parseAliases
parameter_list|(
specifier|final
name|Element
name|element
parameter_list|)
block|{
assert|assert
name|element
operator|!=
literal|null
assert|;
name|log
operator|.
name|trace
argument_list|(
literal|"Parse aliases; element; {}"
argument_list|,
name|element
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Element
argument_list|>
name|children
init|=
name|getChildElements
argument_list|(
name|element
argument_list|,
name|ALIAS
argument_list|)
decl_stmt|;
for|for
control|(
name|Element
name|child
range|:
name|children
control|)
block|{
name|String
name|name
init|=
name|child
operator|.
name|getAttribute
argument_list|(
name|NAME
argument_list|)
decl_stmt|;
name|String
name|aliasValue
init|=
name|child
operator|.
name|getAttribute
argument_list|(
name|ALIAS
argument_list|)
decl_stmt|;
name|BeanDefinitionBuilder
name|alias
init|=
name|BeanDefinitionBuilder
operator|.
name|genericBeanDefinition
argument_list|(
name|AliasImpl
operator|.
name|class
argument_list|)
decl_stmt|;
name|alias
operator|.
name|addConstructorArgValue
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|alias
operator|.
name|addConstructorArgValue
argument_list|(
name|aliasValue
argument_list|)
expr_stmt|;
name|BeanDefinitionBuilder
name|bd
init|=
name|BeanDefinitionBuilder
operator|.
name|genericBeanDefinition
argument_list|(
name|OsgiServiceFactoryBean
operator|.
name|class
argument_list|)
decl_stmt|;
name|bd
operator|.
name|addPropertyReference
argument_list|(
literal|"bundleContext"
argument_list|,
literal|"bundleContext"
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"target"
argument_list|,
name|alias
operator|.
name|getBeanDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|bd
operator|.
name|addPropertyValue
argument_list|(
literal|"interfaces"
argument_list|,
operator|new
name|Class
index|[]
block|{
name|Alias
operator|.
name|class
block|}
argument_list|)
expr_stmt|;
name|BeanDefinition
name|defSvc
init|=
name|bd
operator|.
name|getBeanDefinition
argument_list|()
decl_stmt|;
name|String
name|id
init|=
name|context
operator|.
name|getReaderContext
argument_list|()
operator|.
name|generateBeanName
argument_list|(
name|defSvc
argument_list|)
decl_stmt|;
name|BeanDefinitionHolder
name|holder
init|=
operator|new
name|BeanDefinitionHolder
argument_list|(
name|defSvc
argument_list|,
name|id
argument_list|)
decl_stmt|;
name|registerBeanDefinition
argument_list|(
name|holder
argument_list|,
name|context
operator|.
name|getRegistry
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldFireEvents
argument_list|()
condition|)
block|{
name|BeanComponentDefinition
name|componentDefinition
init|=
operator|new
name|BeanComponentDefinition
argument_list|(
name|holder
argument_list|)
decl_stmt|;
name|postProcessComponentDefinition
argument_list|(
name|componentDefinition
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerComponent
argument_list|(
name|componentDefinition
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|gshell
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|ansi
operator|.
name|AnsiBuffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|ansi
operator|.
name|AnsiCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|ansi
operator|.
name|AnsiRenderWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|application
operator|.
name|model
operator|.
name|Branding
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultBranding
extends|extends
name|Branding
block|{
specifier|private
name|String
name|prompt
decl_stmt|;
specifier|private
name|String
index|[]
name|banner
decl_stmt|;
specifier|private
name|String
name|displayName
decl_stmt|;
specifier|private
name|String
name|displayVersion
decl_stmt|;
specifier|private
name|String
name|displayLocation
decl_stmt|;
specifier|private
name|String
name|applicationName
decl_stmt|;
specifier|private
name|String
name|applicationVersion
decl_stmt|;
specifier|private
name|String
name|applicationLocation
decl_stmt|;
specifier|private
name|String
index|[]
name|defaultBanner
init|=
block|{
literal|"        __ __                  ____"
block|,
literal|"       / //_/____ __________ _/ __/"
block|,
literal|"      / ,<  / __ `/ ___/ __ `/ /_"
block|,
literal|"     / /| |/ /_/ / /  / /_/ / __/"
block|,
literal|"    /_/ |_|\\__,_/_/   \\__,_/_/"
block|}
decl_stmt|;
specifier|public
name|DefaultBranding
parameter_list|()
block|{
name|banner
operator|=
name|defaultBanner
expr_stmt|;
name|displayName
operator|=
literal|"Apache Felix Karaf"
expr_stmt|;
name|displayLocation
operator|=
literal|"http://felix.apache.org/site/apache-felix-karaf.html"
expr_stmt|;
block|}
specifier|public
name|void
name|setEmbeddedResource
parameter_list|(
name|URL
name|embeddedResource
parameter_list|)
block|{
name|Properties
name|brandProps
init|=
name|loadPropertiesFile
argument_list|(
name|embeddedResource
argument_list|)
decl_stmt|;
name|String
name|brandBanner
init|=
name|brandProps
operator|.
name|getProperty
argument_list|(
literal|"banner"
argument_list|)
decl_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|char
name|quot
init|=
literal|'"'
decl_stmt|;
name|StringTokenizer
name|st
init|=
operator|new
name|StringTokenizer
argument_list|(
name|brandBanner
argument_list|,
literal|","
argument_list|)
decl_stmt|;
name|banner
operator|=
operator|new
name|String
index|[
name|st
operator|.
name|countTokens
argument_list|()
index|]
expr_stmt|;
while|while
condition|(
name|st
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|banner
index|[
name|i
index|]
operator|=
name|st
operator|.
name|nextToken
argument_list|()
expr_stmt|;
name|banner
index|[
name|i
index|]
operator|=
name|banner
index|[
name|i
index|]
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
name|banner
index|[
name|i
index|]
operator|.
name|lastIndexOf
argument_list|(
name|quot
argument_list|)
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
name|applicationName
operator|=
name|brandProps
operator|.
name|getProperty
argument_list|(
literal|"application.name"
argument_list|)
expr_stmt|;
name|applicationVersion
operator|=
name|brandProps
operator|.
name|getProperty
argument_list|(
literal|"application.version"
argument_list|)
expr_stmt|;
name|applicationLocation
operator|=
name|brandProps
operator|.
name|getProperty
argument_list|(
literal|"application.location"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"karaf"
return|;
block|}
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
return|return
name|displayName
return|;
block|}
specifier|public
name|void
name|setVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|displayVersion
operator|=
name|version
expr_stmt|;
block|}
specifier|public
name|String
name|getVersion
parameter_list|()
block|{
return|return
name|displayVersion
return|;
block|}
specifier|public
name|String
name|getApplicationName
parameter_list|()
block|{
return|return
name|applicationName
return|;
block|}
specifier|public
name|String
name|getApplicationVersion
parameter_list|()
block|{
return|return
name|applicationVersion
return|;
block|}
specifier|public
name|String
name|getProgramName
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
specifier|public
name|String
name|getPrompt
parameter_list|()
block|{
return|return
name|prompt
return|;
block|}
specifier|public
name|void
name|setPrompt
parameter_list|(
name|String
name|prompt
parameter_list|)
block|{
name|this
operator|.
name|prompt
operator|=
name|prompt
expr_stmt|;
block|}
specifier|public
name|String
name|getAboutMessage
parameter_list|()
block|{
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|out
init|=
operator|new
name|AnsiRenderWriter
argument_list|(
name|writer
argument_list|)
decl_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"For information about @|cyan "
operator|+
name|displayName
operator|+
literal|"|, visit:"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"    @|bold "
operator|+
name|displayLocation
operator|+
literal|"| "
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
if|if
condition|(
name|applicationName
operator|!=
literal|null
operator|&&
name|applicationVersion
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|applicationName
operator|+
literal|" "
operator|+
name|applicationVersion
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
if|if
condition|(
name|applicationLocation
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|"For information about @|cyan "
operator|+
name|applicationName
operator|+
literal|"|, visit:"
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"    @|bold "
operator|+
name|applicationLocation
operator|+
literal|"| "
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|writer
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|public
name|String
name|getWelcomeMessage
parameter_list|()
block|{
name|StringWriter
name|writer
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|out
init|=
operator|new
name|AnsiRenderWriter
argument_list|(
name|writer
argument_list|)
decl_stmt|;
name|AnsiBuffer
name|buff
init|=
operator|new
name|AnsiBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|line
range|:
name|banner
control|)
block|{
name|buff
operator|.
name|attrib
argument_list|(
name|line
argument_list|,
name|AnsiCode
operator|.
name|CYAN
argument_list|)
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
name|buff
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|" @|bold "
operator|+
name|displayName
operator|+
literal|"| ("
operator|+
name|displayVersion
operator|+
literal|")"
argument_list|)
expr_stmt|;
if|if
condition|(
name|applicationName
operator|!=
literal|null
operator|&&
name|applicationVersion
operator|!=
literal|null
condition|)
block|{
name|out
operator|.
name|println
argument_list|(
literal|" @|bold "
operator|+
name|applicationName
operator|+
literal|"| ("
operator|+
name|applicationVersion
operator|+
literal|")"
argument_list|)
expr_stmt|;
block|}
name|out
operator|.
name|println
argument_list|()
expr_stmt|;
name|out
operator|.
name|println
argument_list|(
literal|"Type '@|bold help|' for more information."
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
return|return
name|writer
operator|.
name|toString
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|Properties
name|loadPropertiesFile
parameter_list|(
name|URL
name|brandPropURL
parameter_list|)
block|{
comment|// Read the properties file.
name|Properties
name|brandProps
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|InputStream
name|is
init|=
literal|null
decl_stmt|;
try|try
block|{
name|is
operator|=
name|brandPropURL
operator|.
name|openConnection
argument_list|()
operator|.
name|getInputStream
argument_list|()
expr_stmt|;
name|brandProps
operator|.
name|load
argument_list|(
name|is
argument_list|)
expr_stmt|;
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|ex
parameter_list|)
block|{
comment|// Ignore file not found.
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error loading embedded properties from "
operator|+
name|brandPropURL
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"DefaultBranding: "
operator|+
name|ex
argument_list|)
expr_stmt|;
try|try
block|{
if|if
condition|(
name|is
operator|!=
literal|null
condition|)
name|is
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex2
parameter_list|)
block|{
comment|// Nothing we can do.
block|}
return|return
literal|null
return|;
block|}
return|return
name|brandProps
return|;
block|}
block|}
end_class

end_unit


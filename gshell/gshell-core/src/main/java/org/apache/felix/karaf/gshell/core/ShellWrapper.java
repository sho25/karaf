begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|gshell
operator|.
name|core
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|shell
operator|.
name|Shell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|shell
operator|.
name|ShellContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|shell
operator|.
name|ShellContextHolder
import|;
end_import

begin_class
specifier|public
class|class
name|ShellWrapper
implements|implements
name|Shell
block|{
specifier|private
name|Shell
name|delegate
decl_stmt|;
specifier|public
name|ShellWrapper
parameter_list|(
name|Shell
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
specifier|public
name|ShellContext
name|getContext
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|getContext
argument_list|()
return|;
block|}
specifier|public
name|Object
name|execute
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|Exception
block|{
name|ShellContext
name|ctx
init|=
name|ShellContextHolder
operator|.
name|get
argument_list|(
literal|true
argument_list|)
decl_stmt|;
try|try
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|s
argument_list|)
return|;
block|}
finally|finally
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Object
name|execute
parameter_list|(
name|String
name|s
parameter_list|,
name|Object
index|[]
name|objects
parameter_list|)
throws|throws
name|Exception
block|{
name|ShellContext
name|ctx
init|=
name|ShellContextHolder
operator|.
name|get
argument_list|(
literal|true
argument_list|)
decl_stmt|;
try|try
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|s
argument_list|,
name|objects
argument_list|)
return|;
block|}
finally|finally
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Object
name|execute
parameter_list|(
name|Object
modifier|...
name|objects
parameter_list|)
throws|throws
name|Exception
block|{
name|ShellContext
name|ctx
init|=
name|ShellContextHolder
operator|.
name|get
argument_list|(
literal|true
argument_list|)
decl_stmt|;
try|try
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|execute
argument_list|(
name|objects
argument_list|)
return|;
block|}
finally|finally
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isOpened
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|isOpened
argument_list|()
return|;
block|}
specifier|public
name|void
name|close
parameter_list|()
block|{
name|delegate
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|isInteractive
parameter_list|()
block|{
return|return
name|delegate
operator|.
name|isInteractive
argument_list|()
return|;
block|}
specifier|public
name|void
name|run
parameter_list|(
name|Object
modifier|...
name|objects
parameter_list|)
throws|throws
name|Exception
block|{
name|ShellContext
name|ctx
init|=
name|ShellContextHolder
operator|.
name|get
argument_list|(
literal|true
argument_list|)
decl_stmt|;
try|try
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|run
argument_list|(
name|objects
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|ShellContextHolder
operator|.
name|set
argument_list|(
name|ctx
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


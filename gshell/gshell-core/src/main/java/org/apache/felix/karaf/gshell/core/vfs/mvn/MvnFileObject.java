begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|felix
operator|.
name|karaf
operator|.
name|gshell
operator|.
name|core
operator|.
name|vfs
operator|.
name|mvn
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|httpclient
operator|.
name|URIException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileSystemException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|URLFileName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|url
operator|.
name|UrlFileObject
import|;
end_import

begin_class
specifier|public
class|class
name|MvnFileObject
extends|extends
name|UrlFileObject
block|{
specifier|public
name|MvnFileObject
parameter_list|(
name|MvnFileSystem
name|fs
parameter_list|,
name|FileName
name|fileName
parameter_list|)
block|{
name|super
argument_list|(
name|fs
argument_list|,
name|fileName
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|URL
name|createURL
parameter_list|(
specifier|final
name|FileName
name|name
parameter_list|)
throws|throws
name|MalformedURLException
throws|,
name|FileSystemException
throws|,
name|URIException
block|{
name|String
name|url
decl_stmt|;
if|if
condition|(
name|name
operator|instanceof
name|URLFileName
condition|)
block|{
name|URLFileName
name|urlName
init|=
operator|(
name|URLFileName
operator|)
name|getName
argument_list|()
decl_stmt|;
comment|// TODO: charset
name|url
operator|=
name|urlName
operator|.
name|getURIEncoded
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|url
operator|=
name|getName
argument_list|()
operator|.
name|getURI
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|url
operator|.
name|startsWith
argument_list|(
literal|"mvn:///"
argument_list|)
condition|)
block|{
name|url
operator|=
literal|"mvn:"
operator|+
name|url
operator|.
name|substring
argument_list|(
literal|"mvn:///"
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
operator|new
name|URL
argument_list|(
name|url
argument_list|)
return|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|kernel
operator|.
name|gshell
operator|.
name|core
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|remote
operator|.
name|message
operator|.
name|LoginMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|remote
operator|.
name|server
operator|.
name|timeout
operator|.
name|TimeoutManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|remote
operator|.
name|server
operator|.
name|handler
operator|.
name|ServerSessionContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|remote
operator|.
name|server
operator|.
name|handler
operator|.
name|ServerMessageHandlerSupport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|Session
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|Variables
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_comment
comment|/**  * Server handler for {@link LoginMessage} messages.  *  * @version $Rev: 706033 $ $Date: 2008-10-19 17:36:15 +0200 (Sun, 19 Oct 2008) $  */
end_comment

begin_class
specifier|public
class|class
name|LoginHandler
extends|extends
name|ServerMessageHandlerSupport
argument_list|<
name|LoginMessage
argument_list|>
block|{
specifier|private
specifier|final
name|TimeoutManager
name|timeoutManager
decl_stmt|;
specifier|private
specifier|final
name|String
name|defaultRealm
decl_stmt|;
specifier|public
name|LoginHandler
parameter_list|(
name|TimeoutManager
name|timeoutManager
parameter_list|,
name|String
name|defaultRealm
parameter_list|)
block|{
name|super
argument_list|(
name|LoginMessage
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|timeoutManager
operator|=
name|timeoutManager
expr_stmt|;
name|this
operator|.
name|defaultRealm
operator|=
name|defaultRealm
expr_stmt|;
block|}
specifier|public
name|void
name|handle
parameter_list|(
specifier|final
name|Session
name|session
parameter_list|,
specifier|final
name|ServerSessionContext
name|context
parameter_list|,
specifier|final
name|LoginMessage
name|message
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|session
operator|!=
literal|null
assert|;
assert|assert
name|context
operator|!=
literal|null
assert|;
assert|assert
name|message
operator|!=
literal|null
assert|;
comment|// Try to cancel the timeout task
if|if
condition|(
operator|!
name|timeoutManager
operator|.
name|cancelTimeout
argument_list|(
name|session
argument_list|)
condition|)
block|{
name|log
operator|.
name|warn
argument_list|(
literal|"Aborting login processing; timeout has triggered"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|realm
init|=
name|message
operator|.
name|getRealm
argument_list|()
decl_stmt|;
if|if
condition|(
name|realm
operator|==
literal|null
condition|)
block|{
name|realm
operator|=
name|defaultRealm
expr_stmt|;
block|}
name|String
name|username
init|=
name|message
operator|.
name|getUsername
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|message
operator|.
name|getPassword
argument_list|()
decl_stmt|;
comment|//
comment|// TODO: handle security correctly
comment|// HACK: Just accept anything that is not "bogus"
comment|//
name|log
operator|.
name|debug
argument_list|(
literal|"Processing login: username='{}', password='{}'"
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
expr_stmt|;
if|if
condition|(
name|username
operator|==
literal|null
operator|||
name|username
operator|.
name|equals
argument_list|(
literal|"bogus"
argument_list|)
condition|)
block|{
name|String
name|reason
init|=
literal|"Invalid username"
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Login failed for user: {}, cause: {}"
argument_list|,
name|username
argument_list|,
name|reason
argument_list|)
expr_stmt|;
name|LoginMessage
operator|.
name|Failure
name|reply
init|=
operator|new
name|LoginMessage
operator|.
name|Failure
argument_list|(
name|reason
argument_list|)
decl_stmt|;
name|reply
operator|.
name|setCorrelationId
argument_list|(
name|message
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|send
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|password
operator|==
literal|null
operator|||
name|password
operator|.
name|equals
argument_list|(
literal|"bogus"
argument_list|)
condition|)
block|{
name|String
name|reason
init|=
literal|"Invalid password"
decl_stmt|;
name|log
operator|.
name|debug
argument_list|(
literal|"Login failed for user: {}, cause: {}"
argument_list|,
name|username
argument_list|,
name|reason
argument_list|)
expr_stmt|;
name|LoginMessage
operator|.
name|Failure
name|reply
init|=
operator|new
name|LoginMessage
operator|.
name|Failure
argument_list|(
name|reason
argument_list|)
decl_stmt|;
name|reply
operator|.
name|setCorrelationId
argument_list|(
name|message
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|send
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|context
operator|.
name|variables
operator|==
literal|null
condition|)
block|{
name|context
operator|.
name|variables
operator|=
operator|new
name|Variables
argument_list|()
expr_stmt|;
block|}
name|context
operator|.
name|variables
operator|.
name|set
argument_list|(
literal|"gshell.user"
argument_list|,
name|username
argument_list|)
expr_stmt|;
name|UUID
name|identity
init|=
name|UUID
operator|.
name|randomUUID
argument_list|()
decl_stmt|;
name|LoginMessage
operator|.
name|Success
name|reply
init|=
operator|new
name|LoginMessage
operator|.
name|Success
argument_list|(
name|identity
argument_list|)
decl_stmt|;
name|reply
operator|.
name|setCorrelationId
argument_list|(
name|message
operator|.
name|getId
argument_list|()
argument_list|)
expr_stmt|;
name|session
operator|.
name|send
argument_list|(
name|reply
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit


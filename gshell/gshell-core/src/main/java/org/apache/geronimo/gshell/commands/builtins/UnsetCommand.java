begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|commands
operator|.
name|builtins
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|DefaultVariables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|clp
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|clp
operator|.
name|Option
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|Variables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|annotation
operator|.
name|CommandComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|support
operator|.
name|OsgiCommandSupport
import|;
end_import

begin_comment
comment|/**  * Unset a variable or property.  *  * @version $Rev: 593392 $ $Date: 2007-11-09 03:14:15 +0100 (Fri, 09 Nov 2007) $  */
end_comment

begin_class
annotation|@
name|CommandComponent
argument_list|(
name|id
operator|=
literal|"gshell-builtins:unset"
argument_list|,
name|description
operator|=
literal|"Unset a variable"
argument_list|)
specifier|public
class|class
name|UnsetCommand
extends|extends
name|OsgiCommandSupport
block|{
enum|enum
name|Mode
block|{
name|VARIABLE
block|,
name|PROPERTY
block|}
annotation|@
name|Option
argument_list|(
name|name
operator|=
literal|"-m"
argument_list|,
name|aliases
operator|=
block|{
literal|"--mode"
block|}
argument_list|,
name|description
operator|=
literal|"Unset mode"
argument_list|)
specifier|private
name|Mode
name|mode
init|=
name|Mode
operator|.
name|VARIABLE
decl_stmt|;
annotation|@
name|Argument
argument_list|(
name|required
operator|=
literal|true
argument_list|,
name|description
operator|=
literal|"Variable name"
argument_list|)
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|args
decl_stmt|;
specifier|protected
name|Object
name|doExecute
parameter_list|()
throws|throws
name|Exception
block|{
for|for
control|(
name|String
name|arg
range|:
name|args
control|)
block|{
name|String
name|namevalue
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|arg
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|mode
condition|)
block|{
case|case
name|PROPERTY
case|:
name|unsetProperty
argument_list|(
name|namevalue
argument_list|)
expr_stmt|;
break|break;
case|case
name|VARIABLE
case|:
name|unsetVariable
argument_list|(
name|namevalue
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
return|return
name|SUCCESS
return|;
block|}
specifier|private
name|void
name|ensureIsIdentifier
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
if|if
condition|(
operator|!
name|DefaultVariables
operator|.
name|isIdentifier
argument_list|(
name|name
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Invalid identifer name: "
operator|+
name|name
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|unsetProperty
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Unsetting system property: {}"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|ensureIsIdentifier
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|System
operator|.
name|getProperties
argument_list|()
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|unsetVariable
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Unsetting variable: {}"
argument_list|,
name|name
argument_list|)
expr_stmt|;
name|ensureIsIdentifier
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|// Command vars always has a parent, set only makes sence when setting in parent's scope
name|Variables
name|vars
init|=
name|variables
operator|.
name|parent
argument_list|()
decl_stmt|;
name|vars
operator|.
name|unset
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


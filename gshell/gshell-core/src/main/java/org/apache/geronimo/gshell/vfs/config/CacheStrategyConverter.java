begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|vfs
operator|.
name|config
package|;
end_package

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|blueprint
operator|.
name|container
operator|.
name|Converter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|CacheStrategy
import|;
end_import

begin_class
specifier|public
class|class
name|CacheStrategyConverter
implements|implements
name|Converter
block|{
specifier|public
name|boolean
name|canConvert
parameter_list|(
name|Object
name|o
parameter_list|,
name|Object
name|type
parameter_list|)
block|{
return|return
name|o
operator|instanceof
name|String
operator|&&
name|type
operator|==
name|CacheStrategy
operator|.
name|class
return|;
block|}
specifier|public
name|Object
name|convert
parameter_list|(
name|Object
name|o
parameter_list|,
name|Object
name|type
parameter_list|)
throws|throws
name|Exception
block|{
if|if
condition|(
name|canConvert
argument_list|(
name|o
argument_list|,
name|type
argument_list|)
condition|)
block|{
name|String
name|text
init|=
name|o
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|text
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"MANUAL"
argument_list|)
condition|)
block|{
return|return
name|CacheStrategy
operator|.
name|MANUAL
return|;
block|}
elseif|else
if|if
condition|(
name|text
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"ON_RESOLVE"
argument_list|)
condition|)
block|{
return|return
name|CacheStrategy
operator|.
name|ON_RESOLVE
return|;
block|}
elseif|else
if|if
condition|(
name|text
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"ON_CALL"
argument_list|)
condition|)
block|{
return|return
name|CacheStrategy
operator|.
name|ON_CALL
return|;
block|}
else|else
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Unknown cache strategy: "
operator|+
name|text
argument_list|)
throw|;
block|}
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit


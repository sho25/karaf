begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|CommandLineBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|DefaultCommandExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|registry
operator|.
name|CommandRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|CommandExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|layout
operator|.
name|LayoutManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|shell
operator|.
name|Environment
import|;
end_import

begin_comment
comment|/**  * A simple wrapper around the DefaultCommandExecutor to avoid  * using constructor injection which causes a circular dependency  * in spring.  */
end_comment

begin_class
specifier|public
class|class
name|SpringCommandExecutor
implements|implements
name|CommandExecutor
block|{
specifier|private
name|CommandExecutor
name|executor
decl_stmt|;
specifier|private
name|LayoutManager
name|layoutManager
decl_stmt|;
specifier|private
name|CommandRegistry
name|commandRegistry
decl_stmt|;
specifier|private
name|CommandLineBuilder
name|commandLineBuilder
decl_stmt|;
specifier|private
name|Environment
name|env
decl_stmt|;
specifier|public
name|void
name|setLayoutManager
parameter_list|(
name|LayoutManager
name|layoutManager
parameter_list|)
block|{
name|this
operator|.
name|layoutManager
operator|=
name|layoutManager
expr_stmt|;
block|}
specifier|public
name|void
name|setCommandRegistry
parameter_list|(
name|CommandRegistry
name|commandRegistry
parameter_list|)
block|{
name|this
operator|.
name|commandRegistry
operator|=
name|commandRegistry
expr_stmt|;
block|}
specifier|public
name|void
name|setCommandLineBuilder
parameter_list|(
name|CommandLineBuilder
name|commandLineBuilder
parameter_list|)
block|{
name|this
operator|.
name|commandLineBuilder
operator|=
name|commandLineBuilder
expr_stmt|;
block|}
specifier|public
name|void
name|setEnv
parameter_list|(
name|Environment
name|env
parameter_list|)
block|{
name|this
operator|.
name|env
operator|=
name|env
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|()
block|{
name|executor
operator|=
operator|new
name|DefaultCommandExecutor
argument_list|(
name|layoutManager
argument_list|,
name|commandRegistry
argument_list|,
name|commandLineBuilder
argument_list|,
name|env
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|execute
parameter_list|(
name|String
name|s
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|executor
operator|.
name|execute
argument_list|(
name|s
argument_list|)
return|;
block|}
specifier|public
name|Object
name|execute
parameter_list|(
name|String
name|s
parameter_list|,
name|Object
index|[]
name|objects
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|executor
operator|.
name|execute
argument_list|(
name|s
argument_list|,
name|objects
argument_list|)
return|;
block|}
specifier|public
name|Object
name|execute
parameter_list|(
name|Object
modifier|...
name|objects
parameter_list|)
throws|throws
name|Exception
block|{
return|return
name|executor
operator|.
name|execute
argument_list|(
name|objects
argument_list|)
return|;
block|}
block|}
end_class

end_unit


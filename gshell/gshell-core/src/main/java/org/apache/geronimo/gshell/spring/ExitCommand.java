begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|spring
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|ExitNotification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|clp
operator|.
name|Argument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|Variables
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|annotation
operator|.
name|CommandComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|layout
operator|.
name|LayoutManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|support
operator|.
name|OsgiCommandSupport
import|;
end_import

begin_comment
comment|/**  * Exit the current shell.  *  * @version $Rev: 593392 $ $Date: 2007-11-09 03:14:15 +0100 (Fri, 09 Nov 2007) $  */
end_comment

begin_class
annotation|@
name|CommandComponent
argument_list|(
name|id
operator|=
literal|"gshell-builtins:exit"
argument_list|,
name|description
operator|=
literal|"Exit the (sub)shell"
argument_list|)
specifier|public
class|class
name|ExitCommand
extends|extends
name|OsgiCommandSupport
block|{
annotation|@
name|Argument
argument_list|(
name|description
operator|=
literal|"System exit code"
argument_list|)
specifier|private
name|int
name|exitCode
init|=
literal|0
decl_stmt|;
specifier|protected
name|Object
name|doExecute
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|context
operator|.
name|getVariables
argument_list|()
operator|.
name|get
argument_list|(
name|LayoutManager
operator|.
name|CURRENT_NODE
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Exiting subshell"
argument_list|)
expr_stmt|;
name|Variables
name|v
init|=
name|context
operator|.
name|getVariables
argument_list|()
decl_stmt|;
while|while
condition|(
name|v
operator|!=
literal|null
operator|&&
name|v
operator|.
name|get
argument_list|(
name|LayoutManager
operator|.
name|CURRENT_NODE
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|v
operator|.
name|unset
argument_list|(
name|LayoutManager
operator|.
name|CURRENT_NODE
argument_list|)
expr_stmt|;
name|v
operator|=
name|v
operator|.
name|parent
argument_list|()
expr_stmt|;
block|}
return|return
name|SUCCESS
return|;
block|}
else|else
block|{
name|log
operator|.
name|info
argument_list|(
literal|"Exiting w/code: {}"
argument_list|,
name|exitCode
argument_list|)
expr_stmt|;
comment|//
comment|// DO NOT Call System.exit() !!!
comment|//
throw|throw
operator|new
name|ExitNotification
argument_list|(
name|exitCode
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit


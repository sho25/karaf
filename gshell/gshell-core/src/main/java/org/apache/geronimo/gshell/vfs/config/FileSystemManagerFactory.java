begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|vfs
operator|.
name|config
package|;
end_package

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FilesCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|CacheStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileContentInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|impl
operator|.
name|DefaultFileReplicator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|impl
operator|.
name|PrivilegedFileReplicator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|impl
operator|.
name|FileContentInfoFilenameFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|cache
operator|.
name|SoftRefFilesCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|FileReplicator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|TemporaryFileStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|FileProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|url
operator|.
name|UrlFileProvider
import|;
end_import

begin_comment
comment|/**  * Factory to construct a {@link org.apache.commons.vfs.FileSystemManager} instance.  *  * @version $Rev: 707031 $ $Date: 2008-10-22 13:08:07 +0200 (Wed, 22 Oct 2008) $  */
end_comment

begin_class
specifier|public
class|class
name|FileSystemManagerFactory
block|{
specifier|private
specifier|final
name|Logger
name|log
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
specifier|private
name|FilesCache
name|filesCache
decl_stmt|;
specifier|private
name|CacheStrategy
name|cacheStrategy
init|=
name|CacheStrategy
operator|.
name|ON_RESOLVE
decl_stmt|;
specifier|private
name|FileReplicator
name|fileReplicator
decl_stmt|;
specifier|private
name|TemporaryFileStore
name|temporaryFileStore
decl_stmt|;
specifier|private
name|FileContentInfoFactory
name|fileContentInfoFactory
decl_stmt|;
specifier|private
name|FileProvider
name|defaultProvider
decl_stmt|;
comment|// FileObjectDecorator (Class/Constructor of DecoratedFileObject? or make a factory?)
specifier|public
name|void
name|setFilesCache
parameter_list|(
specifier|final
name|FilesCache
name|cache
parameter_list|)
block|{
name|this
operator|.
name|filesCache
operator|=
name|cache
expr_stmt|;
block|}
specifier|public
name|void
name|setCacheStrategy
parameter_list|(
specifier|final
name|CacheStrategy
name|strategy
parameter_list|)
block|{
name|this
operator|.
name|cacheStrategy
operator|=
name|strategy
expr_stmt|;
block|}
specifier|public
name|void
name|setFileReplicator
parameter_list|(
specifier|final
name|FileReplicator
name|replicator
parameter_list|)
block|{
name|this
operator|.
name|fileReplicator
operator|=
name|replicator
expr_stmt|;
block|}
specifier|public
name|void
name|setTemporaryFileStore
parameter_list|(
specifier|final
name|TemporaryFileStore
name|store
parameter_list|)
block|{
name|this
operator|.
name|temporaryFileStore
operator|=
name|store
expr_stmt|;
block|}
specifier|public
name|void
name|setFileContentInfoFactory
parameter_list|(
specifier|final
name|FileContentInfoFactory
name|factory
parameter_list|)
block|{
name|this
operator|.
name|fileContentInfoFactory
operator|=
name|factory
expr_stmt|;
block|}
specifier|public
name|void
name|setDefaultProvider
parameter_list|(
specifier|final
name|FileProvider
name|provider
parameter_list|)
block|{
name|this
operator|.
name|defaultProvider
operator|=
name|provider
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|()
block|{
if|if
condition|(
name|filesCache
operator|==
literal|null
condition|)
block|{
name|filesCache
operator|=
operator|new
name|SoftRefFilesCache
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|fileReplicator
operator|==
literal|null
operator|||
name|temporaryFileStore
operator|==
literal|null
condition|)
block|{
name|DefaultFileReplicator
name|replicator
init|=
operator|new
name|DefaultFileReplicator
argument_list|()
decl_stmt|;
if|if
condition|(
name|fileReplicator
operator|==
literal|null
condition|)
block|{
name|fileReplicator
operator|=
operator|new
name|PrivilegedFileReplicator
argument_list|(
name|replicator
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|temporaryFileStore
operator|==
literal|null
condition|)
block|{
name|temporaryFileStore
operator|=
name|replicator
expr_stmt|;
block|}
block|}
if|if
condition|(
name|fileContentInfoFactory
operator|==
literal|null
condition|)
block|{
name|fileContentInfoFactory
operator|=
operator|new
name|FileContentInfoFilenameFactory
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|defaultProvider
operator|==
literal|null
condition|)
block|{
name|defaultProvider
operator|=
operator|new
name|UrlFileProvider
argument_list|()
expr_stmt|;
block|}
block|}
comment|//
comment|// FactoryBean
comment|//
specifier|public
name|ConfigurableFileSystemManager
name|getFileSystemManager
parameter_list|()
throws|throws
name|Exception
block|{
name|ConfigurableFileSystemManager
name|fsm
init|=
operator|new
name|ConfigurableFileSystemManager
argument_list|()
decl_stmt|;
assert|assert
name|fileReplicator
operator|!=
literal|null
assert|;
name|log
operator|.
name|debug
argument_list|(
literal|"File replicator: {}"
argument_list|,
name|fileReplicator
argument_list|)
expr_stmt|;
name|fsm
operator|.
name|setReplicator
argument_list|(
name|fileReplicator
argument_list|)
expr_stmt|;
assert|assert
name|temporaryFileStore
operator|!=
literal|null
assert|;
name|log
operator|.
name|debug
argument_list|(
literal|"Temporary file store: {}"
argument_list|,
name|temporaryFileStore
argument_list|)
expr_stmt|;
name|fsm
operator|.
name|setTemporaryFileStore
argument_list|(
name|temporaryFileStore
argument_list|)
expr_stmt|;
assert|assert
name|filesCache
operator|!=
literal|null
assert|;
name|log
operator|.
name|debug
argument_list|(
literal|"Files cache: {}"
argument_list|,
name|filesCache
argument_list|)
expr_stmt|;
name|fsm
operator|.
name|setFilesCache
argument_list|(
name|filesCache
argument_list|)
expr_stmt|;
assert|assert
name|cacheStrategy
operator|!=
literal|null
assert|;
name|log
operator|.
name|debug
argument_list|(
literal|"Cache strategy: {}"
argument_list|,
name|cacheStrategy
argument_list|)
expr_stmt|;
name|fsm
operator|.
name|setCacheStrategy
argument_list|(
name|cacheStrategy
argument_list|)
expr_stmt|;
assert|assert
name|fileContentInfoFactory
operator|!=
literal|null
assert|;
name|log
operator|.
name|debug
argument_list|(
literal|"File content info factory: {}"
argument_list|,
name|fileContentInfoFactory
argument_list|)
expr_stmt|;
name|fsm
operator|.
name|setFileContentInfoFactory
argument_list|(
name|fileContentInfoFactory
argument_list|)
expr_stmt|;
assert|assert
name|defaultProvider
operator|!=
literal|null
assert|;
name|log
operator|.
name|debug
argument_list|(
literal|"Default provider: {}"
argument_list|,
name|defaultProvider
argument_list|)
expr_stmt|;
name|fsm
operator|.
name|setDefaultProvider
argument_list|(
name|defaultProvider
argument_list|)
expr_stmt|;
comment|// Finally init the manager
name|fsm
operator|.
name|init
argument_list|()
expr_stmt|;
return|return
name|fsm
return|;
block|}
block|}
end_class

end_unit


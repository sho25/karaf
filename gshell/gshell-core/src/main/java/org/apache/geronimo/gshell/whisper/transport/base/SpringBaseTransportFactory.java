begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|base
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|base
operator|.
name|BaseTransport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|base
operator|.
name|BaseTransportServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|Transport
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|TransportServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|whisper
operator|.
name|transport
operator|.
name|TransportFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|mina
operator|.
name|common
operator|.
name|IoHandler
import|;
end_import

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: gnodet  * Date: Dec 5, 2007  * Time: 8:09:12 PM  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|SpringBaseTransportFactory
parameter_list|<
name|T
extends|extends
name|BaseTransport
parameter_list|,
name|TC
extends|extends
name|Transport
operator|.
name|Configuration
parameter_list|,
name|S
extends|extends
name|BaseTransportServer
parameter_list|,
name|SC
extends|extends
name|TransportServer
operator|.
name|Configuration
parameter_list|>
implements|implements
name|TransportFactory
block|{
specifier|private
name|String
name|scheme
decl_stmt|;
specifier|protected
name|SpringBaseTransportFactory
parameter_list|(
name|String
name|scheme
parameter_list|)
block|{
name|this
operator|.
name|scheme
operator|=
name|scheme
expr_stmt|;
block|}
specifier|public
name|String
name|getScheme
parameter_list|()
block|{
return|return
name|scheme
return|;
block|}
comment|//
comment|// Transport (Client) Connection
comment|//
specifier|public
name|T
name|connect
parameter_list|(
specifier|final
name|URI
name|remote
parameter_list|,
specifier|final
name|URI
name|local
parameter_list|,
specifier|final
name|TC
name|config
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|remote
operator|!=
literal|null
assert|;
assert|assert
name|config
operator|!=
literal|null
assert|;
comment|// local can be null
name|T
name|transport
init|=
name|createTransport
argument_list|()
decl_stmt|;
name|transport
operator|.
name|setConfiguration
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|transport
operator|.
name|connect
argument_list|(
name|remote
argument_list|,
name|local
argument_list|)
expr_stmt|;
return|return
name|transport
return|;
block|}
specifier|public
name|T
name|connect
parameter_list|(
specifier|final
name|URI
name|remote
parameter_list|,
specifier|final
name|URI
name|local
parameter_list|,
specifier|final
name|IoHandler
name|handler
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|remote
operator|!=
literal|null
assert|;
assert|assert
name|handler
operator|!=
literal|null
assert|;
comment|// local can be null
name|T
name|transport
init|=
name|createTransport
argument_list|()
decl_stmt|;
name|transport
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|transport
operator|.
name|connect
argument_list|(
name|remote
argument_list|,
name|local
argument_list|)
expr_stmt|;
return|return
name|transport
return|;
block|}
comment|//
comment|// TransportServer Binding
comment|//
specifier|public
name|S
name|bind
parameter_list|(
specifier|final
name|URI
name|location
parameter_list|,
specifier|final
name|SC
name|config
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|location
operator|!=
literal|null
assert|;
assert|assert
name|config
operator|!=
literal|null
assert|;
name|S
name|server
init|=
name|createTransportServer
argument_list|()
decl_stmt|;
name|server
operator|.
name|setConfiguration
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|server
operator|.
name|bind
argument_list|(
name|location
argument_list|)
expr_stmt|;
return|return
name|server
return|;
block|}
specifier|public
name|S
name|bind
parameter_list|(
specifier|final
name|URI
name|location
parameter_list|,
specifier|final
name|IoHandler
name|handler
parameter_list|)
throws|throws
name|Exception
block|{
assert|assert
name|location
operator|!=
literal|null
assert|;
assert|assert
name|handler
operator|!=
literal|null
assert|;
name|S
name|server
init|=
name|createTransportServer
argument_list|()
decl_stmt|;
name|server
operator|.
name|getConfiguration
argument_list|()
operator|.
name|setHandler
argument_list|(
name|handler
argument_list|)
expr_stmt|;
name|server
operator|.
name|bind
argument_list|(
name|location
argument_list|)
expr_stmt|;
return|return
name|server
return|;
block|}
specifier|protected
specifier|abstract
name|T
name|createTransport
parameter_list|()
function_decl|;
specifier|protected
specifier|abstract
name|S
name|createTransportServer
parameter_list|()
function_decl|;
block|}
end_class

end_unit


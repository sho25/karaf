begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|commands
operator|.
name|builtins
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|jline
operator|.
name|ConsoleReader
import|;
end_import

begin_import
import|import
name|jline
operator|.
name|Terminal
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|ansi
operator|.
name|ANSI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|annotation
operator|.
name|CommandComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|command
operator|.
name|annotation
operator|.
name|Requirement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|support
operator|.
name|OsgiCommandSupport
import|;
end_import

begin_comment
comment|/**  * Clear the terminal screen.  *  * @version $Rev: 595891 $ $Date: 2007-11-17 02:23:47 +0100 (Sat, 17 Nov 2007) $  */
end_comment

begin_class
annotation|@
name|CommandComponent
argument_list|(
name|id
operator|=
literal|"gshell-builtins:clear"
argument_list|,
name|description
operator|=
literal|"Clear the terminal screen"
argument_list|)
specifier|public
class|class
name|ClearCommand
extends|extends
name|OsgiCommandSupport
block|{
annotation|@
name|Requirement
specifier|private
name|Terminal
name|terminal
decl_stmt|;
specifier|public
name|ClearCommand
parameter_list|()
block|{     }
specifier|public
name|ClearCommand
parameter_list|(
name|Terminal
name|terminal
parameter_list|)
block|{
name|this
operator|.
name|terminal
operator|=
name|terminal
expr_stmt|;
block|}
specifier|protected
name|OsgiCommandSupport
name|createCommand
parameter_list|()
throws|throws
name|Exception
block|{
return|return
operator|new
name|ClearCommand
argument_list|(
name|terminal
argument_list|)
return|;
block|}
specifier|protected
name|Object
name|doExecute
parameter_list|()
throws|throws
name|Exception
block|{
name|ConsoleReader
name|reader
init|=
operator|new
name|ConsoleReader
argument_list|(
name|io
operator|.
name|inputStream
argument_list|,
operator|new
name|PrintWriter
argument_list|(
name|io
operator|.
name|outputStream
argument_list|,
literal|true
argument_list|)
argument_list|,
comment|/*bindings*/
literal|null
argument_list|,
name|terminal
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|ANSI
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|io
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"ANSI is not enabled.  The clear command is not functional"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|reader
operator|.
name|clearScreen
argument_list|()
expr_stmt|;
return|return
name|SUCCESS
return|;
block|}
return|return
name|SUCCESS
return|;
block|}
block|}
end_class

end_unit


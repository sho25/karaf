begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|vfs
operator|.
name|provider
operator|.
name|meta
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileContentInfoFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|FileSystemException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|AbstractFileObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|vfs
operator|.
name|provider
operator|.
name|DefaultFileContent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|geronimo
operator|.
name|gshell
operator|.
name|vfs
operator|.
name|provider
operator|.
name|meta
operator|.
name|data
operator|.
name|MetaData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Meta file object.  *  * TODO: remove this file when gshell version is upgraded  *  * @version $Rev: 706033 $ $Date: 2008-10-19 17:36:15 +0200 (Sun, 19 Oct 2008) $  */
end_comment

begin_class
specifier|public
class|class
name|MetaFileObject
extends|extends
name|AbstractFileObject
block|{
specifier|private
specifier|final
name|MetaFileSystem
name|fileSystem
decl_stmt|;
specifier|private
name|MetaData
name|data
decl_stmt|;
specifier|private
name|FileContent
name|content
decl_stmt|;
specifier|public
name|MetaFileObject
parameter_list|(
specifier|final
name|FileName
name|fileName
parameter_list|,
specifier|final
name|MetaFileSystem
name|fileSystem
parameter_list|)
block|{
name|super
argument_list|(
name|fileName
argument_list|,
name|fileSystem
argument_list|)
expr_stmt|;
comment|// Save for uncasted typed access
name|this
operator|.
name|fileSystem
operator|=
name|fileSystem
expr_stmt|;
block|}
specifier|public
name|MetaData
name|getData
parameter_list|()
block|{
if|if
condition|(
name|data
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Meta data has not been attached"
argument_list|)
throw|;
block|}
return|return
name|data
return|;
block|}
annotation|@
name|Override
specifier|protected
name|FileType
name|doGetType
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|getData
argument_list|()
operator|.
name|getType
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|long
name|doGetLastModifiedTime
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|getData
argument_list|()
operator|.
name|getLastModified
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|doIsReadable
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|data
operator|.
name|getBuffer
argument_list|()
operator|!=
literal|null
return|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|doIsWriteable
parameter_list|()
throws|throws
name|Exception
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|protected
name|FileContentInfoFactory
name|getFileContentInfoFactory
parameter_list|()
block|{
return|return
name|fileSystem
operator|.
name|getFileContentInfoFactory
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|long
name|doGetContentSize
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|bytes
init|=
name|data
operator|.
name|getBuffer
argument_list|()
decl_stmt|;
return|return
name|bytes
operator|!=
literal|null
condition|?
name|bytes
operator|.
name|length
else|:
literal|0
return|;
block|}
annotation|@
name|Override
specifier|protected
name|InputStream
name|doGetInputStream
parameter_list|()
throws|throws
name|Exception
block|{
name|byte
index|[]
name|bytes
init|=
name|data
operator|.
name|getBuffer
argument_list|()
decl_stmt|;
if|if
condition|(
name|bytes
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|ByteArrayInputStream
argument_list|(
name|bytes
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|doGetAttributes
parameter_list|()
block|{
return|return
name|getData
argument_list|()
operator|.
name|getAttributes
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|doSetAttribute
parameter_list|(
specifier|final
name|String
name|name
parameter_list|,
specifier|final
name|Object
name|value
parameter_list|)
block|{
name|getData
argument_list|()
operator|.
name|getAttributes
argument_list|()
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doRemoveAttribute
parameter_list|(
specifier|final
name|String
name|name
parameter_list|)
block|{
name|getData
argument_list|()
operator|.
name|getAttributes
argument_list|()
operator|.
name|remove
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|String
index|[]
name|doListChildren
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|fileSystem
operator|.
name|listChildren
argument_list|(
name|getName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|doAttach
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|data
operator|==
literal|null
condition|)
block|{
name|data
operator|=
name|fileSystem
operator|.
name|lookupData
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
name|content
operator|=
operator|new
name|DefaultFileContent
argument_list|(
name|this
argument_list|,
name|getFileContentInfoFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|doDetach
parameter_list|()
throws|throws
name|Exception
block|{
name|data
operator|=
literal|null
expr_stmt|;
name|content
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|FileContent
name|getContent
parameter_list|()
throws|throws
name|FileSystemException
block|{
name|super
operator|.
name|getContent
argument_list|()
expr_stmt|;
return|return
name|content
return|;
block|}
block|}
end_class

end_unit


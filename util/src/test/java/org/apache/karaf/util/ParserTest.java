begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|maven
operator|.
name|Parser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|CoreMatchers
operator|.
name|equalTo
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|hamcrest
operator|.
name|MatcherAssert
operator|.
name|assertThat
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
specifier|public
class|class
name|ParserTest
block|{
specifier|private
specifier|final
specifier|static
name|String
name|PATH_WITH_CLASSIFIER
init|=
literal|"org/apache/karaf/test/1.0-SNAPSHOT/test-1.0-SNAPSHOT-feature.xml"
decl_stmt|;
specifier|private
specifier|final
specifier|static
name|String
name|PATH_WITHOUT_CLASSIFIER
init|=
literal|"org/apache/karaf/test/1.0-SNAPSHOT/test-1.0-SNAPSHOT.xml"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|parserTest
parameter_list|()
block|{
name|Map
name|parts
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|String
name|uri
init|=
name|Parser
operator|.
name|pathToMaven
argument_list|(
name|PATH_WITH_CLASSIFIER
argument_list|,
name|parts
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.apache.karaf/test/1.0-SNAPSHOT/xml/feature"
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"feature"
argument_list|,
name|parts
operator|.
name|get
argument_list|(
literal|"classifier"
argument_list|)
argument_list|)
expr_stmt|;
name|uri
operator|=
name|Parser
operator|.
name|pathToMaven
argument_list|(
name|PATH_WITHOUT_CLASSIFIER
argument_list|,
name|parts
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mvn:org.apache.karaf/test/1.0-SNAPSHOT/xml"
argument_list|,
name|uri
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|parts
operator|.
name|get
argument_list|(
literal|"classifier"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|unparserTest
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|Parser
name|p1
init|=
operator|new
name|Parser
argument_list|(
literal|"org.apache/karaf/1/xml/features"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|p1
operator|.
name|toMvnURI
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"org.apache/karaf/1/xml/features"
argument_list|)
argument_list|)
expr_stmt|;
name|Parser
name|p2
init|=
operator|new
name|Parser
argument_list|(
literal|"org.apache/karaf/1/xml"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|p2
operator|.
name|toMvnURI
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"org.apache/karaf/1/xml"
argument_list|)
argument_list|)
expr_stmt|;
name|Parser
name|p3
init|=
operator|new
name|Parser
argument_list|(
literal|"org.apache/karaf/1/jar/uber"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|p3
operator|.
name|toMvnURI
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"org.apache/karaf/1/jar/uber"
argument_list|)
argument_list|)
expr_stmt|;
name|Parser
name|p4
init|=
operator|new
name|Parser
argument_list|(
literal|"org.apache/karaf/1//uber"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|p4
operator|.
name|toMvnURI
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"org.apache/karaf/1/jar/uber"
argument_list|)
argument_list|)
expr_stmt|;
name|Parser
name|p5
init|=
operator|new
name|Parser
argument_list|(
literal|"org.apache/karaf/1/jar"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|p5
operator|.
name|toMvnURI
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"org.apache/karaf/1"
argument_list|)
argument_list|)
expr_stmt|;
name|Parser
name|p6
init|=
operator|new
name|Parser
argument_list|(
literal|"org.apache/karaf/1"
argument_list|)
decl_stmt|;
name|assertThat
argument_list|(
name|p6
operator|.
name|toMvnURI
argument_list|()
argument_list|,
name|equalTo
argument_list|(
literal|"org.apache/karaf/1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


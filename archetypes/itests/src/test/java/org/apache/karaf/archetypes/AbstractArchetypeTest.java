begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|archetypes
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|UUID
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|artifact
operator|.
name|manager
operator|.
name|WagonManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|cli
operator|.
name|ConsoleDownloadMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|embedder
operator|.
name|MavenEmbedder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|embedder
operator|.
name|MavenEmbedderConsoleLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|embedder
operator|.
name|MavenEmbedderLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|embedder
operator|.
name|PlexusLoggerAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|monitor
operator|.
name|event
operator|.
name|DefaultEventMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|monitor
operator|.
name|event
operator|.
name|EventMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|project
operator|.
name|MavenProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|codehaus
operator|.
name|plexus
operator|.
name|util
operator|.
name|FileUtils
import|;
end_import

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractArchetypeTest
extends|extends
name|TestCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|MAVEN_REPO_LOCAL
init|=
literal|"maven.repo.local"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|File
name|baseDir
init|=
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"basedir"
argument_list|,
literal|"."
argument_list|)
argument_list|)
operator|.
name|getAbsoluteFile
argument_list|()
decl_stmt|;
specifier|private
name|MavenEmbedder
name|maven
decl_stmt|;
specifier|private
name|Properties
name|sysProps
init|=
name|System
operator|.
name|getProperties
argument_list|()
decl_stmt|;
specifier|private
name|String
name|version
decl_stmt|;
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|maven
operator|=
operator|new
name|MavenEmbedder
argument_list|()
expr_stmt|;
name|maven
operator|.
name|setOffline
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
name|sysProps
operator|.
name|getProperty
argument_list|(
name|MAVEN_REPO_LOCAL
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|StringUtils
operator|.
name|isNotEmpty
argument_list|(
name|sysProps
operator|.
name|getProperty
argument_list|(
name|MAVEN_REPO_LOCAL
argument_list|)
argument_list|)
condition|)
block|{
name|maven
operator|.
name|setLocalRepositoryDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|sysProps
operator|.
name|getProperty
argument_list|(
name|MAVEN_REPO_LOCAL
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|ClassLoader
name|classLoader
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
decl_stmt|;
name|maven
operator|.
name|setClassLoader
argument_list|(
name|classLoader
argument_list|)
expr_stmt|;
name|MavenEmbedderLogger
name|logger
init|=
operator|new
name|MavenEmbedderConsoleLogger
argument_list|()
decl_stmt|;
name|maven
operator|.
name|setLogger
argument_list|(
name|logger
argument_list|)
expr_stmt|;
name|maven
operator|.
name|start
argument_list|()
expr_stmt|;
name|Field
name|f
init|=
name|maven
operator|.
name|getClass
argument_list|()
operator|.
name|getDeclaredField
argument_list|(
literal|"wagonManager"
argument_list|)
decl_stmt|;
name|f
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|WagonManager
name|wagon
init|=
operator|(
name|WagonManager
operator|)
name|f
operator|.
name|get
argument_list|(
name|maven
argument_list|)
decl_stmt|;
name|wagon
operator|.
name|setOnline
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|MavenProject
name|project
init|=
name|maven
operator|.
name|readProject
argument_list|(
operator|new
name|File
argument_list|(
name|baseDir
argument_list|,
literal|"pom.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|maven
operator|.
name|setInteractiveMode
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|version
operator|=
name|project
operator|.
name|getVersion
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|maven
operator|.
name|stop
argument_list|()
expr_stmt|;
name|maven
operator|=
literal|null
expr_stmt|;
name|System
operator|.
name|gc
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|testKarafArchetype
parameter_list|(
name|String
name|artifactId
parameter_list|)
throws|throws
name|Exception
block|{
name|testArchetype
argument_list|(
literal|"org.apache.karaf.archetypes"
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|testKarafArchetype
parameter_list|(
name|String
name|artifactId
parameter_list|,
name|Properties
name|archetypeRequiredParameters
parameter_list|)
throws|throws
name|Exception
block|{
name|testArchetype
argument_list|(
literal|"org.apache.karaf.archetypes"
argument_list|,
name|artifactId
argument_list|,
name|version
argument_list|,
name|archetypeRequiredParameters
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|testArchetype
parameter_list|(
name|String
name|groupId
parameter_list|,
name|String
name|artifactId
parameter_list|,
name|String
name|version
parameter_list|,
name|Properties
name|archetypeRequiredParameters
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|targetDir
init|=
operator|new
name|File
argument_list|(
name|baseDir
argument_list|,
literal|"target/archetypes/"
operator|+
name|artifactId
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|deleteDirectory
argument_list|(
name|targetDir
argument_list|)
expr_stmt|;
name|targetDir
operator|.
name|mkdirs
argument_list|()
expr_stmt|;
name|EventMonitor
name|eventMonitor
init|=
operator|new
name|DefaultEventMonitor
argument_list|(
operator|new
name|PlexusLoggerAdapter
argument_list|(
operator|new
name|MavenEmbedderConsoleLogger
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"archetypeGroupId"
argument_list|,
name|groupId
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"archetypeArtifactId"
argument_list|,
name|artifactId
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"archetypeVersion"
argument_list|,
name|version
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"interactiveMode"
argument_list|,
literal|"false"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"groupId"
argument_list|,
literal|"sample"
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"artifactId"
argument_list|,
name|UUID
operator|.
name|randomUUID
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"user.dir"
argument_list|,
name|targetDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
literal|"basedir"
argument_list|,
name|targetDir
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
comment|//Some archetypes require additional parameters
if|if
condition|(
name|archetypeRequiredParameters
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|Enumeration
name|e
init|=
name|archetypeRequiredParameters
operator|.
name|propertyNames
argument_list|()
init|;
name|e
operator|.
name|hasMoreElements
argument_list|()
condition|;
control|)
block|{
name|String
name|key
init|=
operator|(
name|String
operator|)
name|e
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|key
argument_list|,
name|archetypeRequiredParameters
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|MavenProject
name|parent
init|=
name|maven
operator|.
name|readProject
argument_list|(
name|getDefaultArchetypePom
argument_list|(
operator|new
name|File
argument_list|(
name|targetDir
argument_list|,
literal|"pom.xml"
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|System
operator|.
name|setProperties
argument_list|(
operator|(
name|Properties
operator|)
name|sysProps
operator|.
name|clone
argument_list|()
argument_list|)
expr_stmt|;
name|maven
operator|.
name|execute
argument_list|(
name|parent
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"archetype:generate"
argument_list|)
argument_list|,
name|eventMonitor
argument_list|,
operator|new
name|ConsoleDownloadMonitor
argument_list|()
argument_list|,
name|props
argument_list|,
name|targetDir
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperties
argument_list|(
operator|(
name|Properties
operator|)
name|sysProps
operator|.
name|clone
argument_list|()
argument_list|)
expr_stmt|;
name|targetDir
operator|=
operator|new
name|File
argument_list|(
name|targetDir
argument_list|,
name|props
operator|.
name|getProperty
argument_list|(
literal|"artifactId"
argument_list|)
argument_list|)
expr_stmt|;
name|MavenProject
name|prj
init|=
name|maven
operator|.
name|readProject
argument_list|(
operator|new
name|File
argument_list|(
name|targetDir
argument_list|,
literal|"pom.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|maven
operator|.
name|execute
argument_list|(
name|prj
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"package"
argument_list|)
argument_list|,
name|eventMonitor
argument_list|,
operator|new
name|ConsoleDownloadMonitor
argument_list|()
argument_list|,
operator|new
name|Properties
argument_list|()
argument_list|,
name|targetDir
argument_list|)
expr_stmt|;
block|}
specifier|private
name|File
name|getDefaultArchetypePom
parameter_list|(
name|File
name|pomFile
parameter_list|)
throws|throws
name|IOException
block|{
name|URL
name|archetypePom
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"archetype-pom.xml"
argument_list|)
decl_stmt|;
name|FileUtils
operator|.
name|copyURLToFile
argument_list|(
name|archetypePom
argument_list|,
name|pomFile
argument_list|)
expr_stmt|;
return|return
name|pomFile
return|;
block|}
block|}
end_class

end_unit


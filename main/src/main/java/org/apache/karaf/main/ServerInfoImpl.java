begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  *  http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|main
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|info
operator|.
name|ServerInfo
import|;
end_import

begin_class
specifier|public
class|class
name|ServerInfoImpl
implements|implements
name|ServerInfo
block|{
specifier|private
specifier|final
name|String
index|[]
name|args
decl_stmt|;
specifier|private
specifier|final
name|ConfigProperties
name|config
decl_stmt|;
specifier|public
name|ServerInfoImpl
parameter_list|(
name|String
index|[]
name|args
parameter_list|,
name|ConfigProperties
name|config
parameter_list|)
block|{
name|this
operator|.
name|args
operator|=
name|args
expr_stmt|;
name|this
operator|.
name|config
operator|=
name|config
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|File
name|getHomeDirectory
parameter_list|()
block|{
return|return
name|config
operator|.
name|karafHome
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|resolveHomePath
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
return|return
name|resolveWithBase
argument_list|(
name|config
operator|.
name|karafHome
argument_list|,
name|filename
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|File
name|resolveHome
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
return|return
name|resolveWithBase
argument_list|(
name|config
operator|.
name|karafHome
argument_list|,
name|filename
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|URI
name|resolveHome
parameter_list|(
name|URI
name|uri
parameter_list|)
block|{
return|return
name|config
operator|.
name|karafHome
operator|.
name|toURI
argument_list|()
operator|.
name|resolve
argument_list|(
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|File
name|getBaseDirectory
parameter_list|()
block|{
return|return
name|config
operator|.
name|karafBase
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|resolveBasePath
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
return|return
name|resolveWithBase
argument_list|(
name|config
operator|.
name|karafBase
argument_list|,
name|filename
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|File
name|resolveBase
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
return|return
name|resolveWithBase
argument_list|(
name|config
operator|.
name|karafBase
argument_list|,
name|filename
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|URI
name|resolveBase
parameter_list|(
name|URI
name|uri
parameter_list|)
block|{
return|return
name|config
operator|.
name|karafBase
operator|.
name|toURI
argument_list|()
operator|.
name|resolve
argument_list|(
name|uri
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|File
name|getDataDirectory
parameter_list|()
block|{
return|return
name|config
operator|.
name|karafData
return|;
block|}
annotation|@
name|Override
specifier|public
name|File
name|getInstancesDirectory
parameter_list|()
block|{
return|return
name|config
operator|.
name|karafInstances
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
index|[]
name|getArgs
parameter_list|()
block|{
return|return
name|args
operator|.
name|clone
argument_list|()
return|;
block|}
specifier|private
name|File
name|resolveWithBase
parameter_list|(
name|File
name|baseDir
parameter_list|,
name|String
name|filename
parameter_list|)
block|{
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
name|file
operator|.
name|isAbsolute
argument_list|()
condition|)
block|{
return|return
name|file
return|;
block|}
return|return
operator|new
name|File
argument_list|(
name|baseDir
argument_list|,
name|filename
argument_list|)
return|;
block|}
block|}
end_class

end_unit


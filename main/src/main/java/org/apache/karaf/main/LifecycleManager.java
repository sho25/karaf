begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|main
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStreamWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|InetAddress
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|ServerSocket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|Socket
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|main
operator|.
name|lock
operator|.
name|Lock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|main
operator|.
name|lock
operator|.
name|LockFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Bundle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|FrameworkEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|launch
operator|.
name|Framework
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|startlevel
operator|.
name|StartLevel
import|;
end_import

begin_class
specifier|public
class|class
name|LifecycleManager
extends|extends
name|Thread
block|{
name|Logger
name|LOG
init|=
name|Logger
operator|.
name|getLogger
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KARAF_SHUTDOWN_TIMEOUT
init|=
literal|"karaf.shutdown.timeout"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KARAF_SHUTDOWN_PORT
init|=
literal|"karaf.shutdown.port"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KARAF_SHUTDOWN_HOST
init|=
literal|"karaf.shutdown.host"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KARAF_SHUTDOWN_PORT_FILE
init|=
literal|"karaf.shutdown.port.file"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KARAF_SHUTDOWN_COMMAND
init|=
literal|"karaf.shutdown.command"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|KARAF_SHUTDOWN_PID_FILE
init|=
literal|"karaf.shutdown.pid.file"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_SHUTDOWN_COMMAND
init|=
literal|"SHUTDOWN"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROPERTY_LOCK_DELAY
init|=
literal|"karaf.lock.delay"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROPERTY_LOCK_LEVEL
init|=
literal|"karaf.lock.level"
decl_stmt|;
specifier|private
name|Properties
name|props
decl_stmt|;
specifier|private
name|Framework
name|framework
decl_stmt|;
specifier|private
name|int
name|shutdownTimeout
init|=
literal|5
operator|*
literal|60
operator|*
literal|1000
decl_stmt|;
specifier|private
name|ShutdownCallback
name|shutdownCallback
decl_stmt|;
specifier|private
name|boolean
name|exiting
init|=
literal|false
decl_stmt|;
specifier|private
name|Lock
name|lock
decl_stmt|;
specifier|private
name|int
name|defaultStartLevel
init|=
literal|100
decl_stmt|;
specifier|private
name|int
name|lockStartLevel
init|=
literal|1
decl_stmt|;
specifier|private
name|int
name|lockDelay
init|=
literal|1000
decl_stmt|;
specifier|public
name|LifecycleManager
parameter_list|(
name|Properties
name|props
parameter_list|,
name|Framework
name|framework
parameter_list|)
block|{
name|this
operator|.
name|props
operator|=
name|props
expr_stmt|;
name|this
operator|.
name|framework
operator|=
name|framework
expr_stmt|;
name|this
operator|.
name|shutdownTimeout
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_TIMEOUT
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|shutdownTimeout
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|defaultStartLevel
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|Constants
operator|.
name|FRAMEWORK_BEGINNING_STARTLEVEL
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|lockStartLevel
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROPERTY_LOCK_LEVEL
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|lockStartLevel
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|lockDelay
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|PROPERTY_LOCK_DELAY
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|lockDelay
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|props
operator|.
name|setProperty
argument_list|(
name|Constants
operator|.
name|FRAMEWORK_BEGINNING_STARTLEVEL
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|lockStartLevel
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setShutdownCallback
parameter_list|(
name|ShutdownCallback
name|shutdownCallback
parameter_list|)
block|{
name|this
operator|.
name|shutdownCallback
operator|=
name|shutdownCallback
expr_stmt|;
block|}
specifier|protected
name|void
name|setupShutdown
parameter_list|()
block|{
name|String
name|pidFile
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_PID_FILE
argument_list|)
decl_stmt|;
name|InstanceInfoManager
operator|.
name|writePid
argument_list|(
name|pidFile
argument_list|)
expr_stmt|;
try|try
block|{
name|int
name|port
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_PORT
argument_list|,
literal|"0"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_HOST
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|String
name|portFile
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_PORT_FILE
argument_list|)
decl_stmt|;
specifier|final
name|String
name|shutdown
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_COMMAND
argument_list|,
name|DEFAULT_SHUTDOWN_COMMAND
argument_list|)
decl_stmt|;
if|if
condition|(
name|port
operator|>=
literal|0
condition|)
block|{
name|ServerSocket
name|shutdownSocket
init|=
operator|new
name|ServerSocket
argument_list|(
name|port
argument_list|,
literal|1
argument_list|,
name|InetAddress
operator|.
name|getByName
argument_list|(
name|host
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|port
operator|==
literal|0
condition|)
block|{
name|port
operator|=
name|shutdownSocket
operator|.
name|getLocalPort
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|portFile
operator|!=
literal|null
condition|)
block|{
name|Writer
name|w
init|=
operator|new
name|OutputStreamWriter
argument_list|(
operator|new
name|FileOutputStream
argument_list|(
name|portFile
argument_list|)
argument_list|)
decl_stmt|;
name|w
operator|.
name|write
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|port
argument_list|)
argument_list|)
expr_stmt|;
name|w
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
name|Thread
name|thread
init|=
operator|new
name|ShutdownSocketThread
argument_list|(
name|shutdown
argument_list|,
name|shutdownSocket
argument_list|,
name|framework
argument_list|)
decl_stmt|;
name|thread
operator|.
name|setDaemon
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|thread
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|destroyKaraf
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|framework
operator|==
literal|null
condition|)
block|{
return|return
literal|true
return|;
block|}
try|try
block|{
name|int
name|step
init|=
literal|5000
decl_stmt|;
comment|// Notify the callback asap
if|if
condition|(
name|shutdownCallback
operator|!=
literal|null
condition|)
block|{
name|shutdownCallback
operator|.
name|waitingForShutdown
argument_list|(
name|step
argument_list|)
expr_stmt|;
block|}
comment|// Stop the framework in case it's still active
name|exiting
operator|=
literal|true
expr_stmt|;
if|if
condition|(
name|framework
operator|.
name|getState
argument_list|()
operator|==
name|Bundle
operator|.
name|ACTIVE
operator|||
name|framework
operator|.
name|getState
argument_list|()
operator|==
name|Bundle
operator|.
name|STARTING
condition|)
block|{
operator|new
name|Thread
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|framework
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BundleException
name|e
parameter_list|)
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Error stopping karaf: "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
name|int
name|timeout
init|=
name|shutdownTimeout
decl_stmt|;
if|if
condition|(
name|shutdownTimeout
operator|<=
literal|0
condition|)
block|{
name|timeout
operator|=
name|Integer
operator|.
name|MAX_VALUE
expr_stmt|;
block|}
while|while
condition|(
name|timeout
operator|>
literal|0
condition|)
block|{
name|timeout
operator|-=
name|step
expr_stmt|;
if|if
condition|(
name|shutdownCallback
operator|!=
literal|null
condition|)
block|{
name|shutdownCallback
operator|.
name|waitingForShutdown
argument_list|(
name|step
operator|*
literal|2
argument_list|)
expr_stmt|;
block|}
name|FrameworkEvent
name|event
init|=
name|framework
operator|.
name|waitForStop
argument_list|(
name|step
argument_list|)
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getType
argument_list|()
operator|!=
name|FrameworkEvent
operator|.
name|WAIT_TIMEDOUT
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
finally|finally
block|{
if|if
condition|(
name|lock
operator|!=
literal|null
condition|)
block|{
name|lock
operator|.
name|release
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|void
name|setStartLevel
parameter_list|(
name|int
name|level
parameter_list|)
throws|throws
name|Exception
block|{
name|BundleContext
name|ctx
init|=
name|framework
operator|.
name|getBundleContext
argument_list|()
decl_stmt|;
name|ServiceReference
index|[]
name|refs
init|=
name|ctx
operator|.
name|getServiceReferences
argument_list|(
name|StartLevel
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|StartLevel
name|sl
init|=
operator|(
name|StartLevel
operator|)
name|ctx
operator|.
name|getService
argument_list|(
name|refs
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|sl
operator|.
name|setStartLevel
argument_list|(
name|level
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|run
parameter_list|()
block|{
try|try
block|{
name|lock
operator|=
name|LockFactory
operator|.
name|createLock
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|boolean
name|lockLogged
init|=
literal|false
decl_stmt|;
name|setStartLevel
argument_list|(
name|lockStartLevel
argument_list|)
expr_stmt|;
while|while
condition|(
operator|!
name|exiting
condition|)
block|{
if|if
condition|(
name|lock
operator|.
name|lock
argument_list|()
condition|)
block|{
if|if
condition|(
name|lockLogged
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Lock acquired."
argument_list|)
expr_stmt|;
block|}
name|setupShutdown
argument_list|()
expr_stmt|;
name|setStartLevel
argument_list|(
name|defaultStartLevel
argument_list|)
expr_stmt|;
while|while
condition|(
name|lock
operator|.
name|isAlive
argument_list|()
condition|)
block|{
name|Thread
operator|.
name|sleep
argument_list|(
name|lockDelay
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|framework
operator|.
name|getState
argument_list|()
operator|==
name|Bundle
operator|.
name|ACTIVE
operator|&&
operator|!
name|exiting
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Lost the lock, stopping this instance ..."
argument_list|)
expr_stmt|;
name|setStartLevel
argument_list|(
name|lockStartLevel
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
operator|!
name|lockLogged
condition|)
block|{
name|LOG
operator|.
name|info
argument_list|(
literal|"Waiting for the lock ..."
argument_list|)
expr_stmt|;
name|lockLogged
operator|=
literal|true
expr_stmt|;
block|}
name|Thread
operator|.
name|sleep
argument_list|(
name|lockDelay
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|awaitShutdown
parameter_list|()
throws|throws
name|Exception
block|{
if|if
condition|(
name|framework
operator|==
literal|null
condition|)
block|{
return|return;
block|}
while|while
condition|(
literal|true
condition|)
block|{
name|FrameworkEvent
name|event
init|=
name|framework
operator|.
name|waitForStop
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getType
argument_list|()
operator|!=
name|FrameworkEvent
operator|.
name|STOPPED_UPDATE
condition|)
block|{
return|return;
block|}
block|}
block|}
comment|/** 	 * Shuts down the local instance 	 * @param props 	 * @throws IOException 	 */
specifier|public
specifier|static
name|void
name|shutDown
parameter_list|(
name|Properties
name|props
parameter_list|)
throws|throws
name|IOException
block|{
name|int
name|port
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_PORT
argument_list|,
literal|"0"
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|host
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_HOST
argument_list|,
literal|"localhost"
argument_list|)
decl_stmt|;
name|String
name|portFile
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_PORT_FILE
argument_list|)
decl_stmt|;
name|String
name|shutdown
init|=
name|props
operator|.
name|getProperty
argument_list|(
name|KARAF_SHUTDOWN_COMMAND
argument_list|,
name|DEFAULT_SHUTDOWN_COMMAND
argument_list|)
decl_stmt|;
if|if
condition|(
name|port
operator|==
literal|0
operator|&&
name|portFile
operator|!=
literal|null
condition|)
block|{
name|BufferedReader
name|r
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
operator|new
name|FileInputStream
argument_list|(
name|portFile
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|portStr
init|=
name|r
operator|.
name|readLine
argument_list|()
decl_stmt|;
name|port
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|portStr
argument_list|)
expr_stmt|;
name|r
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|port
operator|>
literal|0
condition|)
block|{
name|Socket
name|s
init|=
operator|new
name|Socket
argument_list|(
name|host
argument_list|,
name|port
argument_list|)
decl_stmt|;
name|s
operator|.
name|getOutputStream
argument_list|()
operator|.
name|write
argument_list|(
name|shutdown
operator|.
name|getBytes
argument_list|()
argument_list|)
expr_stmt|;
name|s
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|System
operator|.
name|err
operator|.
name|println
argument_list|(
literal|"Unable to find port..."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


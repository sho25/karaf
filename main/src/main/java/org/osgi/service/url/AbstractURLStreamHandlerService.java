begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (c) OSGi Alliance (2002, 2010). All Rights Reserved.  *   * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|url
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Abstract implementation of the {@code URLStreamHandlerService}  * interface. All the methods simply invoke the corresponding methods on  * {@code java.net.URLStreamHandler} except for {@code parseURL}  * and {@code setURL}, which use the {@code URLStreamHandlerSetter}  * parameter. Subclasses of this abstract class should not need to override the  * {@code setURL} and {@code parseURL(URLStreamHandlerSetter,...)}  * methods.  *   * @ThreadSafe  * @version $Id: 465a0ed86f5d49b338ffc6a13bb68f60f04e54d6 $  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|AbstractURLStreamHandlerService
extends|extends
name|URLStreamHandler
implements|implements
name|URLStreamHandlerService
block|{
comment|/** 	 * @see "java.net.URLStreamHandler.openConnection" 	 */
specifier|public
specifier|abstract
name|URLConnection
name|openConnection
parameter_list|(
name|URL
name|u
parameter_list|)
throws|throws
name|java
operator|.
name|io
operator|.
name|IOException
function_decl|;
comment|/** 	 * The {@code URLStreamHandlerSetter} object passed to the parseURL 	 * method. 	 */
specifier|protected
specifier|volatile
name|URLStreamHandlerSetter
name|realHandler
decl_stmt|;
comment|/** 	 * Parse a URL using the {@code URLStreamHandlerSetter} object. This 	 * method sets the {@code realHandler} field with the specified 	 * {@code URLStreamHandlerSetter} object and then calls 	 * {@code parseURL(URL,String,int,int)}. 	 *  	 * @param realHandler The object on which the {@code setURL} method 	 *        must be invoked for the specified URL. 	 * @see "java.net.URLStreamHandler.parseURL" 	 */
specifier|public
name|void
name|parseURL
parameter_list|(
name|URLStreamHandlerSetter
name|realHandler
parameter_list|,
name|URL
name|u
parameter_list|,
name|String
name|spec
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|limit
parameter_list|)
block|{
name|this
operator|.
name|realHandler
operator|=
name|realHandler
expr_stmt|;
name|parseURL
argument_list|(
name|u
argument_list|,
name|spec
argument_list|,
name|start
argument_list|,
name|limit
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * This method calls {@code super.toExternalForm}. 	 *  	 * @see "java.net.URLStreamHandler.toExternalForm" 	 */
specifier|public
name|String
name|toExternalForm
parameter_list|(
name|URL
name|u
parameter_list|)
block|{
return|return
name|super
operator|.
name|toExternalForm
argument_list|(
name|u
argument_list|)
return|;
block|}
comment|/** 	 * This method calls {@code super.equals(URL,URL)}. 	 *  	 * @see "java.net.URLStreamHandler.equals(URL,URL)" 	 */
specifier|public
name|boolean
name|equals
parameter_list|(
name|URL
name|u1
parameter_list|,
name|URL
name|u2
parameter_list|)
block|{
return|return
name|super
operator|.
name|equals
argument_list|(
name|u1
argument_list|,
name|u2
argument_list|)
return|;
block|}
comment|/** 	 * This method calls {@code super.getDefaultPort}. 	 *  	 * @see "java.net.URLStreamHandler.getDefaultPort" 	 */
specifier|public
name|int
name|getDefaultPort
parameter_list|()
block|{
return|return
name|super
operator|.
name|getDefaultPort
argument_list|()
return|;
block|}
comment|/** 	 * This method calls {@code super.getHostAddress}. 	 *  	 * @see "java.net.URLStreamHandler.getHostAddress" 	 */
specifier|public
name|InetAddress
name|getHostAddress
parameter_list|(
name|URL
name|u
parameter_list|)
block|{
return|return
name|super
operator|.
name|getHostAddress
argument_list|(
name|u
argument_list|)
return|;
block|}
comment|/** 	 * This method calls {@code super.hashCode(URL)}. 	 *  	 * @see "java.net.URLStreamHandler.hashCode(URL)" 	 */
specifier|public
name|int
name|hashCode
parameter_list|(
name|URL
name|u
parameter_list|)
block|{
return|return
name|super
operator|.
name|hashCode
argument_list|(
name|u
argument_list|)
return|;
block|}
comment|/** 	 * This method calls {@code super.hostsEqual}. 	 *  	 * @see "java.net.URLStreamHandler.hostsEqual" 	 */
specifier|public
name|boolean
name|hostsEqual
parameter_list|(
name|URL
name|u1
parameter_list|,
name|URL
name|u2
parameter_list|)
block|{
return|return
name|super
operator|.
name|hostsEqual
argument_list|(
name|u1
argument_list|,
name|u2
argument_list|)
return|;
block|}
comment|/** 	 * This method calls {@code super.sameFile}. 	 *  	 * @see "java.net.URLStreamHandler.sameFile" 	 */
specifier|public
name|boolean
name|sameFile
parameter_list|(
name|URL
name|u1
parameter_list|,
name|URL
name|u2
parameter_list|)
block|{
return|return
name|super
operator|.
name|sameFile
argument_list|(
name|u1
argument_list|,
name|u2
argument_list|)
return|;
block|}
comment|/** 	 * This method calls 	 * {@code realHandler.setURL(URL,String,String,int,String,String)}. 	 *  	 * @see "java.net.URLStreamHandler.setURL(URL,String,String,int,String,String)" 	 * @deprecated This method is only for compatibility with handlers written 	 *             for JDK 1.1. 	 */
specifier|protected
name|void
name|setURL
parameter_list|(
name|URL
name|u
parameter_list|,
name|String
name|proto
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|file
parameter_list|,
name|String
name|ref
parameter_list|)
block|{
name|realHandler
operator|.
name|setURL
argument_list|(
name|u
argument_list|,
name|proto
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|file
argument_list|,
name|ref
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * This method calls 	 * {@code realHandler.setURL(URL,String,String,int,String,String,String,String)}. 	 *  	 * @see "java.net.URLStreamHandler.setURL(URL,String,String,int,String,String,String,String)" 	 */
specifier|protected
name|void
name|setURL
parameter_list|(
name|URL
name|u
parameter_list|,
name|String
name|proto
parameter_list|,
name|String
name|host
parameter_list|,
name|int
name|port
parameter_list|,
name|String
name|auth
parameter_list|,
name|String
name|user
parameter_list|,
name|String
name|path
parameter_list|,
name|String
name|query
parameter_list|,
name|String
name|ref
parameter_list|)
block|{
name|realHandler
operator|.
name|setURL
argument_list|(
name|u
argument_list|,
name|proto
argument_list|,
name|host
argument_list|,
name|port
argument_list|,
name|auth
argument_list|,
name|user
argument_list|,
name|path
argument_list|,
name|query
argument_list|,
name|ref
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


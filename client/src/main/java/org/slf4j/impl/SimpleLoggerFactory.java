begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  * Copyright (c) 2004-2011 QOS.ch  * All rights reserved.  *  * Permission is hereby granted, free  of charge, to any person obtaining  * a  copy  of this  software  and  associated  documentation files  (the  * "Software"), to  deal in  the Software without  restriction, including  * without limitation  the rights to  use, copy, modify,  merge, publish,  * distribute,  sublicense, and/or sell  copies of  the Software,  and to  * permit persons to whom the Software  is furnished to do so, subject to  * the following conditions:  *  * The  above  copyright  notice  and  this permission  notice  shall  be  * included in all copies or substantial portions of the Software.  *  * THE  SOFTWARE IS  PROVIDED  "AS  IS", WITHOUT  WARRANTY  OF ANY  KIND,  * EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF  * MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE  * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION  * OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION  * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.  *  */
end_comment

begin_package
package|package
name|org
operator|.
name|slf4j
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|ILoggerFactory
import|;
end_import

begin_comment
comment|/**  * An implementation of {@link ILoggerFactory} which always returns  * {@link SimpleLogger} instances.  *   * @author Ceki G&uuml;lc&uuml;  */
end_comment

begin_class
specifier|public
class|class
name|SimpleLoggerFactory
implements|implements
name|ILoggerFactory
block|{
specifier|final
specifier|static
name|SimpleLoggerFactory
name|INSTANCE
init|=
operator|new
name|SimpleLoggerFactory
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Logger
argument_list|>
name|loggerMap
decl_stmt|;
specifier|public
name|SimpleLoggerFactory
parameter_list|()
block|{
name|loggerMap
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Logger
argument_list|>
argument_list|()
expr_stmt|;
block|}
comment|/**    * Return an appropriate {@link SimpleLogger} instance by name.    */
specifier|public
name|Logger
name|getLogger
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|Logger
name|slogger
init|=
literal|null
decl_stmt|;
comment|// protect against concurrent access of the loggerMap
synchronized|synchronized
init|(
name|this
init|)
block|{
name|slogger
operator|=
operator|(
name|Logger
operator|)
name|loggerMap
operator|.
name|get
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|slogger
operator|==
literal|null
condition|)
block|{
name|slogger
operator|=
operator|new
name|SimpleLogger
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|loggerMap
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|slogger
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|slogger
return|;
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jms
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|openmbean
operator|.
name|TabularData
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * JMS MBean.  */
end_comment

begin_interface
specifier|public
interface|interface
name|JmsMBean
block|{
comment|/**      * List the JMS connection factories.      *      * @return the list of the JMS connection factories name.      * @throws MBeanException      */
name|List
argument_list|<
name|String
argument_list|>
name|getConnectionfactories
parameter_list|()
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Create a JMS connection factory.      *      * @param name the JMS connection factory name.      * @param type the JMS connection factory type (ActiveMQ or WebsphereMQ).      * @param url the JMS connection factory URL. NB: when type is WebsphereMQ, the URL has the format host/port/queuemanager/channel.      * @throws MBeanException      */
name|void
name|create
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|type
parameter_list|,
name|String
name|url
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Delete a JMS connection factory.      *      * @param name the JMS connection factory name.      * @throws MBeanException      */
name|void
name|delete
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Get details about a JMS connection factory.      *      * @param connectionFactory the JMS connection factory name.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return a map (property/value) containing details.      * @throws MBeanException      */
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|info
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Count the messages on a given JMS queue.      *      * @param connectionFactory the JMS connection factory name.      * @param queue the JMS queue name.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return      * @throws MBeanException      */
name|int
name|count
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|queue
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * List the JMS queues.      *      * @param connectionFactory the JMS connection factory name.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return the list of JMS queues.      * @throws MBeanException      */
name|List
argument_list|<
name|String
argument_list|>
name|queues
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * List the JMS topics.      *      * @param connectionFactory the JMS connection factory name.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return the list of JMS topics.      * @throws MBeanException      */
name|List
argument_list|<
name|String
argument_list|>
name|topics
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Browse the messages in a JMS queue.      *      * @param connectionFactory the JMS connection factory name.      * @param queue the JMS queue name.      * @param selector a selector to use to browse only certain messages.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return a tabular data with messages details.      * @throws MBeanException      */
name|TabularData
name|browse
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|queue
parameter_list|,
name|String
name|selector
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Send a JMS message to given queue.      *      * @param connectionFactory the JMS connection factory name.      * @param queue the JMS queue name.      * @param content the message content.      * @param replyTo the message ReplyTo.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @throws MBeanException      */
name|void
name|send
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|queue
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|replyTo
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Consume JMS messages from a given queue.      *      * @param connectionFactory the JMS connection factory name.      * @param queue the JMS queue name.      * @param selector a selector to use to consume only certain messages.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return the number of messages consumed.      * @throws MBeanException      */
name|int
name|consume
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|queue
parameter_list|,
name|String
name|selector
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
comment|/**      * Move JMS messages from one queue to another.      *      * @param connectionFactory the JMS connection factory name.      * @param source the source JMS queue name.      * @param destination the destination JMS queue name.      * @param selector a selector to move only certain messages.      * @param username optional username to connect to the JMS broker.      * @param password optional password to connect to the JMS broker.      * @return the number of messages moved.      * @throws MBeanException      */
name|int
name|move
parameter_list|(
name|String
name|connectionFactory
parameter_list|,
name|String
name|source
parameter_list|,
name|String
name|destination
parameter_list|,
name|String
name|selector
parameter_list|,
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|MBeanException
function_decl|;
block|}
end_interface

end_unit


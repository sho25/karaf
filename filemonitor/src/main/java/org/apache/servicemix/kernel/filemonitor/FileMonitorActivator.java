begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/**  *  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|servicemix
operator|.
name|kernel
operator|.
name|filemonitor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Dictionary
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedServiceFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|packageadmin
operator|.
name|PackageAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|prefs
operator|.
name|PreferencesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_comment
comment|/**  * Inspired by<a href="http://www.aqute.biz/Code/FileInstall">FileInstall</a>  * by Peter Kriens.  *   * @version $Revision: 1.1 $  */
end_comment

begin_class
specifier|public
class|class
name|FileMonitorActivator
implements|implements
name|BundleActivator
implements|,
name|ManagedServiceFactory
block|{
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FileMonitorActivator
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
name|BundleContext
name|context
decl_stmt|;
specifier|private
name|ServiceTracker
name|packageAdminTracker
decl_stmt|;
specifier|private
name|ServiceTracker
name|configurationAdminTracker
decl_stmt|;
specifier|private
name|ServiceTracker
name|preferenceServiceTracker
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|FileMonitor
argument_list|>
name|fileMonitors
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|FileMonitor
argument_list|>
argument_list|()
decl_stmt|;
comment|// BundleActivator interface
comment|// -------------------------------------------------------------------------
specifier|public
name|void
name|start
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|Hashtable
name|properties
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVICE_PID
argument_list|,
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|registerService
argument_list|(
name|ManagedServiceFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|this
argument_list|,
name|properties
argument_list|)
expr_stmt|;
name|packageAdminTracker
operator|=
operator|new
name|ServiceTracker
argument_list|(
name|context
argument_list|,
name|PackageAdmin
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|packageAdminTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|configurationAdminTracker
operator|=
operator|new
name|ServiceTracker
argument_list|(
name|context
argument_list|,
name|ConfigurationAdmin
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|configurationAdminTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|preferenceServiceTracker
operator|=
operator|new
name|ServiceTracker
argument_list|(
name|context
argument_list|,
name|PreferencesService
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|preferenceServiceTracker
operator|.
name|open
argument_list|()
expr_stmt|;
name|Hashtable
name|initialProperties
init|=
operator|new
name|Hashtable
argument_list|()
decl_stmt|;
name|setPropertiesFromContext
argument_list|(
name|initialProperties
argument_list|,
name|FileMonitor
operator|.
name|CONFIG_DIR
argument_list|,
name|FileMonitor
operator|.
name|DEPLOY_DIR
argument_list|,
name|FileMonitor
operator|.
name|GENERATED_JAR_DIR
argument_list|,
name|FileMonitor
operator|.
name|SCAN_INTERVAL
argument_list|)
expr_stmt|;
name|updated
argument_list|(
literal|"initialPid"
argument_list|,
name|initialProperties
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|FileMonitor
argument_list|>
name|fileMonitors
init|=
name|this
operator|.
name|fileMonitors
operator|.
name|values
argument_list|()
decl_stmt|;
for|for
control|(
name|FileMonitor
name|monitor
range|:
name|fileMonitors
control|)
block|{
try|try
block|{
comment|// stop the monitor
name|monitor
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// Ignore
block|}
block|}
name|this
operator|.
name|fileMonitors
operator|.
name|clear
argument_list|()
expr_stmt|;
name|preferenceServiceTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|configurationAdminTracker
operator|.
name|close
argument_list|()
expr_stmt|;
name|packageAdminTracker
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
comment|// ManagedServiceFactory interface
comment|// -------------------------------------------------------------------------
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"org.apache.servicemix.kernel.filemonitor.FileMonitor"
return|;
block|}
specifier|public
name|void
name|updated
parameter_list|(
name|String
name|pid
parameter_list|,
name|Dictionary
name|properties
parameter_list|)
throws|throws
name|ConfigurationException
block|{
name|deleted
argument_list|(
name|pid
argument_list|)
expr_stmt|;
name|FileMonitor
name|monitor
init|=
operator|new
name|FileMonitor
argument_list|(
name|this
argument_list|,
name|properties
argument_list|,
name|pid
argument_list|)
decl_stmt|;
name|fileMonitors
operator|.
name|put
argument_list|(
name|pid
argument_list|,
name|monitor
argument_list|)
expr_stmt|;
name|monitor
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|deleted
parameter_list|(
name|String
name|pid
parameter_list|)
block|{
name|FileMonitor
name|monitor
init|=
name|fileMonitors
operator|.
name|remove
argument_list|(
name|pid
argument_list|)
decl_stmt|;
if|if
condition|(
name|monitor
operator|!=
literal|null
condition|)
block|{
name|monitor
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
block|}
comment|// Properties
comment|// -------------------------------------------------------------------------
specifier|public
name|BundleContext
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
specifier|public
name|ServiceTracker
name|getConfigurationAdminTracker
parameter_list|()
block|{
return|return
name|configurationAdminTracker
return|;
block|}
specifier|public
name|ServiceTracker
name|getPackageAdminTracker
parameter_list|()
block|{
return|return
name|packageAdminTracker
return|;
block|}
specifier|public
name|ConfigurationAdmin
name|getConfigurationAdmin
parameter_list|()
block|{
return|return
operator|(
name|ConfigurationAdmin
operator|)
name|getConfigurationAdminTracker
argument_list|()
operator|.
name|getService
argument_list|()
return|;
block|}
specifier|public
name|ServiceTracker
name|getPreferenceServiceTracker
parameter_list|()
block|{
return|return
name|preferenceServiceTracker
return|;
block|}
comment|// Implementation methods
comment|// -------------------------------------------------------------------------
specifier|protected
name|void
name|setPropertiesFromContext
parameter_list|(
name|Hashtable
name|properties
parameter_list|,
name|String
modifier|...
name|keys
parameter_list|)
block|{
for|for
control|(
name|String
name|key
range|:
name|keys
control|)
block|{
name|Object
name|value
init|=
name|context
operator|.
name|getProperty
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|!=
literal|null
condition|)
block|{
name|properties
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit


begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|jpa
operator|.
name|hibernate
operator|.
name|impl
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|management
operator|.
name|MBeanServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|BundleContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|framework
operator|.
name|ServiceReference
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTracker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|util
operator|.
name|tracker
operator|.
name|ServiceTrackerCustomizer
import|;
end_import

begin_comment
comment|/**  * Track MBeanServer service and manage one StatisticsPublisher for each MBeanServer  */
end_comment

begin_class
specifier|public
class|class
name|Activator
implements|implements
name|BundleActivator
implements|,
name|ServiceTrackerCustomizer
argument_list|<
name|MBeanServer
argument_list|,
name|MBeanServer
argument_list|>
block|{
specifier|private
name|ServiceTracker
argument_list|<
name|MBeanServer
argument_list|,
name|MBeanServer
argument_list|>
name|mbeanServerTracker
decl_stmt|;
specifier|private
name|StatisticsPublisher
name|publisher
decl_stmt|;
specifier|private
name|BundleContext
name|context
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|start
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|mbeanServerTracker
operator|=
operator|new
name|ServiceTracker
argument_list|<>
argument_list|(
name|context
argument_list|,
name|MBeanServer
operator|.
name|class
argument_list|,
name|this
argument_list|)
expr_stmt|;
name|mbeanServerTracker
operator|.
name|open
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|stop
parameter_list|(
name|BundleContext
name|context
parameter_list|)
throws|throws
name|Exception
block|{
name|mbeanServerTracker
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|MBeanServer
name|addingService
parameter_list|(
name|ServiceReference
argument_list|<
name|MBeanServer
argument_list|>
name|reference
parameter_list|)
block|{
name|MBeanServer
name|mbeanServer
init|=
name|context
operator|.
name|getService
argument_list|(
name|reference
argument_list|)
decl_stmt|;
name|publisher
operator|=
operator|new
name|StatisticsPublisher
argument_list|(
name|context
argument_list|,
name|mbeanServer
argument_list|)
expr_stmt|;
name|publisher
operator|.
name|start
argument_list|()
expr_stmt|;
return|return
name|mbeanServer
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|modifiedService
parameter_list|(
name|ServiceReference
argument_list|<
name|MBeanServer
argument_list|>
name|reference
parameter_list|,
name|MBeanServer
name|service
parameter_list|)
block|{     }
annotation|@
name|Override
specifier|public
name|void
name|removedService
parameter_list|(
name|ServiceReference
argument_list|<
name|MBeanServer
argument_list|>
name|reference
parameter_list|,
name|MBeanServer
name|service
parameter_list|)
block|{
if|if
condition|(
name|publisher
operator|!=
literal|null
condition|)
block|{
name|publisher
operator|.
name|stop
argument_list|()
expr_stmt|;
name|publisher
operator|=
literal|null
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit


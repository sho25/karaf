begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  *      http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|internal
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|LogEventFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|LogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|internal
operator|.
name|LogEventFormatterImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|internal
operator|.
name|LogMBeanImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|internal
operator|.
name|LogServiceImpl
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|log
operator|.
name|core
operator|.
name|internal
operator|.
name|LruList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|util
operator|.
name|tracker
operator|.
name|BaseActivator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|ops4j
operator|.
name|pax
operator|.
name|logging
operator|.
name|spi
operator|.
name|PaxAppender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ConfigurationAdmin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|osgi
operator|.
name|service
operator|.
name|cm
operator|.
name|ManagedService
import|;
end_import

begin_class
specifier|public
class|class
name|Activator
extends|extends
name|BaseActivator
implements|implements
name|ManagedService
block|{
annotation|@
name|Override
specifier|protected
name|void
name|doOpen
parameter_list|()
throws|throws
name|Exception
block|{
name|manage
argument_list|(
literal|"org.apache.karaf.log"
argument_list|)
expr_stmt|;
name|trackService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|doStart
parameter_list|()
throws|throws
name|Exception
block|{
name|ConfigurationAdmin
name|configurationAdmin
init|=
name|getTrackedService
argument_list|(
name|ConfigurationAdmin
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|configurationAdmin
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|int
name|size
init|=
name|getInt
argument_list|(
literal|"size"
argument_list|,
literal|500
argument_list|)
decl_stmt|;
name|String
name|pattern
init|=
name|getString
argument_list|(
literal|"pattern"
argument_list|,
literal|"%d{ABSOLUTE} | %-5.5p | %-16.16t | %-32.32c{1} | %-32.32C %4L | %m%n"
argument_list|)
decl_stmt|;
name|String
name|fatalColor
init|=
name|getString
argument_list|(
literal|"fatalColor"
argument_list|,
literal|"31"
argument_list|)
decl_stmt|;
name|String
name|errorColor
init|=
name|getString
argument_list|(
literal|"errorColor"
argument_list|,
literal|"31"
argument_list|)
decl_stmt|;
name|String
name|warnColor
init|=
name|getString
argument_list|(
literal|"warnColor"
argument_list|,
literal|"35"
argument_list|)
decl_stmt|;
name|String
name|infoColor
init|=
name|getString
argument_list|(
literal|"infoColor"
argument_list|,
literal|"36"
argument_list|)
decl_stmt|;
name|String
name|debugColor
init|=
name|getString
argument_list|(
literal|"debugColor"
argument_list|,
literal|"39"
argument_list|)
decl_stmt|;
name|String
name|traceColor
init|=
name|getString
argument_list|(
literal|"traceColor"
argument_list|,
literal|"39"
argument_list|)
decl_stmt|;
name|LruList
name|events
init|=
operator|new
name|LruList
argument_list|(
name|size
argument_list|)
decl_stmt|;
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|props
init|=
operator|new
name|Hashtable
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
literal|"org.ops4j.pax.logging.appender.name"
argument_list|,
literal|"VmLogAppender"
argument_list|)
expr_stmt|;
name|register
argument_list|(
name|PaxAppender
operator|.
name|class
argument_list|,
name|events
argument_list|,
name|props
argument_list|)
expr_stmt|;
name|LogEventFormatterImpl
name|formatter
init|=
operator|new
name|LogEventFormatterImpl
argument_list|()
decl_stmt|;
name|formatter
operator|.
name|setPattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|setFatalColor
argument_list|(
name|fatalColor
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|setErrorColor
argument_list|(
name|errorColor
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|setWarnColor
argument_list|(
name|warnColor
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|setInfoColor
argument_list|(
name|infoColor
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|setDebugColor
argument_list|(
name|debugColor
argument_list|)
expr_stmt|;
name|formatter
operator|.
name|setTraceColor
argument_list|(
name|traceColor
argument_list|)
expr_stmt|;
name|register
argument_list|(
name|LogEventFormatter
operator|.
name|class
argument_list|,
name|formatter
argument_list|)
expr_stmt|;
name|LogServiceImpl
name|logService
init|=
operator|new
name|LogServiceImpl
argument_list|(
name|configurationAdmin
argument_list|,
name|events
argument_list|)
decl_stmt|;
name|register
argument_list|(
name|LogService
operator|.
name|class
argument_list|,
name|logService
argument_list|)
expr_stmt|;
name|LogMBeanImpl
name|securityMBean
init|=
operator|new
name|LogMBeanImpl
argument_list|(
name|logService
argument_list|)
decl_stmt|;
name|registerMBean
argument_list|(
name|securityMBean
argument_list|,
literal|"type=log"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit


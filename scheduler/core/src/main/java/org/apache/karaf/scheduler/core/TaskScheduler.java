begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one or more  * contributor license agreements.  See the NOTICE file distributed with  * this work for additional information regarding copyright ownership.  * The ASF licenses this file to You under the Apache License, Version 2.0  * (the "License"); you may not use this file except in compliance with  * the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|karaf
operator|.
name|scheduler
operator|.
name|core
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Timer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_class
specifier|public
class|class
name|TaskScheduler
block|{
specifier|private
specifier|final
name|Timer
name|timer
init|=
operator|new
name|Timer
argument_list|()
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|KarafTimerTask
argument_list|>
name|tasks
init|=
operator|new
name|ConcurrentHashMap
argument_list|<
name|String
argument_list|,
name|KarafTimerTask
argument_list|>
argument_list|()
decl_stmt|;
comment|/**      * Schedule a {@link KarafTimerTask}      * @param task      */
specifier|public
name|void
name|schedule
parameter_list|(
name|KarafTimerTask
name|task
parameter_list|)
block|{
if|if
condition|(
name|task
operator|!=
literal|null
condition|)
block|{
name|tasks
operator|.
name|put
argument_list|(
name|task
operator|.
name|getId
argument_list|()
argument_list|,
name|task
argument_list|)
expr_stmt|;
name|timer
operator|.
name|schedule
argument_list|(
name|task
argument_list|,
literal|0
argument_list|,
name|task
operator|.
name|getSchedulePeriod
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Unschedule a {@link KarafTimerTask}      * @param id The id of the task to unschedule.      */
specifier|public
name|void
name|unschedule
parameter_list|(
name|String
name|id
parameter_list|)
block|{
if|if
condition|(
name|id
operator|!=
literal|null
condition|)
block|{
name|KarafTimerTask
name|task
init|=
name|tasks
operator|.
name|remove
argument_list|(
name|id
argument_list|)
decl_stmt|;
if|if
condition|(
name|task
operator|!=
literal|null
condition|)
block|{
name|task
operator|.
name|cancel
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

